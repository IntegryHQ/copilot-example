/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@whatwg-node";
exports.ids = ["vendor-chunks/@whatwg-node"];
exports.modules = {

/***/ "(rsc)/./node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const shouldSkipPonyfill = __webpack_require__(/*! ./shouldSkipPonyfill */ \"(rsc)/./node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\");\n\nmodule.exports = function createNodePonyfill(opts = {}) {\n  const ponyfills = {};\n  \n  ponyfills.URLPattern = globalThis.URLPattern;\n\n  // We call this previously to patch `Bun`\n  if (!ponyfills.URLPattern) {\n    const urlPatternModule = __webpack_require__(/*! urlpattern-polyfill */ \"(rsc)/./node_modules/urlpattern-polyfill/index.cjs\");\n    ponyfills.URLPattern = urlPatternModule.URLPattern;\n  }\n\n  if (opts.skipPonyfill || shouldSkipPonyfill()) {\n    return {\n      fetch: globalThis.fetch,\n      Headers: globalThis.Headers,\n      Request: globalThis.Request,\n      Response: globalThis.Response,\n      FormData: globalThis.FormData,\n      ReadableStream: globalThis.ReadableStream,\n      WritableStream: globalThis.WritableStream,\n      TransformStream: globalThis.TransformStream,\n      CompressionStream: globalThis.CompressionStream,\n      DecompressionStream: globalThis.DecompressionStream,\n      Blob: globalThis.Blob,\n      File: globalThis.File,\n      crypto: globalThis.crypto,\n      btoa: globalThis.btoa,\n      TextEncoder: globalThis.TextEncoder,\n      TextDecoder: globalThis.TextDecoder,\n      URLPattern: ponyfills.URLPattern,\n      URL: globalThis.URL,\n      URLSearchParams: globalThis.URLSearchParams\n    };\n  }\n\n  const newNodeFetch = __webpack_require__(/*! @whatwg-node/node-fetch */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/index.js\");\n\n  ponyfills.fetch = newNodeFetch.fetch;\n  ponyfills.Request = newNodeFetch.Request;\n  ponyfills.Response = newNodeFetch.Response;\n  ponyfills.Headers = newNodeFetch.Headers;\n  ponyfills.FormData = newNodeFetch.FormData;\n  ponyfills.ReadableStream = newNodeFetch.ReadableStream;\n\n  ponyfills.URL = newNodeFetch.URL;\n  ponyfills.URLSearchParams = newNodeFetch.URLSearchParams;\n\n  ponyfills.WritableStream = newNodeFetch.WritableStream;\n  ponyfills.TransformStream = newNodeFetch.TransformStream;\n  ponyfills.CompressionStream = newNodeFetch.CompressionStream;\n  ponyfills.DecompressionStream = newNodeFetch.DecompressionStream;\n\n  ponyfills.Blob = newNodeFetch.Blob;\n  ponyfills.File = newNodeFetch.File;\n  ponyfills.crypto = globalThis.crypto;\n  ponyfills.btoa = newNodeFetch.btoa;\n  ponyfills.TextEncoder = newNodeFetch.TextEncoder;\n  ponyfills.TextDecoder = newNodeFetch.TextDecoder;\n\n  if (opts.formDataLimits) {\n    ponyfills.Body = class Body extends newNodeFetch.Body {\n      constructor(body, userOpts) {\n        super(body, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n    ponyfills.Request = class Request extends newNodeFetch.Request {\n      constructor(input, userOpts) {\n        super(input, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n    ponyfills.Response = class Response extends newNodeFetch.Response {\n      constructor(body, userOpts) {\n        super(body, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n  }\n\n  if (!ponyfills.crypto) {\n    const cryptoModule = __webpack_require__(/*! crypto */ \"crypto\");\n    ponyfills.crypto = cryptoModule.webcrypto;\n  }\n\n  return ponyfills;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3QvY3JlYXRlLW5vZGUtcG9ueWZpbGwuanMiLCJtYXBwaW5ncyI6IkFBQUEsMkJBQTJCLG1CQUFPLENBQUMsZ0dBQXNCOztBQUV6RCxzREFBc0Q7QUFDdEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw2QkFBNkIsbUJBQU8sQ0FBQywrRUFBcUI7QUFDMUQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHVCQUF1QixtQkFBTyxDQUFDLDBGQUF5Qjs7QUFFeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx5QkFBeUIsbUJBQU8sQ0FBQyxzQkFBUTtBQUN6QztBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3QvY3JlYXRlLW5vZGUtcG9ueWZpbGwuanM/Mjc2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzaG91bGRTa2lwUG9ueWZpbGwgPSByZXF1aXJlKCcuL3Nob3VsZFNraXBQb255ZmlsbCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNyZWF0ZU5vZGVQb255ZmlsbChvcHRzID0ge30pIHtcbiAgY29uc3QgcG9ueWZpbGxzID0ge307XG4gIFxuICBwb255ZmlsbHMuVVJMUGF0dGVybiA9IGdsb2JhbFRoaXMuVVJMUGF0dGVybjtcblxuICAvLyBXZSBjYWxsIHRoaXMgcHJldmlvdXNseSB0byBwYXRjaCBgQnVuYFxuICBpZiAoIXBvbnlmaWxscy5VUkxQYXR0ZXJuKSB7XG4gICAgY29uc3QgdXJsUGF0dGVybk1vZHVsZSA9IHJlcXVpcmUoJ3VybHBhdHRlcm4tcG9seWZpbGwnKTtcbiAgICBwb255ZmlsbHMuVVJMUGF0dGVybiA9IHVybFBhdHRlcm5Nb2R1bGUuVVJMUGF0dGVybjtcbiAgfVxuXG4gIGlmIChvcHRzLnNraXBQb255ZmlsbCB8fCBzaG91bGRTa2lwUG9ueWZpbGwoKSkge1xuICAgIHJldHVybiB7XG4gICAgICBmZXRjaDogZ2xvYmFsVGhpcy5mZXRjaCxcbiAgICAgIEhlYWRlcnM6IGdsb2JhbFRoaXMuSGVhZGVycyxcbiAgICAgIFJlcXVlc3Q6IGdsb2JhbFRoaXMuUmVxdWVzdCxcbiAgICAgIFJlc3BvbnNlOiBnbG9iYWxUaGlzLlJlc3BvbnNlLFxuICAgICAgRm9ybURhdGE6IGdsb2JhbFRoaXMuRm9ybURhdGEsXG4gICAgICBSZWFkYWJsZVN0cmVhbTogZ2xvYmFsVGhpcy5SZWFkYWJsZVN0cmVhbSxcbiAgICAgIFdyaXRhYmxlU3RyZWFtOiBnbG9iYWxUaGlzLldyaXRhYmxlU3RyZWFtLFxuICAgICAgVHJhbnNmb3JtU3RyZWFtOiBnbG9iYWxUaGlzLlRyYW5zZm9ybVN0cmVhbSxcbiAgICAgIENvbXByZXNzaW9uU3RyZWFtOiBnbG9iYWxUaGlzLkNvbXByZXNzaW9uU3RyZWFtLFxuICAgICAgRGVjb21wcmVzc2lvblN0cmVhbTogZ2xvYmFsVGhpcy5EZWNvbXByZXNzaW9uU3RyZWFtLFxuICAgICAgQmxvYjogZ2xvYmFsVGhpcy5CbG9iLFxuICAgICAgRmlsZTogZ2xvYmFsVGhpcy5GaWxlLFxuICAgICAgY3J5cHRvOiBnbG9iYWxUaGlzLmNyeXB0byxcbiAgICAgIGJ0b2E6IGdsb2JhbFRoaXMuYnRvYSxcbiAgICAgIFRleHRFbmNvZGVyOiBnbG9iYWxUaGlzLlRleHRFbmNvZGVyLFxuICAgICAgVGV4dERlY29kZXI6IGdsb2JhbFRoaXMuVGV4dERlY29kZXIsXG4gICAgICBVUkxQYXR0ZXJuOiBwb255ZmlsbHMuVVJMUGF0dGVybixcbiAgICAgIFVSTDogZ2xvYmFsVGhpcy5VUkwsXG4gICAgICBVUkxTZWFyY2hQYXJhbXM6IGdsb2JhbFRoaXMuVVJMU2VhcmNoUGFyYW1zXG4gICAgfTtcbiAgfVxuXG4gIGNvbnN0IG5ld05vZGVGZXRjaCA9IHJlcXVpcmUoJ0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoJyk7XG5cbiAgcG9ueWZpbGxzLmZldGNoID0gbmV3Tm9kZUZldGNoLmZldGNoO1xuICBwb255ZmlsbHMuUmVxdWVzdCA9IG5ld05vZGVGZXRjaC5SZXF1ZXN0O1xuICBwb255ZmlsbHMuUmVzcG9uc2UgPSBuZXdOb2RlRmV0Y2guUmVzcG9uc2U7XG4gIHBvbnlmaWxscy5IZWFkZXJzID0gbmV3Tm9kZUZldGNoLkhlYWRlcnM7XG4gIHBvbnlmaWxscy5Gb3JtRGF0YSA9IG5ld05vZGVGZXRjaC5Gb3JtRGF0YTtcbiAgcG9ueWZpbGxzLlJlYWRhYmxlU3RyZWFtID0gbmV3Tm9kZUZldGNoLlJlYWRhYmxlU3RyZWFtO1xuXG4gIHBvbnlmaWxscy5VUkwgPSBuZXdOb2RlRmV0Y2guVVJMO1xuICBwb255ZmlsbHMuVVJMU2VhcmNoUGFyYW1zID0gbmV3Tm9kZUZldGNoLlVSTFNlYXJjaFBhcmFtcztcblxuICBwb255ZmlsbHMuV3JpdGFibGVTdHJlYW0gPSBuZXdOb2RlRmV0Y2guV3JpdGFibGVTdHJlYW07XG4gIHBvbnlmaWxscy5UcmFuc2Zvcm1TdHJlYW0gPSBuZXdOb2RlRmV0Y2guVHJhbnNmb3JtU3RyZWFtO1xuICBwb255ZmlsbHMuQ29tcHJlc3Npb25TdHJlYW0gPSBuZXdOb2RlRmV0Y2guQ29tcHJlc3Npb25TdHJlYW07XG4gIHBvbnlmaWxscy5EZWNvbXByZXNzaW9uU3RyZWFtID0gbmV3Tm9kZUZldGNoLkRlY29tcHJlc3Npb25TdHJlYW07XG5cbiAgcG9ueWZpbGxzLkJsb2IgPSBuZXdOb2RlRmV0Y2guQmxvYjtcbiAgcG9ueWZpbGxzLkZpbGUgPSBuZXdOb2RlRmV0Y2guRmlsZTtcbiAgcG9ueWZpbGxzLmNyeXB0byA9IGdsb2JhbFRoaXMuY3J5cHRvO1xuICBwb255ZmlsbHMuYnRvYSA9IG5ld05vZGVGZXRjaC5idG9hO1xuICBwb255ZmlsbHMuVGV4dEVuY29kZXIgPSBuZXdOb2RlRmV0Y2guVGV4dEVuY29kZXI7XG4gIHBvbnlmaWxscy5UZXh0RGVjb2RlciA9IG5ld05vZGVGZXRjaC5UZXh0RGVjb2RlcjtcblxuICBpZiAob3B0cy5mb3JtRGF0YUxpbWl0cykge1xuICAgIHBvbnlmaWxscy5Cb2R5ID0gY2xhc3MgQm9keSBleHRlbmRzIG5ld05vZGVGZXRjaC5Cb2R5IHtcbiAgICAgIGNvbnN0cnVjdG9yKGJvZHksIHVzZXJPcHRzKSB7XG4gICAgICAgIHN1cGVyKGJvZHksIHtcbiAgICAgICAgICBmb3JtRGF0YUxpbWl0czogb3B0cy5mb3JtRGF0YUxpbWl0cyxcbiAgICAgICAgICAuLi51c2VyT3B0cyxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICAgIHBvbnlmaWxscy5SZXF1ZXN0ID0gY2xhc3MgUmVxdWVzdCBleHRlbmRzIG5ld05vZGVGZXRjaC5SZXF1ZXN0IHtcbiAgICAgIGNvbnN0cnVjdG9yKGlucHV0LCB1c2VyT3B0cykge1xuICAgICAgICBzdXBlcihpbnB1dCwge1xuICAgICAgICAgIGZvcm1EYXRhTGltaXRzOiBvcHRzLmZvcm1EYXRhTGltaXRzLFxuICAgICAgICAgIC4uLnVzZXJPcHRzLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gICAgcG9ueWZpbGxzLlJlc3BvbnNlID0gY2xhc3MgUmVzcG9uc2UgZXh0ZW5kcyBuZXdOb2RlRmV0Y2guUmVzcG9uc2Uge1xuICAgICAgY29uc3RydWN0b3IoYm9keSwgdXNlck9wdHMpIHtcbiAgICAgICAgc3VwZXIoYm9keSwge1xuICAgICAgICAgIGZvcm1EYXRhTGltaXRzOiBvcHRzLmZvcm1EYXRhTGltaXRzLFxuICAgICAgICAgIC4uLnVzZXJPcHRzLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBpZiAoIXBvbnlmaWxscy5jcnlwdG8pIHtcbiAgICBjb25zdCBjcnlwdG9Nb2R1bGUgPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuICAgIHBvbnlmaWxscy5jcnlwdG8gPSBjcnlwdG9Nb2R1bGUud2ViY3J5cHRvO1xuICB9XG5cbiAgcmV0dXJuIHBvbnlmaWxscztcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/fetch/dist/node-ponyfill.js":
/*!***************************************************************!*\
  !*** ./node_modules/@whatwg-node/fetch/dist/node-ponyfill.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nconst createNodePonyfill = __webpack_require__(/*! ./create-node-ponyfill */ \"(rsc)/./node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js\");\nconst shouldSkipPonyfill = __webpack_require__(/*! ./shouldSkipPonyfill */ \"(rsc)/./node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\");\nconst ponyfills = createNodePonyfill();\n\nif (!shouldSkipPonyfill()) {\n  try {\n    const nodelibcurlName = 'node-libcurl'\n    globalThis.libcurl = globalThis.libcurl || __webpack_require__(\"(rsc)/./node_modules/@whatwg-node/fetch/dist sync recursive\")(nodelibcurlName);\n  } catch (e) { }\n}\n\nmodule.exports.fetch = ponyfills.fetch;\nmodule.exports.Headers = ponyfills.Headers;\nmodule.exports.Request = ponyfills.Request;\nmodule.exports.Response = ponyfills.Response;\nmodule.exports.FormData = ponyfills.FormData;\nmodule.exports.ReadableStream = ponyfills.ReadableStream;\nmodule.exports.WritableStream = ponyfills.WritableStream;\nmodule.exports.TransformStream = ponyfills.TransformStream;\nmodule.exports.CompressionStream = ponyfills.CompressionStream;\nmodule.exports.DecompressionStream = ponyfills.DecompressionStream;\nmodule.exports.Blob = ponyfills.Blob;\nmodule.exports.File = ponyfills.File;\nmodule.exports.crypto = ponyfills.crypto;\nmodule.exports.btoa = ponyfills.btoa;\nmodule.exports.TextEncoder = ponyfills.TextEncoder;\nmodule.exports.TextDecoder = ponyfills.TextDecoder;\nmodule.exports.URLPattern = ponyfills.URLPattern;\nmodule.exports.URL = ponyfills.URL;\nmodule.exports.URLSearchParams = ponyfills.URLSearchParams;\n\nexports.createFetch = createNodePonyfill;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3Qvbm9kZS1wb255ZmlsbC5qcyIsIm1hcHBpbmdzIjoiO0FBQ0EsMkJBQTJCLG1CQUFPLENBQUMsb0dBQXdCO0FBQzNELDJCQUEyQixtQkFBTyxDQUFDLGdHQUFzQjtBQUN6RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsbUZBQVEsZUFBZSxDQUFDO0FBQ3ZFLElBQUk7QUFDSjs7QUFFQSxvQkFBb0I7QUFDcEIsc0JBQXNCO0FBQ3RCLHNCQUFzQjtBQUN0Qix1QkFBdUI7QUFDdkIsdUJBQXVCO0FBQ3ZCLDZCQUE2QjtBQUM3Qiw2QkFBNkI7QUFDN0IsOEJBQThCO0FBQzlCLGdDQUFnQztBQUNoQyxrQ0FBa0M7QUFDbEMsbUJBQW1CO0FBQ25CLG1CQUFtQjtBQUNuQixxQkFBcUI7QUFDckIsbUJBQW1CO0FBQ25CLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIseUJBQXlCO0FBQ3pCLGtCQUFrQjtBQUNsQiw4QkFBOEI7O0FBRTlCLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvZmV0Y2gvZGlzdC9ub2RlLXBvbnlmaWxsLmpzP2FiMGUiXSwic291cmNlc0NvbnRlbnQiOlsiXG5jb25zdCBjcmVhdGVOb2RlUG9ueWZpbGwgPSByZXF1aXJlKCcuL2NyZWF0ZS1ub2RlLXBvbnlmaWxsJyk7XG5jb25zdCBzaG91bGRTa2lwUG9ueWZpbGwgPSByZXF1aXJlKCcuL3Nob3VsZFNraXBQb255ZmlsbCcpO1xuY29uc3QgcG9ueWZpbGxzID0gY3JlYXRlTm9kZVBvbnlmaWxsKCk7XG5cbmlmICghc2hvdWxkU2tpcFBvbnlmaWxsKCkpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBub2RlbGliY3VybE5hbWUgPSAnbm9kZS1saWJjdXJsJ1xuICAgIGdsb2JhbFRoaXMubGliY3VybCA9IGdsb2JhbFRoaXMubGliY3VybCB8fCByZXF1aXJlKG5vZGVsaWJjdXJsTmFtZSk7XG4gIH0gY2F0Y2ggKGUpIHsgfVxufVxuXG5tb2R1bGUuZXhwb3J0cy5mZXRjaCA9IHBvbnlmaWxscy5mZXRjaDtcbm1vZHVsZS5leHBvcnRzLkhlYWRlcnMgPSBwb255ZmlsbHMuSGVhZGVycztcbm1vZHVsZS5leHBvcnRzLlJlcXVlc3QgPSBwb255ZmlsbHMuUmVxdWVzdDtcbm1vZHVsZS5leHBvcnRzLlJlc3BvbnNlID0gcG9ueWZpbGxzLlJlc3BvbnNlO1xubW9kdWxlLmV4cG9ydHMuRm9ybURhdGEgPSBwb255ZmlsbHMuRm9ybURhdGE7XG5tb2R1bGUuZXhwb3J0cy5SZWFkYWJsZVN0cmVhbSA9IHBvbnlmaWxscy5SZWFkYWJsZVN0cmVhbTtcbm1vZHVsZS5leHBvcnRzLldyaXRhYmxlU3RyZWFtID0gcG9ueWZpbGxzLldyaXRhYmxlU3RyZWFtO1xubW9kdWxlLmV4cG9ydHMuVHJhbnNmb3JtU3RyZWFtID0gcG9ueWZpbGxzLlRyYW5zZm9ybVN0cmVhbTtcbm1vZHVsZS5leHBvcnRzLkNvbXByZXNzaW9uU3RyZWFtID0gcG9ueWZpbGxzLkNvbXByZXNzaW9uU3RyZWFtO1xubW9kdWxlLmV4cG9ydHMuRGVjb21wcmVzc2lvblN0cmVhbSA9IHBvbnlmaWxscy5EZWNvbXByZXNzaW9uU3RyZWFtO1xubW9kdWxlLmV4cG9ydHMuQmxvYiA9IHBvbnlmaWxscy5CbG9iO1xubW9kdWxlLmV4cG9ydHMuRmlsZSA9IHBvbnlmaWxscy5GaWxlO1xubW9kdWxlLmV4cG9ydHMuY3J5cHRvID0gcG9ueWZpbGxzLmNyeXB0bztcbm1vZHVsZS5leHBvcnRzLmJ0b2EgPSBwb255ZmlsbHMuYnRvYTtcbm1vZHVsZS5leHBvcnRzLlRleHRFbmNvZGVyID0gcG9ueWZpbGxzLlRleHRFbmNvZGVyO1xubW9kdWxlLmV4cG9ydHMuVGV4dERlY29kZXIgPSBwb255ZmlsbHMuVGV4dERlY29kZXI7XG5tb2R1bGUuZXhwb3J0cy5VUkxQYXR0ZXJuID0gcG9ueWZpbGxzLlVSTFBhdHRlcm47XG5tb2R1bGUuZXhwb3J0cy5VUkwgPSBwb255ZmlsbHMuVVJMO1xubW9kdWxlLmV4cG9ydHMuVVJMU2VhcmNoUGFyYW1zID0gcG9ueWZpbGxzLlVSTFNlYXJjaFBhcmFtcztcblxuZXhwb3J0cy5jcmVhdGVGZXRjaCA9IGNyZWF0ZU5vZGVQb255ZmlsbDtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js":
/*!********************************************************************!*\
  !*** ./node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\nfunction isNextJs() {\n  return Object.keys(globalThis).some(key => key.startsWith('__NEXT'))\n}\n\nmodule.exports = function shouldSkipPonyfill() {\n  // Bun and Deno already have a Fetch API\n  if (globalThis.Deno) {\n    return true\n  }\n  if (process.versions.bun) {\n    return true\n  }\n  if (isNextJs()) {\n    return true\n  }\n  return false\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3Qvc2hvdWxkU2tpcFBvbnlmaWxsLmpzIiwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3Qvc2hvdWxkU2tpcFBvbnlmaWxsLmpzPzkzOGQiXSwic291cmNlc0NvbnRlbnQiOlsiXG5mdW5jdGlvbiBpc05leHRKcygpIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKGdsb2JhbFRoaXMpLnNvbWUoa2V5ID0+IGtleS5zdGFydHNXaXRoKCdfX05FWFQnKSlcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzaG91bGRTa2lwUG9ueWZpbGwoKSB7XG4gIC8vIEJ1biBhbmQgRGVubyBhbHJlYWR5IGhhdmUgYSBGZXRjaCBBUElcbiAgaWYgKGdsb2JhbFRoaXMuRGVubykge1xuICAgIHJldHVybiB0cnVlXG4gIH1cbiAgaWYgKHByb2Nlc3MudmVyc2lvbnMuYnVuKSB7XG4gICAgcmV0dXJuIHRydWVcbiAgfVxuICBpZiAoaXNOZXh0SnMoKSkge1xuICAgIHJldHVybiB0cnVlXG4gIH1cbiAgcmV0dXJuIGZhbHNlXG59Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js ***!
  \*******************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const shouldSkipPonyfill = __webpack_require__(/*! ./shouldSkipPonyfill */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\");\n\nmodule.exports = function createNodePonyfill(opts = {}) {\n  const ponyfills = {};\n  \n  ponyfills.URLPattern = globalThis.URLPattern;\n\n  // We call this previously to patch `Bun`\n  if (!ponyfills.URLPattern) {\n    const urlPatternModule = __webpack_require__(/*! urlpattern-polyfill */ \"(rsc)/./node_modules/urlpattern-polyfill/index.cjs\");\n    ponyfills.URLPattern = urlPatternModule.URLPattern;\n  }\n\n  if (opts.skipPonyfill || shouldSkipPonyfill()) {\n    return {\n      fetch: globalThis.fetch,\n      Headers: globalThis.Headers,\n      Request: globalThis.Request,\n      Response: globalThis.Response,\n      FormData: globalThis.FormData,\n      ReadableStream: globalThis.ReadableStream,\n      WritableStream: globalThis.WritableStream,\n      TransformStream: globalThis.TransformStream,\n      CompressionStream: globalThis.CompressionStream,\n      DecompressionStream: globalThis.DecompressionStream,\n      TextDecoderStream: globalThis.TextDecoderStream,\n      TextEncoderStream: globalThis.TextEncoderStream,\n      Blob: globalThis.Blob,\n      File: globalThis.File,\n      crypto: globalThis.crypto,\n      btoa: globalThis.btoa,\n      TextEncoder: globalThis.TextEncoder,\n      TextDecoder: globalThis.TextDecoder,\n      URLPattern: ponyfills.URLPattern,\n      URL: globalThis.URL,\n      URLSearchParams: globalThis.URLSearchParams\n    };\n  }\n\n  const newNodeFetch = __webpack_require__(/*! @whatwg-node/node-fetch */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/index.js\");\n\n  ponyfills.fetch = newNodeFetch.fetch;\n  ponyfills.Request = newNodeFetch.Request;\n  ponyfills.Response = newNodeFetch.Response;\n  ponyfills.Headers = newNodeFetch.Headers;\n  ponyfills.FormData = newNodeFetch.FormData;\n  ponyfills.ReadableStream = newNodeFetch.ReadableStream;\n\n  ponyfills.URL = newNodeFetch.URL;\n  ponyfills.URLSearchParams = newNodeFetch.URLSearchParams;\n\n  ponyfills.WritableStream = newNodeFetch.WritableStream;\n  ponyfills.TransformStream = newNodeFetch.TransformStream;\n  ponyfills.CompressionStream = newNodeFetch.CompressionStream;\n  ponyfills.DecompressionStream = newNodeFetch.DecompressionStream;\n  ponyfills.TextDecoderStream = newNodeFetch.TextDecoderStream;\n  ponyfills.TextEncoderStream = newNodeFetch.TextEncoderStream;\n\n  ponyfills.Blob = newNodeFetch.Blob;\n  ponyfills.File = newNodeFetch.File;\n  ponyfills.crypto = globalThis.crypto;\n  ponyfills.btoa = newNodeFetch.btoa;\n  ponyfills.TextEncoder = newNodeFetch.TextEncoder;\n  ponyfills.TextDecoder = newNodeFetch.TextDecoder;\n\n  if (opts.formDataLimits) {\n    ponyfills.Body = class Body extends newNodeFetch.Body {\n      constructor(body, userOpts) {\n        super(body, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n    ponyfills.Request = class Request extends newNodeFetch.Request {\n      constructor(input, userOpts) {\n        super(input, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n    ponyfills.Response = class Response extends newNodeFetch.Response {\n      constructor(body, userOpts) {\n        super(body, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n  }\n\n  if (!ponyfills.crypto) {\n    const cryptoModule = __webpack_require__(/*! crypto */ \"crypto\");\n    ponyfills.crypto = cryptoModule.webcrypto;\n  }\n\n  return ponyfills;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3QvY3JlYXRlLW5vZGUtcG9ueWZpbGwuanMiLCJtYXBwaW5ncyI6IkFBQUEsMkJBQTJCLG1CQUFPLENBQUMsaUlBQXNCOztBQUV6RCxzREFBc0Q7QUFDdEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw2QkFBNkIsbUJBQU8sQ0FBQywrRUFBcUI7QUFDMUQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx1QkFBdUIsbUJBQU8sQ0FBQywySEFBeUI7O0FBRXhEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHlCQUF5QixtQkFBTyxDQUFDLHNCQUFRO0FBQ3pDO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvc2VydmVyL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvZmV0Y2gvZGlzdC9jcmVhdGUtbm9kZS1wb255ZmlsbC5qcz85YzU1Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHNob3VsZFNraXBQb255ZmlsbCA9IHJlcXVpcmUoJy4vc2hvdWxkU2tpcFBvbnlmaWxsJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3JlYXRlTm9kZVBvbnlmaWxsKG9wdHMgPSB7fSkge1xuICBjb25zdCBwb255ZmlsbHMgPSB7fTtcbiAgXG4gIHBvbnlmaWxscy5VUkxQYXR0ZXJuID0gZ2xvYmFsVGhpcy5VUkxQYXR0ZXJuO1xuXG4gIC8vIFdlIGNhbGwgdGhpcyBwcmV2aW91c2x5IHRvIHBhdGNoIGBCdW5gXG4gIGlmICghcG9ueWZpbGxzLlVSTFBhdHRlcm4pIHtcbiAgICBjb25zdCB1cmxQYXR0ZXJuTW9kdWxlID0gcmVxdWlyZSgndXJscGF0dGVybi1wb2x5ZmlsbCcpO1xuICAgIHBvbnlmaWxscy5VUkxQYXR0ZXJuID0gdXJsUGF0dGVybk1vZHVsZS5VUkxQYXR0ZXJuO1xuICB9XG5cbiAgaWYgKG9wdHMuc2tpcFBvbnlmaWxsIHx8IHNob3VsZFNraXBQb255ZmlsbCgpKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGZldGNoOiBnbG9iYWxUaGlzLmZldGNoLFxuICAgICAgSGVhZGVyczogZ2xvYmFsVGhpcy5IZWFkZXJzLFxuICAgICAgUmVxdWVzdDogZ2xvYmFsVGhpcy5SZXF1ZXN0LFxuICAgICAgUmVzcG9uc2U6IGdsb2JhbFRoaXMuUmVzcG9uc2UsXG4gICAgICBGb3JtRGF0YTogZ2xvYmFsVGhpcy5Gb3JtRGF0YSxcbiAgICAgIFJlYWRhYmxlU3RyZWFtOiBnbG9iYWxUaGlzLlJlYWRhYmxlU3RyZWFtLFxuICAgICAgV3JpdGFibGVTdHJlYW06IGdsb2JhbFRoaXMuV3JpdGFibGVTdHJlYW0sXG4gICAgICBUcmFuc2Zvcm1TdHJlYW06IGdsb2JhbFRoaXMuVHJhbnNmb3JtU3RyZWFtLFxuICAgICAgQ29tcHJlc3Npb25TdHJlYW06IGdsb2JhbFRoaXMuQ29tcHJlc3Npb25TdHJlYW0sXG4gICAgICBEZWNvbXByZXNzaW9uU3RyZWFtOiBnbG9iYWxUaGlzLkRlY29tcHJlc3Npb25TdHJlYW0sXG4gICAgICBUZXh0RGVjb2RlclN0cmVhbTogZ2xvYmFsVGhpcy5UZXh0RGVjb2RlclN0cmVhbSxcbiAgICAgIFRleHRFbmNvZGVyU3RyZWFtOiBnbG9iYWxUaGlzLlRleHRFbmNvZGVyU3RyZWFtLFxuICAgICAgQmxvYjogZ2xvYmFsVGhpcy5CbG9iLFxuICAgICAgRmlsZTogZ2xvYmFsVGhpcy5GaWxlLFxuICAgICAgY3J5cHRvOiBnbG9iYWxUaGlzLmNyeXB0byxcbiAgICAgIGJ0b2E6IGdsb2JhbFRoaXMuYnRvYSxcbiAgICAgIFRleHRFbmNvZGVyOiBnbG9iYWxUaGlzLlRleHRFbmNvZGVyLFxuICAgICAgVGV4dERlY29kZXI6IGdsb2JhbFRoaXMuVGV4dERlY29kZXIsXG4gICAgICBVUkxQYXR0ZXJuOiBwb255ZmlsbHMuVVJMUGF0dGVybixcbiAgICAgIFVSTDogZ2xvYmFsVGhpcy5VUkwsXG4gICAgICBVUkxTZWFyY2hQYXJhbXM6IGdsb2JhbFRoaXMuVVJMU2VhcmNoUGFyYW1zXG4gICAgfTtcbiAgfVxuXG4gIGNvbnN0IG5ld05vZGVGZXRjaCA9IHJlcXVpcmUoJ0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoJyk7XG5cbiAgcG9ueWZpbGxzLmZldGNoID0gbmV3Tm9kZUZldGNoLmZldGNoO1xuICBwb255ZmlsbHMuUmVxdWVzdCA9IG5ld05vZGVGZXRjaC5SZXF1ZXN0O1xuICBwb255ZmlsbHMuUmVzcG9uc2UgPSBuZXdOb2RlRmV0Y2guUmVzcG9uc2U7XG4gIHBvbnlmaWxscy5IZWFkZXJzID0gbmV3Tm9kZUZldGNoLkhlYWRlcnM7XG4gIHBvbnlmaWxscy5Gb3JtRGF0YSA9IG5ld05vZGVGZXRjaC5Gb3JtRGF0YTtcbiAgcG9ueWZpbGxzLlJlYWRhYmxlU3RyZWFtID0gbmV3Tm9kZUZldGNoLlJlYWRhYmxlU3RyZWFtO1xuXG4gIHBvbnlmaWxscy5VUkwgPSBuZXdOb2RlRmV0Y2guVVJMO1xuICBwb255ZmlsbHMuVVJMU2VhcmNoUGFyYW1zID0gbmV3Tm9kZUZldGNoLlVSTFNlYXJjaFBhcmFtcztcblxuICBwb255ZmlsbHMuV3JpdGFibGVTdHJlYW0gPSBuZXdOb2RlRmV0Y2guV3JpdGFibGVTdHJlYW07XG4gIHBvbnlmaWxscy5UcmFuc2Zvcm1TdHJlYW0gPSBuZXdOb2RlRmV0Y2guVHJhbnNmb3JtU3RyZWFtO1xuICBwb255ZmlsbHMuQ29tcHJlc3Npb25TdHJlYW0gPSBuZXdOb2RlRmV0Y2guQ29tcHJlc3Npb25TdHJlYW07XG4gIHBvbnlmaWxscy5EZWNvbXByZXNzaW9uU3RyZWFtID0gbmV3Tm9kZUZldGNoLkRlY29tcHJlc3Npb25TdHJlYW07XG4gIHBvbnlmaWxscy5UZXh0RGVjb2RlclN0cmVhbSA9IG5ld05vZGVGZXRjaC5UZXh0RGVjb2RlclN0cmVhbTtcbiAgcG9ueWZpbGxzLlRleHRFbmNvZGVyU3RyZWFtID0gbmV3Tm9kZUZldGNoLlRleHRFbmNvZGVyU3RyZWFtO1xuXG4gIHBvbnlmaWxscy5CbG9iID0gbmV3Tm9kZUZldGNoLkJsb2I7XG4gIHBvbnlmaWxscy5GaWxlID0gbmV3Tm9kZUZldGNoLkZpbGU7XG4gIHBvbnlmaWxscy5jcnlwdG8gPSBnbG9iYWxUaGlzLmNyeXB0bztcbiAgcG9ueWZpbGxzLmJ0b2EgPSBuZXdOb2RlRmV0Y2guYnRvYTtcbiAgcG9ueWZpbGxzLlRleHRFbmNvZGVyID0gbmV3Tm9kZUZldGNoLlRleHRFbmNvZGVyO1xuICBwb255ZmlsbHMuVGV4dERlY29kZXIgPSBuZXdOb2RlRmV0Y2guVGV4dERlY29kZXI7XG5cbiAgaWYgKG9wdHMuZm9ybURhdGFMaW1pdHMpIHtcbiAgICBwb255ZmlsbHMuQm9keSA9IGNsYXNzIEJvZHkgZXh0ZW5kcyBuZXdOb2RlRmV0Y2guQm9keSB7XG4gICAgICBjb25zdHJ1Y3Rvcihib2R5LCB1c2VyT3B0cykge1xuICAgICAgICBzdXBlcihib2R5LCB7XG4gICAgICAgICAgZm9ybURhdGFMaW1pdHM6IG9wdHMuZm9ybURhdGFMaW1pdHMsXG4gICAgICAgICAgLi4udXNlck9wdHMsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgICBwb255ZmlsbHMuUmVxdWVzdCA9IGNsYXNzIFJlcXVlc3QgZXh0ZW5kcyBuZXdOb2RlRmV0Y2guUmVxdWVzdCB7XG4gICAgICBjb25zdHJ1Y3RvcihpbnB1dCwgdXNlck9wdHMpIHtcbiAgICAgICAgc3VwZXIoaW5wdXQsIHtcbiAgICAgICAgICBmb3JtRGF0YUxpbWl0czogb3B0cy5mb3JtRGF0YUxpbWl0cyxcbiAgICAgICAgICAuLi51c2VyT3B0cyxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICAgIHBvbnlmaWxscy5SZXNwb25zZSA9IGNsYXNzIFJlc3BvbnNlIGV4dGVuZHMgbmV3Tm9kZUZldGNoLlJlc3BvbnNlIHtcbiAgICAgIGNvbnN0cnVjdG9yKGJvZHksIHVzZXJPcHRzKSB7XG4gICAgICAgIHN1cGVyKGJvZHksIHtcbiAgICAgICAgICBmb3JtRGF0YUxpbWl0czogb3B0cy5mb3JtRGF0YUxpbWl0cyxcbiAgICAgICAgICAuLi51c2VyT3B0cyxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgaWYgKCFwb255ZmlsbHMuY3J5cHRvKSB7XG4gICAgY29uc3QgY3J5cHRvTW9kdWxlID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbiAgICBwb255ZmlsbHMuY3J5cHRvID0gY3J5cHRvTW9kdWxlLndlYmNyeXB0bztcbiAgfVxuXG4gIHJldHVybiBwb255ZmlsbHM7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js ***!
  \************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nconst createNodePonyfill = __webpack_require__(/*! ./create-node-ponyfill */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js\");\nconst shouldSkipPonyfill = __webpack_require__(/*! ./shouldSkipPonyfill */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\");\nconst ponyfills = createNodePonyfill();\n\nif (!shouldSkipPonyfill()) {\n  try {\n    const nodelibcurlName = 'node-libcurl'\n    globalThis.libcurl = globalThis.libcurl || __webpack_require__(\"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/fetch/dist sync recursive\")(nodelibcurlName);\n  } catch (e) { }\n}\n\nmodule.exports.fetch = ponyfills.fetch;\nmodule.exports.Headers = ponyfills.Headers;\nmodule.exports.Request = ponyfills.Request;\nmodule.exports.Response = ponyfills.Response;\nmodule.exports.FormData = ponyfills.FormData;\nmodule.exports.ReadableStream = ponyfills.ReadableStream;\nmodule.exports.WritableStream = ponyfills.WritableStream;\nmodule.exports.TransformStream = ponyfills.TransformStream;\nmodule.exports.CompressionStream = ponyfills.CompressionStream;\nmodule.exports.DecompressionStream = ponyfills.DecompressionStream;\nmodule.exports.TextDecoderStream = ponyfills.TextDecoderStream;\nmodule.exports.TextEncoderStream = ponyfills.TextEncoderStream;\nmodule.exports.Blob = ponyfills.Blob;\nmodule.exports.File = ponyfills.File;\nmodule.exports.crypto = ponyfills.crypto;\nmodule.exports.btoa = ponyfills.btoa;\nmodule.exports.TextEncoder = ponyfills.TextEncoder;\nmodule.exports.TextDecoder = ponyfills.TextDecoder;\nmodule.exports.URLPattern = ponyfills.URLPattern;\nmodule.exports.URL = ponyfills.URL;\nmodule.exports.URLSearchParams = ponyfills.URLSearchParams;\n\nexports.createFetch = createNodePonyfill;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3Qvbm9kZS1wb255ZmlsbC5qcyIsIm1hcHBpbmdzIjoiO0FBQ0EsMkJBQTJCLG1CQUFPLENBQUMscUlBQXdCO0FBQzNELDJCQUEyQixtQkFBTyxDQUFDLGlJQUFzQjtBQUN6RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0Msb0hBQVEsZUFBZSxDQUFDO0FBQ3ZFLElBQUk7QUFDSjs7QUFFQSxvQkFBb0I7QUFDcEIsc0JBQXNCO0FBQ3RCLHNCQUFzQjtBQUN0Qix1QkFBdUI7QUFDdkIsdUJBQXVCO0FBQ3ZCLDZCQUE2QjtBQUM3Qiw2QkFBNkI7QUFDN0IsOEJBQThCO0FBQzlCLGdDQUFnQztBQUNoQyxrQ0FBa0M7QUFDbEMsZ0NBQWdDO0FBQ2hDLGdDQUFnQztBQUNoQyxtQkFBbUI7QUFDbkIsbUJBQW1CO0FBQ25CLHFCQUFxQjtBQUNyQixtQkFBbUI7QUFDbkIsMEJBQTBCO0FBQzFCLDBCQUEwQjtBQUMxQix5QkFBeUI7QUFDekIsa0JBQWtCO0FBQ2xCLDhCQUE4Qjs7QUFFOUIsbUJBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9zZXJ2ZXIvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9mZXRjaC9kaXN0L25vZGUtcG9ueWZpbGwuanM/MzA0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmNvbnN0IGNyZWF0ZU5vZGVQb255ZmlsbCA9IHJlcXVpcmUoJy4vY3JlYXRlLW5vZGUtcG9ueWZpbGwnKTtcbmNvbnN0IHNob3VsZFNraXBQb255ZmlsbCA9IHJlcXVpcmUoJy4vc2hvdWxkU2tpcFBvbnlmaWxsJyk7XG5jb25zdCBwb255ZmlsbHMgPSBjcmVhdGVOb2RlUG9ueWZpbGwoKTtcblxuaWYgKCFzaG91bGRTa2lwUG9ueWZpbGwoKSkge1xuICB0cnkge1xuICAgIGNvbnN0IG5vZGVsaWJjdXJsTmFtZSA9ICdub2RlLWxpYmN1cmwnXG4gICAgZ2xvYmFsVGhpcy5saWJjdXJsID0gZ2xvYmFsVGhpcy5saWJjdXJsIHx8IHJlcXVpcmUobm9kZWxpYmN1cmxOYW1lKTtcbiAgfSBjYXRjaCAoZSkgeyB9XG59XG5cbm1vZHVsZS5leHBvcnRzLmZldGNoID0gcG9ueWZpbGxzLmZldGNoO1xubW9kdWxlLmV4cG9ydHMuSGVhZGVycyA9IHBvbnlmaWxscy5IZWFkZXJzO1xubW9kdWxlLmV4cG9ydHMuUmVxdWVzdCA9IHBvbnlmaWxscy5SZXF1ZXN0O1xubW9kdWxlLmV4cG9ydHMuUmVzcG9uc2UgPSBwb255ZmlsbHMuUmVzcG9uc2U7XG5tb2R1bGUuZXhwb3J0cy5Gb3JtRGF0YSA9IHBvbnlmaWxscy5Gb3JtRGF0YTtcbm1vZHVsZS5leHBvcnRzLlJlYWRhYmxlU3RyZWFtID0gcG9ueWZpbGxzLlJlYWRhYmxlU3RyZWFtO1xubW9kdWxlLmV4cG9ydHMuV3JpdGFibGVTdHJlYW0gPSBwb255ZmlsbHMuV3JpdGFibGVTdHJlYW07XG5tb2R1bGUuZXhwb3J0cy5UcmFuc2Zvcm1TdHJlYW0gPSBwb255ZmlsbHMuVHJhbnNmb3JtU3RyZWFtO1xubW9kdWxlLmV4cG9ydHMuQ29tcHJlc3Npb25TdHJlYW0gPSBwb255ZmlsbHMuQ29tcHJlc3Npb25TdHJlYW07XG5tb2R1bGUuZXhwb3J0cy5EZWNvbXByZXNzaW9uU3RyZWFtID0gcG9ueWZpbGxzLkRlY29tcHJlc3Npb25TdHJlYW07XG5tb2R1bGUuZXhwb3J0cy5UZXh0RGVjb2RlclN0cmVhbSA9IHBvbnlmaWxscy5UZXh0RGVjb2RlclN0cmVhbTtcbm1vZHVsZS5leHBvcnRzLlRleHRFbmNvZGVyU3RyZWFtID0gcG9ueWZpbGxzLlRleHRFbmNvZGVyU3RyZWFtO1xubW9kdWxlLmV4cG9ydHMuQmxvYiA9IHBvbnlmaWxscy5CbG9iO1xubW9kdWxlLmV4cG9ydHMuRmlsZSA9IHBvbnlmaWxscy5GaWxlO1xubW9kdWxlLmV4cG9ydHMuY3J5cHRvID0gcG9ueWZpbGxzLmNyeXB0bztcbm1vZHVsZS5leHBvcnRzLmJ0b2EgPSBwb255ZmlsbHMuYnRvYTtcbm1vZHVsZS5leHBvcnRzLlRleHRFbmNvZGVyID0gcG9ueWZpbGxzLlRleHRFbmNvZGVyO1xubW9kdWxlLmV4cG9ydHMuVGV4dERlY29kZXIgPSBwb255ZmlsbHMuVGV4dERlY29kZXI7XG5tb2R1bGUuZXhwb3J0cy5VUkxQYXR0ZXJuID0gcG9ueWZpbGxzLlVSTFBhdHRlcm47XG5tb2R1bGUuZXhwb3J0cy5VUkwgPSBwb255ZmlsbHMuVVJMO1xubW9kdWxlLmV4cG9ydHMuVVJMU2VhcmNoUGFyYW1zID0gcG9ueWZpbGxzLlVSTFNlYXJjaFBhcmFtcztcblxuZXhwb3J0cy5jcmVhdGVGZXRjaCA9IGNyZWF0ZU5vZGVQb255ZmlsbDtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js ***!
  \*****************************************************************************************************/
/***/ ((module) => {

eval("\nfunction isNextJs() {\n  return Object.keys(globalThis).some(key => key.startsWith('__NEXT'))\n}\n\nmodule.exports = function shouldSkipPonyfill() {\n  if (globalThis.Deno) {\n    return true\n  }\n  if (globalThis.Bun) {\n    return true\n  }\n  if (isNextJs()) {\n    return true\n  }\n  return false\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3Qvc2hvdWxkU2tpcFBvbnlmaWxsLmpzIiwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9zZXJ2ZXIvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9mZXRjaC9kaXN0L3Nob3VsZFNraXBQb255ZmlsbC5qcz8wZTEzIl0sInNvdXJjZXNDb250ZW50IjpbIlxuZnVuY3Rpb24gaXNOZXh0SnMoKSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhnbG9iYWxUaGlzKS5zb21lKGtleSA9PiBrZXkuc3RhcnRzV2l0aCgnX19ORVhUJykpXG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc2hvdWxkU2tpcFBvbnlmaWxsKCkge1xuICBpZiAoZ2xvYmFsVGhpcy5EZW5vKSB7XG4gICAgcmV0dXJuIHRydWVcbiAgfVxuICBpZiAoZ2xvYmFsVGhpcy5CdW4pIHtcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG4gIGlmIChpc05leHRKcygpKSB7XG4gICAgcmV0dXJuIHRydWVcbiAgfVxuICByZXR1cm4gZmFsc2Vcbn0iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/events/cjs/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@whatwg-node/events/cjs/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CustomEvent = void 0;\nexports.CustomEvent = globalThis.CustomEvent ||\n    class PonyfillCustomEvent extends Event {\n        detail = null;\n        constructor(type, eventInitDict) {\n            super(type, eventInitDict);\n            if (eventInitDict?.detail != null) {\n                this.detail = eventInitDict.detail;\n            }\n        }\n        initCustomEvent(type, bubbles, cancelable, detail) {\n            this.initEvent(type, bubbles, cancelable);\n            if (detail != null) {\n                this.detail = detail;\n            }\n        }\n    };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2V2ZW50cy9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2V2ZW50cy9janMvaW5kZXguanM/OGM0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ3VzdG9tRXZlbnQgPSB2b2lkIDA7XG5leHBvcnRzLkN1c3RvbUV2ZW50ID0gZ2xvYmFsVGhpcy5DdXN0b21FdmVudCB8fFxuICAgIGNsYXNzIFBvbnlmaWxsQ3VzdG9tRXZlbnQgZXh0ZW5kcyBFdmVudCB7XG4gICAgICAgIGRldGFpbCA9IG51bGw7XG4gICAgICAgIGNvbnN0cnVjdG9yKHR5cGUsIGV2ZW50SW5pdERpY3QpIHtcbiAgICAgICAgICAgIHN1cGVyKHR5cGUsIGV2ZW50SW5pdERpY3QpO1xuICAgICAgICAgICAgaWYgKGV2ZW50SW5pdERpY3Q/LmRldGFpbCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5kZXRhaWwgPSBldmVudEluaXREaWN0LmRldGFpbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpbml0Q3VzdG9tRXZlbnQodHlwZSwgYnViYmxlcywgY2FuY2VsYWJsZSwgZGV0YWlsKSB7XG4gICAgICAgICAgICB0aGlzLmluaXRFdmVudCh0eXBlLCBidWJibGVzLCBjYW5jZWxhYmxlKTtcbiAgICAgICAgICAgIGlmIChkZXRhaWwgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHRoaXMuZGV0YWlsID0gZGV0YWlsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/events/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Blob.js":
/*!**********************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/Blob.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillBlob = void 0;\nexports.hasBufferMethod = hasBufferMethod;\nexports.hasArrayBufferMethod = hasArrayBufferMethod;\nexports.hasBytesMethod = hasBytesMethod;\nexports.hasTextMethod = hasTextMethod;\nexports.hasSizeProperty = hasSizeProperty;\nexports.hasStreamMethod = hasStreamMethod;\nexports.hasBlobSignature = hasBlobSignature;\nexports.isArrayBuffer = isArrayBuffer;\n/* eslint-disable @typescript-eslint/no-unsafe-declaration-merging */\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction getBlobPartAsBuffer(blobPart) {\n    if (typeof blobPart === 'string') {\n        return Buffer.from(blobPart);\n    }\n    else if (Buffer.isBuffer(blobPart)) {\n        return blobPart;\n    }\n    else if ((0, utils_js_1.isArrayBufferView)(blobPart)) {\n        return Buffer.from(blobPart.buffer, blobPart.byteOffset, blobPart.byteLength);\n    }\n    else {\n        return Buffer.from(blobPart);\n    }\n}\nfunction hasBufferMethod(obj) {\n    return obj != null && obj.buffer != null && typeof obj.buffer === 'function';\n}\nfunction hasArrayBufferMethod(obj) {\n    return obj != null && obj.arrayBuffer != null && typeof obj.arrayBuffer === 'function';\n}\nfunction hasBytesMethod(obj) {\n    return obj != null && obj.bytes != null && typeof obj.bytes === 'function';\n}\nfunction hasTextMethod(obj) {\n    return obj != null && obj.text != null && typeof obj.text === 'function';\n}\nfunction hasSizeProperty(obj) {\n    return obj != null && typeof obj.size === 'number';\n}\nfunction hasStreamMethod(obj) {\n    return obj != null && obj.stream != null && typeof obj.stream === 'function';\n}\nfunction hasBlobSignature(obj) {\n    return obj != null && obj[Symbol.toStringTag] === 'Blob';\n}\nfunction isArrayBuffer(obj) {\n    return obj != null && obj.byteLength != null && obj.slice != null;\n}\n// Will be removed after v14 reaches EOL\n// Needed because v14 doesn't have .stream() implemented\nclass PonyfillBlob {\n    blobParts;\n    type;\n    encoding;\n    _size = null;\n    constructor(blobParts = [], options) {\n        this.blobParts = blobParts;\n        this.type = options?.type || 'application/octet-stream';\n        this.encoding = options?.encoding || 'utf8';\n        this._size = options?.size || null;\n        if (blobParts.length === 1 && hasBlobSignature(blobParts[0])) {\n            return blobParts[0];\n        }\n    }\n    _buffer = null;\n    buffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (hasBufferMethod(blobPart)) {\n                return blobPart.buffer().then(buf => {\n                    this._buffer = buf;\n                    return this._buffer;\n                });\n            }\n            if (hasBytesMethod(blobPart)) {\n                return blobPart.bytes().then(bytes => {\n                    this._buffer = Buffer.from(bytes);\n                    return this._buffer;\n                });\n            }\n            if (hasArrayBufferMethod(blobPart)) {\n                return blobPart.arrayBuffer().then(arrayBuf => {\n                    this._buffer = Buffer.from(arrayBuf, undefined, blobPart.size);\n                    return this._buffer;\n                });\n            }\n            this._buffer = getBlobPartAsBuffer(blobPart);\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        const jobs = [];\n        const bufferChunks = this.blobParts.map((blobPart, i) => {\n            if (hasBufferMethod(blobPart)) {\n                jobs.push(blobPart.buffer().then(buf => {\n                    bufferChunks[i] = buf;\n                }));\n                return undefined;\n            }\n            else if (hasArrayBufferMethod(blobPart)) {\n                jobs.push(blobPart.arrayBuffer().then(arrayBuf => {\n                    bufferChunks[i] = Buffer.from(arrayBuf, undefined, blobPart.size);\n                }));\n                return undefined;\n            }\n            else if (hasBytesMethod(blobPart)) {\n                jobs.push(blobPart.bytes().then(bytes => {\n                    bufferChunks[i] = Buffer.from(bytes);\n                }));\n                return undefined;\n            }\n            else {\n                return getBlobPartAsBuffer(blobPart);\n            }\n        });\n        if (jobs.length > 0) {\n            return Promise.all(jobs).then(() => Buffer.concat(bufferChunks, this._size || undefined));\n        }\n        return (0, utils_js_1.fakePromise)(Buffer.concat(bufferChunks, this._size || undefined));\n    }\n    arrayBuffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            if (isArrayBuffer(this.blobParts[0])) {\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (hasArrayBufferMethod(this.blobParts[0])) {\n                return this.blobParts[0].arrayBuffer();\n            }\n        }\n        return this.buffer();\n    }\n    bytes() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            if (Buffer.isBuffer(this.blobParts[0])) {\n                this._buffer = this.blobParts[0];\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (this.blobParts[0] instanceof Uint8Array) {\n                this._buffer = Buffer.from(this.blobParts[0]);\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (hasBytesMethod(this.blobParts[0])) {\n                return this.blobParts[0].bytes();\n            }\n            if (hasBufferMethod(this.blobParts[0])) {\n                return this.blobParts[0].buffer();\n            }\n        }\n        return this.buffer();\n    }\n    _text = null;\n    text() {\n        if (this._text) {\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (typeof blobPart === 'string') {\n                this._text = blobPart;\n                return (0, utils_js_1.fakePromise)(this._text);\n            }\n            if (hasTextMethod(blobPart)) {\n                return blobPart.text().then(text => {\n                    this._text = text;\n                    return this._text;\n                });\n            }\n            const buf = getBlobPartAsBuffer(blobPart);\n            this._text = buf.toString(this.encoding);\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        return this.buffer().then(buf => {\n            this._text = buf.toString(this.encoding);\n            return this._text;\n        });\n    }\n    get size() {\n        if (this._size == null) {\n            this._size = 0;\n            for (const blobPart of this.blobParts) {\n                if (typeof blobPart === 'string') {\n                    this._size += Buffer.byteLength(blobPart);\n                }\n                else if (hasSizeProperty(blobPart)) {\n                    this._size += blobPart.size;\n                }\n                else if ((0, utils_js_1.isArrayBufferView)(blobPart)) {\n                    this._size += blobPart.byteLength;\n                }\n            }\n        }\n        return this._size;\n    }\n    stream() {\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (hasStreamMethod(blobPart)) {\n                return blobPart.stream();\n            }\n            const buf = getBlobPartAsBuffer(blobPart);\n            return new ReadableStream_js_1.PonyfillReadableStream({\n                start: controller => {\n                    controller.enqueue(buf);\n                    controller.close();\n                },\n            });\n        }\n        if (this._buffer != null) {\n            return new ReadableStream_js_1.PonyfillReadableStream({\n                start: controller => {\n                    controller.enqueue(this._buffer);\n                    controller.close();\n                },\n            });\n        }\n        let blobPartIterator;\n        return new ReadableStream_js_1.PonyfillReadableStream({\n            start: controller => {\n                if (this.blobParts.length === 0) {\n                    controller.close();\n                    return;\n                }\n                blobPartIterator = this.blobParts[Symbol.iterator]();\n            },\n            pull: controller => {\n                const { value: blobPart, done } = blobPartIterator.next();\n                if (done) {\n                    controller.close();\n                    return;\n                }\n                if (blobPart) {\n                    if (hasBufferMethod(blobPart)) {\n                        return blobPart.buffer().then(buf => {\n                            controller.enqueue(buf);\n                        });\n                    }\n                    if (hasBytesMethod(blobPart)) {\n                        return blobPart.bytes().then(bytes => {\n                            const buf = Buffer.from(bytes);\n                            controller.enqueue(buf);\n                        });\n                    }\n                    if (hasArrayBufferMethod(blobPart)) {\n                        return blobPart.arrayBuffer().then(arrayBuffer => {\n                            const buf = Buffer.from(arrayBuffer, undefined, blobPart.size);\n                            controller.enqueue(buf);\n                        });\n                    }\n                    const buf = getBlobPartAsBuffer(blobPart);\n                    controller.enqueue(buf);\n                }\n            },\n        });\n    }\n    slice() {\n        throw new Error('Not implemented');\n    }\n}\nexports.PonyfillBlob = PonyfillBlob;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Blob.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Body.js":
/*!**********************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/Body.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillBody = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst busboy_1 = tslib_1.__importDefault(__webpack_require__(/*! busboy */ \"(rsc)/./node_modules/busboy/lib/index.js\"));\nconst Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nconst File_js_1 = __webpack_require__(/*! ./File.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/File.js\");\nconst FormData_js_1 = __webpack_require__(/*! ./FormData.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/FormData.js\");\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nvar BodyInitType;\n(function (BodyInitType) {\n    BodyInitType[\"ReadableStream\"] = \"ReadableStream\";\n    BodyInitType[\"Blob\"] = \"Blob\";\n    BodyInitType[\"FormData\"] = \"FormData\";\n    BodyInitType[\"String\"] = \"String\";\n    BodyInitType[\"Readable\"] = \"Readable\";\n    BodyInitType[\"Buffer\"] = \"Buffer\";\n    BodyInitType[\"AsyncIterable\"] = \"AsyncIterable\";\n})(BodyInitType || (BodyInitType = {}));\nclass PonyfillBody {\n    bodyInit;\n    options;\n    bodyUsed = false;\n    contentType = null;\n    contentLength = null;\n    constructor(bodyInit, options = {}) {\n        this.bodyInit = bodyInit;\n        this.options = options;\n        const { bodyFactory, contentType, contentLength, bodyType, buffer } = processBodyInit(bodyInit);\n        this._bodyFactory = bodyFactory;\n        this.contentType = contentType;\n        this.contentLength = contentLength;\n        this.bodyType = bodyType;\n        this._buffer = buffer;\n    }\n    bodyType;\n    _bodyFactory = () => null;\n    _generatedBody = null;\n    _buffer;\n    generateBody() {\n        if (this._generatedBody?.readable?.destroyed && this._buffer) {\n            this._generatedBody.readable = stream_1.Readable.from(this._buffer);\n        }\n        if (this._generatedBody) {\n            return this._generatedBody;\n        }\n        const body = this._bodyFactory();\n        this._generatedBody = body;\n        return body;\n    }\n    handleContentLengthHeader(forceSet = false) {\n        const contentTypeInHeaders = this.headers.get('content-type');\n        if (!contentTypeInHeaders) {\n            if (this.contentType) {\n                this.headers.set('content-type', this.contentType);\n            }\n        }\n        else {\n            this.contentType = contentTypeInHeaders;\n        }\n        const contentLengthInHeaders = this.headers.get('content-length');\n        if (forceSet && this.bodyInit == null && !contentLengthInHeaders) {\n            this.contentLength = 0;\n            this.headers.set('content-length', '0');\n        }\n        if (!contentLengthInHeaders) {\n            if (this.contentLength) {\n                this.headers.set('content-length', this.contentLength.toString());\n            }\n        }\n        else {\n            this.contentLength = parseInt(contentLengthInHeaders, 10);\n        }\n    }\n    get body() {\n        const _body = this.generateBody();\n        if (_body != null) {\n            const ponyfillReadableStream = _body;\n            const readable = _body.readable;\n            return new Proxy(_body.readable, {\n                get(_, prop) {\n                    if (prop in ponyfillReadableStream) {\n                        const ponyfillReadableStreamProp = ponyfillReadableStream[prop];\n                        if (typeof ponyfillReadableStreamProp === 'function') {\n                            return ponyfillReadableStreamProp.bind(ponyfillReadableStream);\n                        }\n                        return ponyfillReadableStreamProp;\n                    }\n                    if (prop in readable) {\n                        const readableProp = readable[prop];\n                        if (typeof readableProp === 'function') {\n                            return readableProp.bind(readable);\n                        }\n                        return readableProp;\n                    }\n                },\n            });\n        }\n        return null;\n    }\n    _chunks = null;\n    _collectChunksFromReadable() {\n        if (this._chunks) {\n            return (0, utils_js_1.fakePromise)(this._chunks);\n        }\n        if (this.bodyType === BodyInitType.AsyncIterable) {\n            const iterator = this.bodyInit[Symbol.asyncIterator]();\n            const collectValue = () => {\n                return iterator.next().then(({ value, done }) => {\n                    this._chunks ||= [];\n                    if (value) {\n                        this._chunks.push(value);\n                    }\n                    if (!done) {\n                        return collectValue();\n                    }\n                    return this._chunks;\n                });\n            };\n            return collectValue();\n        }\n        const _body = this.generateBody();\n        if (!_body) {\n            return (0, utils_js_1.fakePromise)([]);\n        }\n        this._chunks = [];\n        _body.readable.on('data', chunk => {\n            this._chunks.push(chunk);\n        });\n        return new Promise((resolve, reject) => {\n            _body.readable.once('end', () => {\n                resolve(this._chunks);\n            });\n            _body.readable.once('error', e => {\n                reject(e);\n            });\n        });\n    }\n    _blob = null;\n    blob() {\n        if (this._blob) {\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        if (this.bodyType === BodyInitType.Blob) {\n            this._blob = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        if (this._buffer) {\n            this._blob = new Blob_js_1.PonyfillBlob([this._buffer], {\n                type: this.contentType || '',\n                size: this.contentLength,\n            });\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        return this._collectChunksFromReadable().then(chunks => {\n            this._blob = new Blob_js_1.PonyfillBlob(chunks, {\n                type: this.contentType || '',\n                size: this.contentLength,\n            });\n            return this._blob;\n        });\n    }\n    _formData = null;\n    formData(opts) {\n        if (this._formData) {\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        if (this.bodyType === BodyInitType.FormData) {\n            this._formData = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        this._formData = new FormData_js_1.PonyfillFormData();\n        const _body = this.generateBody();\n        if (_body == null) {\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        const formDataLimits = {\n            ...this.options.formDataLimits,\n            ...opts?.formDataLimits,\n        };\n        return new Promise((resolve, reject) => {\n            const bb = (0, busboy_1.default)({\n                headers: {\n                    'content-type': this.contentType || '',\n                },\n                limits: formDataLimits,\n                defParamCharset: 'utf-8',\n            });\n            bb.on('field', (name, value, { nameTruncated, valueTruncated }) => {\n                if (nameTruncated) {\n                    reject(new Error(`Field name size exceeded: ${formDataLimits?.fieldNameSize} bytes`));\n                }\n                if (valueTruncated) {\n                    reject(new Error(`Field value size exceeded: ${formDataLimits?.fieldSize} bytes`));\n                }\n                this._formData.set(name, value);\n            });\n            bb.on('fieldsLimit', () => {\n                reject(new Error(`Fields limit exceeded: ${formDataLimits?.fields}`));\n            });\n            bb.on('file', (name, fileStream, { filename, mimeType }) => {\n                const chunks = [];\n                fileStream.on('limit', () => {\n                    reject(new Error(`File size limit exceeded: ${formDataLimits?.fileSize} bytes`));\n                });\n                fileStream.on('data', chunk => {\n                    chunks.push(chunk);\n                });\n                fileStream.on('close', () => {\n                    if (fileStream.truncated) {\n                        reject(new Error(`File size limit exceeded: ${formDataLimits?.fileSize} bytes`));\n                    }\n                    const file = new File_js_1.PonyfillFile(chunks, filename, { type: mimeType });\n                    this._formData.set(name, file);\n                });\n            });\n            bb.on('filesLimit', () => {\n                reject(new Error(`Files limit exceeded: ${formDataLimits?.files}`));\n            });\n            bb.on('partsLimit', () => {\n                reject(new Error(`Parts limit exceeded: ${formDataLimits?.parts}`));\n            });\n            bb.on('close', () => {\n                resolve(this._formData);\n            });\n            bb.on('error', (err = 'An error occurred while parsing the form data') => {\n                const errMessage = err.message || err.toString();\n                reject(new TypeError(errMessage, err.cause));\n            });\n            _body?.readable.pipe(bb);\n        });\n    }\n    buffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.bodyType === BodyInitType.Blob) {\n            if ((0, Blob_js_1.hasBufferMethod)(this.bodyInit)) {\n                return this.bodyInit.buffer().then(buf => {\n                    this._buffer = buf;\n                    return this._buffer;\n                });\n            }\n            if ((0, Blob_js_1.hasBytesMethod)(this.bodyInit)) {\n                return this.bodyInit.bytes().then(bytes => {\n                    this._buffer = Buffer.from(bytes);\n                    return this._buffer;\n                });\n            }\n            if ((0, Blob_js_1.hasArrayBufferMethod)(this.bodyInit)) {\n                return this.bodyInit.arrayBuffer().then(buf => {\n                    this._buffer = Buffer.from(buf, undefined, buf.byteLength);\n                    return this._buffer;\n                });\n            }\n        }\n        return this._collectChunksFromReadable().then(chunks => {\n            if (chunks.length === 1) {\n                this._buffer = chunks[0];\n                return this._buffer;\n            }\n            this._buffer = Buffer.concat(chunks);\n            return this._buffer;\n        });\n    }\n    bytes() {\n        return this.buffer();\n    }\n    arrayBuffer() {\n        return this.buffer();\n    }\n    _json = null;\n    json() {\n        if (this._json) {\n            return (0, utils_js_1.fakePromise)(this._json);\n        }\n        return this.text().then(text => {\n            try {\n                this._json = JSON.parse(text);\n            }\n            catch (e) {\n                if (e instanceof SyntaxError) {\n                    e.message += `, \"${text}\" is not valid JSON`;\n                }\n                throw e;\n            }\n            return this._json;\n        });\n    }\n    _text = null;\n    text() {\n        if (this._text) {\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        if (this.bodyType === BodyInitType.String) {\n            this._text = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        return this.buffer().then(buffer => {\n            this._text = buffer.toString('utf-8');\n            return this._text;\n        });\n    }\n}\nexports.PonyfillBody = PonyfillBody;\nfunction processBodyInit(bodyInit) {\n    if (bodyInit == null) {\n        return {\n            bodyFactory: () => null,\n            contentType: null,\n            contentLength: null,\n        };\n    }\n    if (typeof bodyInit === 'string') {\n        const buffer = Buffer.from(bodyInit);\n        const contentLength = buffer.byteLength;\n        return {\n            bodyType: BodyInitType.String,\n            contentType: 'text/plain;charset=UTF-8',\n            contentLength,\n            buffer,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(buffer);\n                return new ReadableStream_js_1.PonyfillReadableStream(readable);\n            },\n        };\n    }\n    if (Buffer.isBuffer(bodyInit)) {\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentType: null,\n            contentLength: bodyInit.length,\n            buffer: bodyInit,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(bodyInit);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if ((0, utils_js_1.isArrayBufferView)(bodyInit)) {\n        const buffer = Buffer.from(bodyInit.buffer, bodyInit.byteOffset, bodyInit.byteLength);\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentLength: bodyInit.byteLength,\n            contentType: null,\n            buffer,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(buffer);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if (bodyInit instanceof ReadableStream_js_1.PonyfillReadableStream && bodyInit.readable != null) {\n        return {\n            bodyType: BodyInitType.ReadableStream,\n            bodyFactory: () => bodyInit,\n            contentType: null,\n            contentLength: null,\n        };\n    }\n    if (isBlob(bodyInit)) {\n        return {\n            bodyType: BodyInitType.Blob,\n            contentType: bodyInit.type,\n            contentLength: bodyInit.size,\n            bodyFactory() {\n                return bodyInit.stream();\n            },\n        };\n    }\n    if (bodyInit instanceof ArrayBuffer) {\n        const contentLength = bodyInit.byteLength;\n        const buffer = Buffer.from(bodyInit, undefined, bodyInit.byteLength);\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentType: null,\n            contentLength,\n            buffer,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(buffer);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if (bodyInit instanceof stream_1.Readable) {\n        return {\n            bodyType: BodyInitType.Readable,\n            contentType: null,\n            contentLength: null,\n            bodyFactory() {\n                const body = new ReadableStream_js_1.PonyfillReadableStream(bodyInit);\n                return body;\n            },\n        };\n    }\n    if (isURLSearchParams(bodyInit)) {\n        const contentType = 'application/x-www-form-urlencoded;charset=UTF-8';\n        return {\n            bodyType: BodyInitType.String,\n            contentType,\n            contentLength: null,\n            bodyFactory() {\n                const body = new ReadableStream_js_1.PonyfillReadableStream(stream_1.Readable.from(bodyInit.toString()));\n                return body;\n            },\n        };\n    }\n    if (isFormData(bodyInit)) {\n        const boundary = Math.random().toString(36).substr(2);\n        const contentType = `multipart/form-data; boundary=${boundary}`;\n        return {\n            bodyType: BodyInitType.FormData,\n            contentType,\n            contentLength: null,\n            bodyFactory() {\n                return (0, FormData_js_1.getStreamFromFormData)(bodyInit, boundary);\n            },\n        };\n    }\n    if (isReadableStream(bodyInit)) {\n        return {\n            contentType: null,\n            contentLength: null,\n            bodyFactory() {\n                return new ReadableStream_js_1.PonyfillReadableStream(bodyInit);\n            },\n        };\n    }\n    if (bodyInit[Symbol.iterator] || bodyInit[Symbol.asyncIterator]) {\n        return {\n            contentType: null,\n            contentLength: null,\n            bodyType: BodyInitType.AsyncIterable,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(bodyInit);\n                return new ReadableStream_js_1.PonyfillReadableStream(readable);\n            },\n        };\n    }\n    throw new Error('Unknown body type');\n}\nfunction isFormData(value) {\n    return value?.forEach != null;\n}\nfunction isBlob(value) {\n    return value?.stream != null;\n}\nfunction isURLSearchParams(value) {\n    return value?.sort != null;\n}\nfunction isReadableStream(value) {\n    return value?.getReader != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0JvZHkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLGdCQUFnQixtQkFBTyxDQUFDLHVEQUFPO0FBQy9CLGlCQUFpQixtQkFBTyxDQUFDLHNCQUFRO0FBQ2pDLHlDQUF5QyxtQkFBTyxDQUFDLHdEQUFRO0FBQ3pELGtCQUFrQixtQkFBTyxDQUFDLDJFQUFXO0FBQ3JDLGtCQUFrQixtQkFBTyxDQUFDLDJFQUFXO0FBQ3JDLHNCQUFzQixtQkFBTyxDQUFDLG1GQUFlO0FBQzdDLDRCQUE0QixtQkFBTyxDQUFDLCtGQUFxQjtBQUN6RCxtQkFBbUIsbUJBQU8sQ0FBQyw2RUFBWTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLG9DQUFvQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEM7QUFDQTtBQUNBLGdCQUFnQiw0REFBNEQ7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLGFBQWE7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsYUFBYTtBQUNiLDJDQUEyQywrQkFBK0I7QUFDMUU7QUFDQSxrRUFBa0UsK0JBQStCO0FBQ2pHO0FBQ0E7QUFDQSxtRUFBbUUsMkJBQTJCO0FBQzlGO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSwyREFBMkQsdUJBQXVCO0FBQ2xGLGFBQWE7QUFDYiwrQ0FBK0Msb0JBQW9CO0FBQ25FO0FBQ0E7QUFDQSxrRUFBa0UsMEJBQTBCO0FBQzVGLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxzRUFBc0UsMEJBQTBCO0FBQ2hHO0FBQ0EsZ0ZBQWdGLGdCQUFnQjtBQUNoRztBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQSwwREFBMEQsc0JBQXNCO0FBQ2hGLGFBQWE7QUFDYjtBQUNBLDBEQUEwRCxzQkFBc0I7QUFDaEYsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLEtBQUs7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsK0RBQStEO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELFdBQVcsU0FBUztBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvQm9keS5qcz81Y2Q2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbEJvZHkgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3Qgc3RyZWFtXzEgPSByZXF1aXJlKFwic3RyZWFtXCIpO1xuY29uc3QgYnVzYm95XzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiYnVzYm95XCIpKTtcbmNvbnN0IEJsb2JfanNfMSA9IHJlcXVpcmUoXCIuL0Jsb2IuanNcIik7XG5jb25zdCBGaWxlX2pzXzEgPSByZXF1aXJlKFwiLi9GaWxlLmpzXCIpO1xuY29uc3QgRm9ybURhdGFfanNfMSA9IHJlcXVpcmUoXCIuL0Zvcm1EYXRhLmpzXCIpO1xuY29uc3QgUmVhZGFibGVTdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL1JlYWRhYmxlU3RyZWFtLmpzXCIpO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xudmFyIEJvZHlJbml0VHlwZTtcbihmdW5jdGlvbiAoQm9keUluaXRUeXBlKSB7XG4gICAgQm9keUluaXRUeXBlW1wiUmVhZGFibGVTdHJlYW1cIl0gPSBcIlJlYWRhYmxlU3RyZWFtXCI7XG4gICAgQm9keUluaXRUeXBlW1wiQmxvYlwiXSA9IFwiQmxvYlwiO1xuICAgIEJvZHlJbml0VHlwZVtcIkZvcm1EYXRhXCJdID0gXCJGb3JtRGF0YVwiO1xuICAgIEJvZHlJbml0VHlwZVtcIlN0cmluZ1wiXSA9IFwiU3RyaW5nXCI7XG4gICAgQm9keUluaXRUeXBlW1wiUmVhZGFibGVcIl0gPSBcIlJlYWRhYmxlXCI7XG4gICAgQm9keUluaXRUeXBlW1wiQnVmZmVyXCJdID0gXCJCdWZmZXJcIjtcbiAgICBCb2R5SW5pdFR5cGVbXCJBc3luY0l0ZXJhYmxlXCJdID0gXCJBc3luY0l0ZXJhYmxlXCI7XG59KShCb2R5SW5pdFR5cGUgfHwgKEJvZHlJbml0VHlwZSA9IHt9KSk7XG5jbGFzcyBQb255ZmlsbEJvZHkge1xuICAgIGJvZHlJbml0O1xuICAgIG9wdGlvbnM7XG4gICAgYm9keVVzZWQgPSBmYWxzZTtcbiAgICBjb250ZW50VHlwZSA9IG51bGw7XG4gICAgY29udGVudExlbmd0aCA9IG51bGw7XG4gICAgY29uc3RydWN0b3IoYm9keUluaXQsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICB0aGlzLmJvZHlJbml0ID0gYm9keUluaXQ7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAgIGNvbnN0IHsgYm9keUZhY3RvcnksIGNvbnRlbnRUeXBlLCBjb250ZW50TGVuZ3RoLCBib2R5VHlwZSwgYnVmZmVyIH0gPSBwcm9jZXNzQm9keUluaXQoYm9keUluaXQpO1xuICAgICAgICB0aGlzLl9ib2R5RmFjdG9yeSA9IGJvZHlGYWN0b3J5O1xuICAgICAgICB0aGlzLmNvbnRlbnRUeXBlID0gY29udGVudFR5cGU7XG4gICAgICAgIHRoaXMuY29udGVudExlbmd0aCA9IGNvbnRlbnRMZW5ndGg7XG4gICAgICAgIHRoaXMuYm9keVR5cGUgPSBib2R5VHlwZTtcbiAgICAgICAgdGhpcy5fYnVmZmVyID0gYnVmZmVyO1xuICAgIH1cbiAgICBib2R5VHlwZTtcbiAgICBfYm9keUZhY3RvcnkgPSAoKSA9PiBudWxsO1xuICAgIF9nZW5lcmF0ZWRCb2R5ID0gbnVsbDtcbiAgICBfYnVmZmVyO1xuICAgIGdlbmVyYXRlQm9keSgpIHtcbiAgICAgICAgaWYgKHRoaXMuX2dlbmVyYXRlZEJvZHk/LnJlYWRhYmxlPy5kZXN0cm95ZWQgJiYgdGhpcy5fYnVmZmVyKSB7XG4gICAgICAgICAgICB0aGlzLl9nZW5lcmF0ZWRCb2R5LnJlYWRhYmxlID0gc3RyZWFtXzEuUmVhZGFibGUuZnJvbSh0aGlzLl9idWZmZXIpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9nZW5lcmF0ZWRCb2R5KSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fZ2VuZXJhdGVkQm9keTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBib2R5ID0gdGhpcy5fYm9keUZhY3RvcnkoKTtcbiAgICAgICAgdGhpcy5fZ2VuZXJhdGVkQm9keSA9IGJvZHk7XG4gICAgICAgIHJldHVybiBib2R5O1xuICAgIH1cbiAgICBoYW5kbGVDb250ZW50TGVuZ3RoSGVhZGVyKGZvcmNlU2V0ID0gZmFsc2UpIHtcbiAgICAgICAgY29uc3QgY29udGVudFR5cGVJbkhlYWRlcnMgPSB0aGlzLmhlYWRlcnMuZ2V0KCdjb250ZW50LXR5cGUnKTtcbiAgICAgICAgaWYgKCFjb250ZW50VHlwZUluSGVhZGVycykge1xuICAgICAgICAgICAgaWYgKHRoaXMuY29udGVudFR5cGUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmhlYWRlcnMuc2V0KCdjb250ZW50LXR5cGUnLCB0aGlzLmNvbnRlbnRUeXBlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuY29udGVudFR5cGUgPSBjb250ZW50VHlwZUluSGVhZGVycztcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjb250ZW50TGVuZ3RoSW5IZWFkZXJzID0gdGhpcy5oZWFkZXJzLmdldCgnY29udGVudC1sZW5ndGgnKTtcbiAgICAgICAgaWYgKGZvcmNlU2V0ICYmIHRoaXMuYm9keUluaXQgPT0gbnVsbCAmJiAhY29udGVudExlbmd0aEluSGVhZGVycykge1xuICAgICAgICAgICAgdGhpcy5jb250ZW50TGVuZ3RoID0gMDtcbiAgICAgICAgICAgIHRoaXMuaGVhZGVycy5zZXQoJ2NvbnRlbnQtbGVuZ3RoJywgJzAnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWNvbnRlbnRMZW5ndGhJbkhlYWRlcnMpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmNvbnRlbnRMZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmhlYWRlcnMuc2V0KCdjb250ZW50LWxlbmd0aCcsIHRoaXMuY29udGVudExlbmd0aC50b1N0cmluZygpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuY29udGVudExlbmd0aCA9IHBhcnNlSW50KGNvbnRlbnRMZW5ndGhJbkhlYWRlcnMsIDEwKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgYm9keSgpIHtcbiAgICAgICAgY29uc3QgX2JvZHkgPSB0aGlzLmdlbmVyYXRlQm9keSgpO1xuICAgICAgICBpZiAoX2JvZHkgIT0gbnVsbCkge1xuICAgICAgICAgICAgY29uc3QgcG9ueWZpbGxSZWFkYWJsZVN0cmVhbSA9IF9ib2R5O1xuICAgICAgICAgICAgY29uc3QgcmVhZGFibGUgPSBfYm9keS5yZWFkYWJsZTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJveHkoX2JvZHkucmVhZGFibGUsIHtcbiAgICAgICAgICAgICAgICBnZXQoXywgcHJvcCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAocHJvcCBpbiBwb255ZmlsbFJlYWRhYmxlU3RyZWFtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwb255ZmlsbFJlYWRhYmxlU3RyZWFtUHJvcCA9IHBvbnlmaWxsUmVhZGFibGVTdHJlYW1bcHJvcF07XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHBvbnlmaWxsUmVhZGFibGVTdHJlYW1Qcm9wID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHBvbnlmaWxsUmVhZGFibGVTdHJlYW1Qcm9wLmJpbmQocG9ueWZpbGxSZWFkYWJsZVN0cmVhbSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcG9ueWZpbGxSZWFkYWJsZVN0cmVhbVByb3A7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHByb3AgaW4gcmVhZGFibGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlYWRhYmxlUHJvcCA9IHJlYWRhYmxlW3Byb3BdO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiByZWFkYWJsZVByb3AgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVhZGFibGVQcm9wLmJpbmQocmVhZGFibGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlYWRhYmxlUHJvcDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgX2NodW5rcyA9IG51bGw7XG4gICAgX2NvbGxlY3RDaHVua3NGcm9tUmVhZGFibGUoKSB7XG4gICAgICAgIGlmICh0aGlzLl9jaHVua3MpIHtcbiAgICAgICAgICAgIHJldHVybiAoMCwgdXRpbHNfanNfMS5mYWtlUHJvbWlzZSkodGhpcy5fY2h1bmtzKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5ib2R5VHlwZSA9PT0gQm9keUluaXRUeXBlLkFzeW5jSXRlcmFibGUpIHtcbiAgICAgICAgICAgIGNvbnN0IGl0ZXJhdG9yID0gdGhpcy5ib2R5SW5pdFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKTtcbiAgICAgICAgICAgIGNvbnN0IGNvbGxlY3RWYWx1ZSA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaXRlcmF0b3IubmV4dCgpLnRoZW4oKHsgdmFsdWUsIGRvbmUgfSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jaHVua3MgfHw9IFtdO1xuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2NodW5rcy5wdXNoKHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoIWRvbmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb2xsZWN0VmFsdWUoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fY2h1bmtzO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiBjb2xsZWN0VmFsdWUoKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBfYm9keSA9IHRoaXMuZ2VuZXJhdGVCb2R5KCk7XG4gICAgICAgIGlmICghX2JvZHkpIHtcbiAgICAgICAgICAgIHJldHVybiAoMCwgdXRpbHNfanNfMS5mYWtlUHJvbWlzZSkoW10pO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2NodW5rcyA9IFtdO1xuICAgICAgICBfYm9keS5yZWFkYWJsZS5vbignZGF0YScsIGNodW5rID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2NodW5rcy5wdXNoKGNodW5rKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBfYm9keS5yZWFkYWJsZS5vbmNlKCdlbmQnLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZSh0aGlzLl9jaHVua3MpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBfYm9keS5yZWFkYWJsZS5vbmNlKCdlcnJvcicsIGUgPT4ge1xuICAgICAgICAgICAgICAgIHJlamVjdChlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgX2Jsb2IgPSBudWxsO1xuICAgIGJsb2IoKSB7XG4gICAgICAgIGlmICh0aGlzLl9ibG9iKSB7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzX2pzXzEuZmFrZVByb21pc2UpKHRoaXMuX2Jsb2IpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmJvZHlUeXBlID09PSBCb2R5SW5pdFR5cGUuQmxvYikge1xuICAgICAgICAgICAgdGhpcy5fYmxvYiA9IHRoaXMuYm9keUluaXQ7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzX2pzXzEuZmFrZVByb21pc2UpKHRoaXMuX2Jsb2IpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9idWZmZXIpIHtcbiAgICAgICAgICAgIHRoaXMuX2Jsb2IgPSBuZXcgQmxvYl9qc18xLlBvbnlmaWxsQmxvYihbdGhpcy5fYnVmZmVyXSwge1xuICAgICAgICAgICAgICAgIHR5cGU6IHRoaXMuY29udGVudFR5cGUgfHwgJycsXG4gICAgICAgICAgICAgICAgc2l6ZTogdGhpcy5jb250ZW50TGVuZ3RoLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzX2pzXzEuZmFrZVByb21pc2UpKHRoaXMuX2Jsb2IpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9jb2xsZWN0Q2h1bmtzRnJvbVJlYWRhYmxlKCkudGhlbihjaHVua3MgPT4ge1xuICAgICAgICAgICAgdGhpcy5fYmxvYiA9IG5ldyBCbG9iX2pzXzEuUG9ueWZpbGxCbG9iKGNodW5rcywge1xuICAgICAgICAgICAgICAgIHR5cGU6IHRoaXMuY29udGVudFR5cGUgfHwgJycsXG4gICAgICAgICAgICAgICAgc2l6ZTogdGhpcy5jb250ZW50TGVuZ3RoLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fYmxvYjtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIF9mb3JtRGF0YSA9IG51bGw7XG4gICAgZm9ybURhdGEob3B0cykge1xuICAgICAgICBpZiAodGhpcy5fZm9ybURhdGEpIHtcbiAgICAgICAgICAgIHJldHVybiAoMCwgdXRpbHNfanNfMS5mYWtlUHJvbWlzZSkodGhpcy5fZm9ybURhdGEpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmJvZHlUeXBlID09PSBCb2R5SW5pdFR5cGUuRm9ybURhdGEpIHtcbiAgICAgICAgICAgIHRoaXMuX2Zvcm1EYXRhID0gdGhpcy5ib2R5SW5pdDtcbiAgICAgICAgICAgIHJldHVybiAoMCwgdXRpbHNfanNfMS5mYWtlUHJvbWlzZSkodGhpcy5fZm9ybURhdGEpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2Zvcm1EYXRhID0gbmV3IEZvcm1EYXRhX2pzXzEuUG9ueWZpbGxGb3JtRGF0YSgpO1xuICAgICAgICBjb25zdCBfYm9keSA9IHRoaXMuZ2VuZXJhdGVCb2R5KCk7XG4gICAgICAgIGlmIChfYm9keSA9PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzX2pzXzEuZmFrZVByb21pc2UpKHRoaXMuX2Zvcm1EYXRhKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBmb3JtRGF0YUxpbWl0cyA9IHtcbiAgICAgICAgICAgIC4uLnRoaXMub3B0aW9ucy5mb3JtRGF0YUxpbWl0cyxcbiAgICAgICAgICAgIC4uLm9wdHM/LmZvcm1EYXRhTGltaXRzLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgYmIgPSAoMCwgYnVzYm95XzEuZGVmYXVsdCkoe1xuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6IHRoaXMuY29udGVudFR5cGUgfHwgJycsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBsaW1pdHM6IGZvcm1EYXRhTGltaXRzLFxuICAgICAgICAgICAgICAgIGRlZlBhcmFtQ2hhcnNldDogJ3V0Zi04JyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYmIub24oJ2ZpZWxkJywgKG5hbWUsIHZhbHVlLCB7IG5hbWVUcnVuY2F0ZWQsIHZhbHVlVHJ1bmNhdGVkIH0pID0+IHtcbiAgICAgICAgICAgICAgICBpZiAobmFtZVRydW5jYXRlZCkge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKGBGaWVsZCBuYW1lIHNpemUgZXhjZWVkZWQ6ICR7Zm9ybURhdGFMaW1pdHM/LmZpZWxkTmFtZVNpemV9IGJ5dGVzYCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodmFsdWVUcnVuY2F0ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihgRmllbGQgdmFsdWUgc2l6ZSBleGNlZWRlZDogJHtmb3JtRGF0YUxpbWl0cz8uZmllbGRTaXplfSBieXRlc2ApKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5fZm9ybURhdGEuc2V0KG5hbWUsIHZhbHVlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYmIub24oJ2ZpZWxkc0xpbWl0JywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoYEZpZWxkcyBsaW1pdCBleGNlZWRlZDogJHtmb3JtRGF0YUxpbWl0cz8uZmllbGRzfWApKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYmIub24oJ2ZpbGUnLCAobmFtZSwgZmlsZVN0cmVhbSwgeyBmaWxlbmFtZSwgbWltZVR5cGUgfSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNodW5rcyA9IFtdO1xuICAgICAgICAgICAgICAgIGZpbGVTdHJlYW0ub24oJ2xpbWl0JywgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKGBGaWxlIHNpemUgbGltaXQgZXhjZWVkZWQ6ICR7Zm9ybURhdGFMaW1pdHM/LmZpbGVTaXplfSBieXRlc2ApKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBmaWxlU3RyZWFtLm9uKCdkYXRhJywgY2h1bmsgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjaHVua3MucHVzaChjaHVuayk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgZmlsZVN0cmVhbS5vbignY2xvc2UnLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChmaWxlU3RyZWFtLnRydW5jYXRlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihgRmlsZSBzaXplIGxpbWl0IGV4Y2VlZGVkOiAke2Zvcm1EYXRhTGltaXRzPy5maWxlU2l6ZX0gYnl0ZXNgKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZmlsZSA9IG5ldyBGaWxlX2pzXzEuUG9ueWZpbGxGaWxlKGNodW5rcywgZmlsZW5hbWUsIHsgdHlwZTogbWltZVR5cGUgfSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2Zvcm1EYXRhLnNldChuYW1lLCBmaWxlKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYmIub24oJ2ZpbGVzTGltaXQnLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihgRmlsZXMgbGltaXQgZXhjZWVkZWQ6ICR7Zm9ybURhdGFMaW1pdHM/LmZpbGVzfWApKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYmIub24oJ3BhcnRzTGltaXQnLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihgUGFydHMgbGltaXQgZXhjZWVkZWQ6ICR7Zm9ybURhdGFMaW1pdHM/LnBhcnRzfWApKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYmIub24oJ2Nsb3NlJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlc29sdmUodGhpcy5fZm9ybURhdGEpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBiYi5vbignZXJyb3InLCAoZXJyID0gJ0FuIGVycm9yIG9jY3VycmVkIHdoaWxlIHBhcnNpbmcgdGhlIGZvcm0gZGF0YScpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBlcnJNZXNzYWdlID0gZXJyLm1lc3NhZ2UgfHwgZXJyLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBUeXBlRXJyb3IoZXJyTWVzc2FnZSwgZXJyLmNhdXNlKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIF9ib2R5Py5yZWFkYWJsZS5waXBlKGJiKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGJ1ZmZlcigpIHtcbiAgICAgICAgaWYgKHRoaXMuX2J1ZmZlcikge1xuICAgICAgICAgICAgcmV0dXJuICgwLCB1dGlsc19qc18xLmZha2VQcm9taXNlKSh0aGlzLl9idWZmZXIpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmJvZHlUeXBlID09PSBCb2R5SW5pdFR5cGUuQmxvYikge1xuICAgICAgICAgICAgaWYgKCgwLCBCbG9iX2pzXzEuaGFzQnVmZmVyTWV0aG9kKSh0aGlzLmJvZHlJbml0KSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmJvZHlJbml0LmJ1ZmZlcigpLnRoZW4oYnVmID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fYnVmZmVyID0gYnVmO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fYnVmZmVyO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCgwLCBCbG9iX2pzXzEuaGFzQnl0ZXNNZXRob2QpKHRoaXMuYm9keUluaXQpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuYm9keUluaXQuYnl0ZXMoKS50aGVuKGJ5dGVzID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fYnVmZmVyID0gQnVmZmVyLmZyb20oYnl0ZXMpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fYnVmZmVyO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCgwLCBCbG9iX2pzXzEuaGFzQXJyYXlCdWZmZXJNZXRob2QpKHRoaXMuYm9keUluaXQpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuYm9keUluaXQuYXJyYXlCdWZmZXIoKS50aGVuKGJ1ZiA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2J1ZmZlciA9IEJ1ZmZlci5mcm9tKGJ1ZiwgdW5kZWZpbmVkLCBidWYuYnl0ZUxlbmd0aCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9idWZmZXI7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvbGxlY3RDaHVua3NGcm9tUmVhZGFibGUoKS50aGVuKGNodW5rcyA9PiB7XG4gICAgICAgICAgICBpZiAoY2h1bmtzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2J1ZmZlciA9IGNodW5rc1swXTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fYnVmZmVyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fYnVmZmVyID0gQnVmZmVyLmNvbmNhdChjaHVua3MpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2J1ZmZlcjtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGJ5dGVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5idWZmZXIoKTtcbiAgICB9XG4gICAgYXJyYXlCdWZmZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJ1ZmZlcigpO1xuICAgIH1cbiAgICBfanNvbiA9IG51bGw7XG4gICAganNvbigpIHtcbiAgICAgICAgaWYgKHRoaXMuX2pzb24pIHtcbiAgICAgICAgICAgIHJldHVybiAoMCwgdXRpbHNfanNfMS5mYWtlUHJvbWlzZSkodGhpcy5fanNvbik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMudGV4dCgpLnRoZW4odGV4dCA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2pzb24gPSBKU09OLnBhcnNlKHRleHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoZSBpbnN0YW5jZW9mIFN5bnRheEVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGUubWVzc2FnZSArPSBgLCBcIiR7dGV4dH1cIiBpcyBub3QgdmFsaWQgSlNPTmA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fanNvbjtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIF90ZXh0ID0gbnVsbDtcbiAgICB0ZXh0KCkge1xuICAgICAgICBpZiAodGhpcy5fdGV4dCkge1xuICAgICAgICAgICAgcmV0dXJuICgwLCB1dGlsc19qc18xLmZha2VQcm9taXNlKSh0aGlzLl90ZXh0KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5ib2R5VHlwZSA9PT0gQm9keUluaXRUeXBlLlN0cmluZykge1xuICAgICAgICAgICAgdGhpcy5fdGV4dCA9IHRoaXMuYm9keUluaXQ7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzX2pzXzEuZmFrZVByb21pc2UpKHRoaXMuX3RleHQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmJ1ZmZlcigpLnRoZW4oYnVmZmVyID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3RleHQgPSBidWZmZXIudG9TdHJpbmcoJ3V0Zi04Jyk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fdGV4dDtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbEJvZHkgPSBQb255ZmlsbEJvZHk7XG5mdW5jdGlvbiBwcm9jZXNzQm9keUluaXQoYm9keUluaXQpIHtcbiAgICBpZiAoYm9keUluaXQgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYm9keUZhY3Rvcnk6ICgpID0+IG51bGwsXG4gICAgICAgICAgICBjb250ZW50VHlwZTogbnVsbCxcbiAgICAgICAgICAgIGNvbnRlbnRMZW5ndGg6IG51bGwsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmICh0eXBlb2YgYm9keUluaXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5mcm9tKGJvZHlJbml0KTtcbiAgICAgICAgY29uc3QgY29udGVudExlbmd0aCA9IGJ1ZmZlci5ieXRlTGVuZ3RoO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYm9keVR5cGU6IEJvZHlJbml0VHlwZS5TdHJpbmcsXG4gICAgICAgICAgICBjb250ZW50VHlwZTogJ3RleHQvcGxhaW47Y2hhcnNldD1VVEYtOCcsXG4gICAgICAgICAgICBjb250ZW50TGVuZ3RoLFxuICAgICAgICAgICAgYnVmZmVyLFxuICAgICAgICAgICAgYm9keUZhY3RvcnkoKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVhZGFibGUgPSBzdHJlYW1fMS5SZWFkYWJsZS5mcm9tKGJ1ZmZlcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBSZWFkYWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsUmVhZGFibGVTdHJlYW0ocmVhZGFibGUpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKEJ1ZmZlci5pc0J1ZmZlcihib2R5SW5pdCkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGJvZHlUeXBlOiBCb2R5SW5pdFR5cGUuQnVmZmVyLFxuICAgICAgICAgICAgY29udGVudFR5cGU6IG51bGwsXG4gICAgICAgICAgICBjb250ZW50TGVuZ3RoOiBib2R5SW5pdC5sZW5ndGgsXG4gICAgICAgICAgICBidWZmZXI6IGJvZHlJbml0LFxuICAgICAgICAgICAgYm9keUZhY3RvcnkoKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVhZGFibGUgPSBzdHJlYW1fMS5SZWFkYWJsZS5mcm9tKGJvZHlJbml0KTtcbiAgICAgICAgICAgICAgICBjb25zdCBib2R5ID0gbmV3IFJlYWRhYmxlU3RyZWFtX2pzXzEuUG9ueWZpbGxSZWFkYWJsZVN0cmVhbShyZWFkYWJsZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGJvZHk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAoKDAsIHV0aWxzX2pzXzEuaXNBcnJheUJ1ZmZlclZpZXcpKGJvZHlJbml0KSkge1xuICAgICAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuZnJvbShib2R5SW5pdC5idWZmZXIsIGJvZHlJbml0LmJ5dGVPZmZzZXQsIGJvZHlJbml0LmJ5dGVMZW5ndGgpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYm9keVR5cGU6IEJvZHlJbml0VHlwZS5CdWZmZXIsXG4gICAgICAgICAgICBjb250ZW50TGVuZ3RoOiBib2R5SW5pdC5ieXRlTGVuZ3RoLFxuICAgICAgICAgICAgY29udGVudFR5cGU6IG51bGwsXG4gICAgICAgICAgICBidWZmZXIsXG4gICAgICAgICAgICBib2R5RmFjdG9yeSgpIHtcbiAgICAgICAgICAgICAgICBjb25zdCByZWFkYWJsZSA9IHN0cmVhbV8xLlJlYWRhYmxlLmZyb20oYnVmZmVyKTtcbiAgICAgICAgICAgICAgICBjb25zdCBib2R5ID0gbmV3IFJlYWRhYmxlU3RyZWFtX2pzXzEuUG9ueWZpbGxSZWFkYWJsZVN0cmVhbShyZWFkYWJsZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGJvZHk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAoYm9keUluaXQgaW5zdGFuY2VvZiBSZWFkYWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsUmVhZGFibGVTdHJlYW0gJiYgYm9keUluaXQucmVhZGFibGUgIT0gbnVsbCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYm9keVR5cGU6IEJvZHlJbml0VHlwZS5SZWFkYWJsZVN0cmVhbSxcbiAgICAgICAgICAgIGJvZHlGYWN0b3J5OiAoKSA9PiBib2R5SW5pdCxcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBudWxsLFxuICAgICAgICAgICAgY29udGVudExlbmd0aDogbnVsbCxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKGlzQmxvYihib2R5SW5pdCkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGJvZHlUeXBlOiBCb2R5SW5pdFR5cGUuQmxvYixcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBib2R5SW5pdC50eXBlLFxuICAgICAgICAgICAgY29udGVudExlbmd0aDogYm9keUluaXQuc2l6ZSxcbiAgICAgICAgICAgIGJvZHlGYWN0b3J5KCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBib2R5SW5pdC5zdHJlYW0oKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmIChib2R5SW5pdCBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB7XG4gICAgICAgIGNvbnN0IGNvbnRlbnRMZW5ndGggPSBib2R5SW5pdC5ieXRlTGVuZ3RoO1xuICAgICAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuZnJvbShib2R5SW5pdCwgdW5kZWZpbmVkLCBib2R5SW5pdC5ieXRlTGVuZ3RoKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGJvZHlUeXBlOiBCb2R5SW5pdFR5cGUuQnVmZmVyLFxuICAgICAgICAgICAgY29udGVudFR5cGU6IG51bGwsXG4gICAgICAgICAgICBjb250ZW50TGVuZ3RoLFxuICAgICAgICAgICAgYnVmZmVyLFxuICAgICAgICAgICAgYm9keUZhY3RvcnkoKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVhZGFibGUgPSBzdHJlYW1fMS5SZWFkYWJsZS5mcm9tKGJ1ZmZlcik7XG4gICAgICAgICAgICAgICAgY29uc3QgYm9keSA9IG5ldyBSZWFkYWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsUmVhZGFibGVTdHJlYW0ocmVhZGFibGUpO1xuICAgICAgICAgICAgICAgIHJldHVybiBib2R5O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKGJvZHlJbml0IGluc3RhbmNlb2Ygc3RyZWFtXzEuUmVhZGFibGUpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGJvZHlUeXBlOiBCb2R5SW5pdFR5cGUuUmVhZGFibGUsXG4gICAgICAgICAgICBjb250ZW50VHlwZTogbnVsbCxcbiAgICAgICAgICAgIGNvbnRlbnRMZW5ndGg6IG51bGwsXG4gICAgICAgICAgICBib2R5RmFjdG9yeSgpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBib2R5ID0gbmV3IFJlYWRhYmxlU3RyZWFtX2pzXzEuUG9ueWZpbGxSZWFkYWJsZVN0cmVhbShib2R5SW5pdCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGJvZHk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAoaXNVUkxTZWFyY2hQYXJhbXMoYm9keUluaXQpKSB7XG4gICAgICAgIGNvbnN0IGNvbnRlbnRUeXBlID0gJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDtjaGFyc2V0PVVURi04JztcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGJvZHlUeXBlOiBCb2R5SW5pdFR5cGUuU3RyaW5nLFxuICAgICAgICAgICAgY29udGVudFR5cGUsXG4gICAgICAgICAgICBjb250ZW50TGVuZ3RoOiBudWxsLFxuICAgICAgICAgICAgYm9keUZhY3RvcnkoKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYm9keSA9IG5ldyBSZWFkYWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsUmVhZGFibGVTdHJlYW0oc3RyZWFtXzEuUmVhZGFibGUuZnJvbShib2R5SW5pdC50b1N0cmluZygpKSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGJvZHk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAoaXNGb3JtRGF0YShib2R5SW5pdCkpIHtcbiAgICAgICAgY29uc3QgYm91bmRhcnkgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMik7XG4gICAgICAgIGNvbnN0IGNvbnRlbnRUeXBlID0gYG11bHRpcGFydC9mb3JtLWRhdGE7IGJvdW5kYXJ5PSR7Ym91bmRhcnl9YDtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGJvZHlUeXBlOiBCb2R5SW5pdFR5cGUuRm9ybURhdGEsXG4gICAgICAgICAgICBjb250ZW50VHlwZSxcbiAgICAgICAgICAgIGNvbnRlbnRMZW5ndGg6IG51bGwsXG4gICAgICAgICAgICBib2R5RmFjdG9yeSgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKDAsIEZvcm1EYXRhX2pzXzEuZ2V0U3RyZWFtRnJvbUZvcm1EYXRhKShib2R5SW5pdCwgYm91bmRhcnkpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKGlzUmVhZGFibGVTdHJlYW0oYm9keUluaXQpKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjb250ZW50VHlwZTogbnVsbCxcbiAgICAgICAgICAgIGNvbnRlbnRMZW5ndGg6IG51bGwsXG4gICAgICAgICAgICBib2R5RmFjdG9yeSgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFJlYWRhYmxlU3RyZWFtX2pzXzEuUG9ueWZpbGxSZWFkYWJsZVN0cmVhbShib2R5SW5pdCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAoYm9keUluaXRbU3ltYm9sLml0ZXJhdG9yXSB8fCBib2R5SW5pdFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBudWxsLFxuICAgICAgICAgICAgY29udGVudExlbmd0aDogbnVsbCxcbiAgICAgICAgICAgIGJvZHlUeXBlOiBCb2R5SW5pdFR5cGUuQXN5bmNJdGVyYWJsZSxcbiAgICAgICAgICAgIGJvZHlGYWN0b3J5KCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlYWRhYmxlID0gc3RyZWFtXzEuUmVhZGFibGUuZnJvbShib2R5SW5pdCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBSZWFkYWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsUmVhZGFibGVTdHJlYW0ocmVhZGFibGUpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIGJvZHkgdHlwZScpO1xufVxuZnVuY3Rpb24gaXNGb3JtRGF0YSh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZT8uZm9yRWFjaCAhPSBudWxsO1xufVxuZnVuY3Rpb24gaXNCbG9iKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlPy5zdHJlYW0gIT0gbnVsbDtcbn1cbmZ1bmN0aW9uIGlzVVJMU2VhcmNoUGFyYW1zKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlPy5zb3J0ICE9IG51bGw7XG59XG5mdW5jdGlvbiBpc1JlYWRhYmxlU3RyZWFtKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlPy5nZXRSZWFkZXIgIT0gbnVsbDtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Body.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillCompressionStream = void 0;\nconst node_zlib_1 = __webpack_require__(/*! node:zlib */ \"node:zlib\");\nconst TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nclass PonyfillCompressionStream extends TransformStream_js_1.PonyfillTransformStream {\n    static supportedFormats = globalThis.process?.version?.startsWith('v2')\n        ? ['gzip', 'deflate', 'br']\n        : ['gzip', 'deflate', 'deflate-raw', 'br'];\n    constructor(compressionFormat) {\n        switch (compressionFormat) {\n            case 'x-gzip':\n            case 'gzip':\n                super((0, node_zlib_1.createGzip)());\n                break;\n            case 'x-deflate':\n            case 'deflate':\n                super((0, node_zlib_1.createDeflate)());\n                break;\n            case 'deflate-raw':\n                super((0, node_zlib_1.createDeflateRaw)());\n                break;\n            case 'br':\n                super((0, node_zlib_1.createBrotliCompress)());\n                break;\n            default:\n                throw new Error(`Unsupported compression format: ${compressionFormat}`);\n        }\n    }\n}\nexports.PonyfillCompressionStream = PonyfillCompressionStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0NvbXByZXNzaW9uU3RyZWFtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlDQUFpQztBQUNqQyxvQkFBb0IsbUJBQU8sQ0FBQyw0QkFBVztBQUN2Qyw2QkFBNkIsbUJBQU8sQ0FBQyxpR0FBc0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLGtCQUFrQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0NvbXByZXNzaW9uU3RyZWFtLmpzP2Y1ZjIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsQ29tcHJlc3Npb25TdHJlYW0gPSB2b2lkIDA7XG5jb25zdCBub2RlX3psaWJfMSA9IHJlcXVpcmUoXCJub2RlOnpsaWJcIik7XG5jb25zdCBUcmFuc2Zvcm1TdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL1RyYW5zZm9ybVN0cmVhbS5qc1wiKTtcbmNsYXNzIFBvbnlmaWxsQ29tcHJlc3Npb25TdHJlYW0gZXh0ZW5kcyBUcmFuc2Zvcm1TdHJlYW1fanNfMS5Qb255ZmlsbFRyYW5zZm9ybVN0cmVhbSB7XG4gICAgc3RhdGljIHN1cHBvcnRlZEZvcm1hdHMgPSBnbG9iYWxUaGlzLnByb2Nlc3M/LnZlcnNpb24/LnN0YXJ0c1dpdGgoJ3YyJylcbiAgICAgICAgPyBbJ2d6aXAnLCAnZGVmbGF0ZScsICdiciddXG4gICAgICAgIDogWydnemlwJywgJ2RlZmxhdGUnLCAnZGVmbGF0ZS1yYXcnLCAnYnInXTtcbiAgICBjb25zdHJ1Y3Rvcihjb21wcmVzc2lvbkZvcm1hdCkge1xuICAgICAgICBzd2l0Y2ggKGNvbXByZXNzaW9uRm9ybWF0KSB7XG4gICAgICAgICAgICBjYXNlICd4LWd6aXAnOlxuICAgICAgICAgICAgY2FzZSAnZ3ppcCc6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZUd6aXApKCkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAneC1kZWZsYXRlJzpcbiAgICAgICAgICAgIGNhc2UgJ2RlZmxhdGUnOlxuICAgICAgICAgICAgICAgIHN1cGVyKCgwLCBub2RlX3psaWJfMS5jcmVhdGVEZWZsYXRlKSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2RlZmxhdGUtcmF3JzpcbiAgICAgICAgICAgICAgICBzdXBlcigoMCwgbm9kZV96bGliXzEuY3JlYXRlRGVmbGF0ZVJhdykoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdicic6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZUJyb3RsaUNvbXByZXNzKSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBjb21wcmVzc2lvbiBmb3JtYXQ6ICR7Y29tcHJlc3Npb25Gb3JtYXR9YCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsQ29tcHJlc3Npb25TdHJlYW0gPSBQb255ZmlsbENvbXByZXNzaW9uU3RyZWFtO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillDecompressionStream = void 0;\nconst node_zlib_1 = __webpack_require__(/*! node:zlib */ \"node:zlib\");\nconst TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nclass PonyfillDecompressionStream extends TransformStream_js_1.PonyfillTransformStream {\n    static supportedFormats = globalThis.process?.version?.startsWith('v2')\n        ? ['gzip', 'deflate', 'br']\n        : ['gzip', 'deflate', 'deflate-raw', 'br'];\n    constructor(compressionFormat) {\n        switch (compressionFormat) {\n            case 'x-gzip':\n            case 'gzip':\n                super((0, node_zlib_1.createGunzip)());\n                break;\n            case 'x-deflate':\n            case 'deflate':\n                super((0, node_zlib_1.createInflate)());\n                break;\n            case 'deflate-raw':\n                super((0, node_zlib_1.createInflateRaw)());\n                break;\n            case 'br':\n                super((0, node_zlib_1.createBrotliDecompress)());\n                break;\n            default:\n                throw new TypeError(`Unsupported compression format: '${compressionFormat}'`);\n        }\n    }\n}\nexports.PonyfillDecompressionStream = PonyfillDecompressionStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0RlY29tcHJlc3Npb25TdHJlYW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUNBQW1DO0FBQ25DLG9CQUFvQixtQkFBTyxDQUFDLDRCQUFXO0FBQ3ZDLDZCQUE2QixtQkFBTyxDQUFDLGlHQUFzQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0Usa0JBQWtCO0FBQzFGO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvRGVjb21wcmVzc2lvblN0cmVhbS5qcz81N2I5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbERlY29tcHJlc3Npb25TdHJlYW0gPSB2b2lkIDA7XG5jb25zdCBub2RlX3psaWJfMSA9IHJlcXVpcmUoXCJub2RlOnpsaWJcIik7XG5jb25zdCBUcmFuc2Zvcm1TdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL1RyYW5zZm9ybVN0cmVhbS5qc1wiKTtcbmNsYXNzIFBvbnlmaWxsRGVjb21wcmVzc2lvblN0cmVhbSBleHRlbmRzIFRyYW5zZm9ybVN0cmVhbV9qc18xLlBvbnlmaWxsVHJhbnNmb3JtU3RyZWFtIHtcbiAgICBzdGF0aWMgc3VwcG9ydGVkRm9ybWF0cyA9IGdsb2JhbFRoaXMucHJvY2Vzcz8udmVyc2lvbj8uc3RhcnRzV2l0aCgndjInKVxuICAgICAgICA/IFsnZ3ppcCcsICdkZWZsYXRlJywgJ2JyJ11cbiAgICAgICAgOiBbJ2d6aXAnLCAnZGVmbGF0ZScsICdkZWZsYXRlLXJhdycsICdiciddO1xuICAgIGNvbnN0cnVjdG9yKGNvbXByZXNzaW9uRm9ybWF0KSB7XG4gICAgICAgIHN3aXRjaCAoY29tcHJlc3Npb25Gb3JtYXQpIHtcbiAgICAgICAgICAgIGNhc2UgJ3gtZ3ppcCc6XG4gICAgICAgICAgICBjYXNlICdnemlwJzpcbiAgICAgICAgICAgICAgICBzdXBlcigoMCwgbm9kZV96bGliXzEuY3JlYXRlR3VuemlwKSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3gtZGVmbGF0ZSc6XG4gICAgICAgICAgICBjYXNlICdkZWZsYXRlJzpcbiAgICAgICAgICAgICAgICBzdXBlcigoMCwgbm9kZV96bGliXzEuY3JlYXRlSW5mbGF0ZSkoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdkZWZsYXRlLXJhdyc6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZUluZmxhdGVSYXcpKCkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnYnInOlxuICAgICAgICAgICAgICAgIHN1cGVyKCgwLCBub2RlX3psaWJfMS5jcmVhdGVCcm90bGlEZWNvbXByZXNzKSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgVW5zdXBwb3J0ZWQgY29tcHJlc3Npb24gZm9ybWF0OiAnJHtjb21wcmVzc2lvbkZvcm1hdH0nYCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsRGVjb21wcmVzc2lvblN0cmVhbSA9IFBvbnlmaWxsRGVjb21wcmVzc2lvblN0cmVhbTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/File.js":
/*!**********************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/File.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillFile = void 0;\nconst Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nclass PonyfillFile extends Blob_js_1.PonyfillBlob {\n    name;\n    lastModified;\n    constructor(fileBits, name, options) {\n        super(fileBits, options);\n        this.name = name;\n        this.lastModified = options?.lastModified || Date.now();\n    }\n    webkitRelativePath = '';\n}\nexports.PonyfillFile = PonyfillFile;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0ZpbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLGtCQUFrQixtQkFBTyxDQUFDLDJFQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9GaWxlLmpzP2E0ZWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsRmlsZSA9IHZvaWQgMDtcbmNvbnN0IEJsb2JfanNfMSA9IHJlcXVpcmUoXCIuL0Jsb2IuanNcIik7XG5jbGFzcyBQb255ZmlsbEZpbGUgZXh0ZW5kcyBCbG9iX2pzXzEuUG9ueWZpbGxCbG9iIHtcbiAgICBuYW1lO1xuICAgIGxhc3RNb2RpZmllZDtcbiAgICBjb25zdHJ1Y3RvcihmaWxlQml0cywgbmFtZSwgb3B0aW9ucykge1xuICAgICAgICBzdXBlcihmaWxlQml0cywgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMubGFzdE1vZGlmaWVkID0gb3B0aW9ucz8ubGFzdE1vZGlmaWVkIHx8IERhdGUubm93KCk7XG4gICAgfVxuICAgIHdlYmtpdFJlbGF0aXZlUGF0aCA9ICcnO1xufVxuZXhwb3J0cy5Qb255ZmlsbEZpbGUgPSBQb255ZmlsbEZpbGU7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/File.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/FormData.js":
/*!**************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/FormData.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillFormData = void 0;\nexports.getStreamFromFormData = getStreamFromFormData;\nconst IteratorObject_js_1 = __webpack_require__(/*! ./IteratorObject.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/IteratorObject.js\");\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nclass PonyfillFormData {\n    map = new Map();\n    append(name, value, fileName) {\n        let values = this.map.get(name);\n        if (!values) {\n            values = [];\n            this.map.set(name, values);\n        }\n        const entry = isBlob(value)\n            ? getNormalizedFile(name, value, fileName)\n            : value;\n        values.push(entry);\n    }\n    delete(name) {\n        this.map.delete(name);\n    }\n    get(name) {\n        const values = this.map.get(name);\n        return values ? values[0] : null;\n    }\n    getAll(name) {\n        return this.map.get(name) || [];\n    }\n    has(name) {\n        return this.map.has(name);\n    }\n    set(name, value, fileName) {\n        const entry = isBlob(value)\n            ? getNormalizedFile(name, value, fileName)\n            : value;\n        this.map.set(name, [entry]);\n    }\n    [Symbol.iterator]() {\n        return this._entries();\n    }\n    *_entries() {\n        for (const [key, values] of this.map) {\n            for (const value of values) {\n                yield [key, value];\n            }\n        }\n    }\n    entries() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._entries(), 'FormDataIterator');\n    }\n    _keys() {\n        return this.map.keys();\n    }\n    keys() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._keys(), 'FormDataIterator');\n    }\n    *_values() {\n        for (const values of this.map.values()) {\n            for (const value of values) {\n                yield value;\n            }\n        }\n    }\n    values() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._values(), 'FormDataIterator');\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key, this);\n        }\n    }\n}\nexports.PonyfillFormData = PonyfillFormData;\nfunction getStreamFromFormData(formData, boundary = '---') {\n    const entries = [];\n    let sentInitialHeader = false;\n    return new ReadableStream_js_1.PonyfillReadableStream({\n        start: controller => {\n            formData.forEach((value, key) => {\n                if (!sentInitialHeader) {\n                    controller.enqueue(Buffer.from(`--${boundary}\\r\\n`));\n                    sentInitialHeader = true;\n                }\n                entries.push([key, value]);\n            });\n            if (!sentInitialHeader) {\n                controller.enqueue(Buffer.from(`--${boundary}--\\r\\n`));\n                controller.close();\n            }\n        },\n        pull: async (controller) => {\n            const entry = entries.shift();\n            if (entry) {\n                const [key, value] = entry;\n                if (typeof value === 'string') {\n                    controller.enqueue(Buffer.from(`Content-Disposition: form-data; name=\"${key}\"\\r\\n\\r\\n`));\n                    controller.enqueue(Buffer.from(value));\n                }\n                else {\n                    let filenamePart = '';\n                    if (value.name) {\n                        filenamePart = `; filename=\"${value.name}\"`;\n                    }\n                    controller.enqueue(Buffer.from(`Content-Disposition: form-data; name=\"${key}\"${filenamePart}\\r\\n`));\n                    controller.enqueue(Buffer.from(`Content-Type: ${value.type || 'application/octet-stream'}\\r\\n\\r\\n`));\n                    const entryStream = value.stream();\n                    for await (const chunk of entryStream) {\n                        controller.enqueue(chunk);\n                    }\n                }\n                if (entries.length === 0) {\n                    controller.enqueue(Buffer.from(`\\r\\n--${boundary}--\\r\\n`));\n                    controller.close();\n                }\n                else {\n                    controller.enqueue(Buffer.from(`\\r\\n--${boundary}\\r\\n`));\n                }\n            }\n            else {\n                controller.enqueue(Buffer.from(`\\r\\n--${boundary}--\\r\\n`));\n                controller.close();\n            }\n        },\n    });\n}\nfunction getNormalizedFile(name, blob, fileName) {\n    Object.defineProperty(blob, 'name', {\n        configurable: true,\n        enumerable: true,\n        value: fileName || blob.name || name,\n    });\n    return blob;\n}\nfunction isBlob(value) {\n    return value?.arrayBuffer != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0Zvcm1EYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4Qiw2QkFBNkI7QUFDN0IsNEJBQTRCLG1CQUFPLENBQUMsK0ZBQXFCO0FBQ3pELDRCQUE0QixtQkFBTyxDQUFDLCtGQUFxQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxTQUFTO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLG9EQUFvRCxTQUFTO0FBQzdEO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9GQUFvRixRQUFRLElBQUk7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxZQUFZLFdBQVc7QUFDakU7QUFDQSxvRkFBb0YsUUFBUSxJQUFJLEdBQUcsYUFBYTtBQUNoSCxvRUFBb0UseUNBQXlDO0FBQzdHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCxTQUFTO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCxTQUFTO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxTQUFTO0FBQ2pFO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9Gb3JtRGF0YS5qcz8zYjMxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbEZvcm1EYXRhID0gdm9pZCAwO1xuZXhwb3J0cy5nZXRTdHJlYW1Gcm9tRm9ybURhdGEgPSBnZXRTdHJlYW1Gcm9tRm9ybURhdGE7XG5jb25zdCBJdGVyYXRvck9iamVjdF9qc18xID0gcmVxdWlyZShcIi4vSXRlcmF0b3JPYmplY3QuanNcIik7XG5jb25zdCBSZWFkYWJsZVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vUmVhZGFibGVTdHJlYW0uanNcIik7XG5jbGFzcyBQb255ZmlsbEZvcm1EYXRhIHtcbiAgICBtYXAgPSBuZXcgTWFwKCk7XG4gICAgYXBwZW5kKG5hbWUsIHZhbHVlLCBmaWxlTmFtZSkge1xuICAgICAgICBsZXQgdmFsdWVzID0gdGhpcy5tYXAuZ2V0KG5hbWUpO1xuICAgICAgICBpZiAoIXZhbHVlcykge1xuICAgICAgICAgICAgdmFsdWVzID0gW107XG4gICAgICAgICAgICB0aGlzLm1hcC5zZXQobmFtZSwgdmFsdWVzKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBlbnRyeSA9IGlzQmxvYih2YWx1ZSlcbiAgICAgICAgICAgID8gZ2V0Tm9ybWFsaXplZEZpbGUobmFtZSwgdmFsdWUsIGZpbGVOYW1lKVxuICAgICAgICAgICAgOiB2YWx1ZTtcbiAgICAgICAgdmFsdWVzLnB1c2goZW50cnkpO1xuICAgIH1cbiAgICBkZWxldGUobmFtZSkge1xuICAgICAgICB0aGlzLm1hcC5kZWxldGUobmFtZSk7XG4gICAgfVxuICAgIGdldChuYW1lKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlcyA9IHRoaXMubWFwLmdldChuYW1lKTtcbiAgICAgICAgcmV0dXJuIHZhbHVlcyA/IHZhbHVlc1swXSA6IG51bGw7XG4gICAgfVxuICAgIGdldEFsbChuYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1hcC5nZXQobmFtZSkgfHwgW107XG4gICAgfVxuICAgIGhhcyhuYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1hcC5oYXMobmFtZSk7XG4gICAgfVxuICAgIHNldChuYW1lLCB2YWx1ZSwgZmlsZU5hbWUpIHtcbiAgICAgICAgY29uc3QgZW50cnkgPSBpc0Jsb2IodmFsdWUpXG4gICAgICAgICAgICA/IGdldE5vcm1hbGl6ZWRGaWxlKG5hbWUsIHZhbHVlLCBmaWxlTmFtZSlcbiAgICAgICAgICAgIDogdmFsdWU7XG4gICAgICAgIHRoaXMubWFwLnNldChuYW1lLCBbZW50cnldKTtcbiAgICB9XG4gICAgW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9lbnRyaWVzKCk7XG4gICAgfVxuICAgICpfZW50cmllcygpIHtcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZXNdIG9mIHRoaXMubWFwKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIHZhbHVlcykge1xuICAgICAgICAgICAgICAgIHlpZWxkIFtrZXksIHZhbHVlXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBlbnRyaWVzKCkge1xuICAgICAgICByZXR1cm4gbmV3IEl0ZXJhdG9yT2JqZWN0X2pzXzEuUG9ueWZpbGxJdGVyYXRvck9iamVjdCh0aGlzLl9lbnRyaWVzKCksICdGb3JtRGF0YUl0ZXJhdG9yJyk7XG4gICAgfVxuICAgIF9rZXlzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAua2V5cygpO1xuICAgIH1cbiAgICBrZXlzKCkge1xuICAgICAgICByZXR1cm4gbmV3IEl0ZXJhdG9yT2JqZWN0X2pzXzEuUG9ueWZpbGxJdGVyYXRvck9iamVjdCh0aGlzLl9rZXlzKCksICdGb3JtRGF0YUl0ZXJhdG9yJyk7XG4gICAgfVxuICAgICpfdmFsdWVzKCkge1xuICAgICAgICBmb3IgKGNvbnN0IHZhbHVlcyBvZiB0aGlzLm1hcC52YWx1ZXMoKSkge1xuICAgICAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgICAgICAgICAgICB5aWVsZCB2YWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICB2YWx1ZXMoKSB7XG4gICAgICAgIHJldHVybiBuZXcgSXRlcmF0b3JPYmplY3RfanNfMS5Qb255ZmlsbEl0ZXJhdG9yT2JqZWN0KHRoaXMuX3ZhbHVlcygpLCAnRm9ybURhdGFJdGVyYXRvcicpO1xuICAgIH1cbiAgICBmb3JFYWNoKGNhbGxiYWNrKSB7XG4gICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIHRoaXMpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKHZhbHVlLCBrZXksIHRoaXMpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbEZvcm1EYXRhID0gUG9ueWZpbGxGb3JtRGF0YTtcbmZ1bmN0aW9uIGdldFN0cmVhbUZyb21Gb3JtRGF0YShmb3JtRGF0YSwgYm91bmRhcnkgPSAnLS0tJykge1xuICAgIGNvbnN0IGVudHJpZXMgPSBbXTtcbiAgICBsZXQgc2VudEluaXRpYWxIZWFkZXIgPSBmYWxzZTtcbiAgICByZXR1cm4gbmV3IFJlYWRhYmxlU3RyZWFtX2pzXzEuUG9ueWZpbGxSZWFkYWJsZVN0cmVhbSh7XG4gICAgICAgIHN0YXJ0OiBjb250cm9sbGVyID0+IHtcbiAgICAgICAgICAgIGZvcm1EYXRhLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIXNlbnRJbml0aWFsSGVhZGVyKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbShgLS0ke2JvdW5kYXJ5fVxcclxcbmApKTtcbiAgICAgICAgICAgICAgICAgICAgc2VudEluaXRpYWxIZWFkZXIgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbnRyaWVzLnB1c2goW2tleSwgdmFsdWVdKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKCFzZW50SW5pdGlhbEhlYWRlcikge1xuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbShgLS0ke2JvdW5kYXJ5fS0tXFxyXFxuYCkpO1xuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuY2xvc2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgcHVsbDogYXN5bmMgKGNvbnRyb2xsZXIpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGVudHJ5ID0gZW50cmllcy5zaGlmdCgpO1xuICAgICAgICAgICAgaWYgKGVudHJ5KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgW2tleSwgdmFsdWVdID0gZW50cnk7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKEJ1ZmZlci5mcm9tKGBDb250ZW50LURpc3Bvc2l0aW9uOiBmb3JtLWRhdGE7IG5hbWU9XCIke2tleX1cIlxcclxcblxcclxcbmApKTtcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKEJ1ZmZlci5mcm9tKHZhbHVlKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBsZXQgZmlsZW5hbWVQYXJ0ID0gJyc7XG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZS5uYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmaWxlbmFtZVBhcnQgPSBgOyBmaWxlbmFtZT1cIiR7dmFsdWUubmFtZX1cImA7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKEJ1ZmZlci5mcm9tKGBDb250ZW50LURpc3Bvc2l0aW9uOiBmb3JtLWRhdGE7IG5hbWU9XCIke2tleX1cIiR7ZmlsZW5hbWVQYXJ0fVxcclxcbmApKTtcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKEJ1ZmZlci5mcm9tKGBDb250ZW50LVR5cGU6ICR7dmFsdWUudHlwZSB8fCAnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJ31cXHJcXG5cXHJcXG5gKSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVudHJ5U3RyZWFtID0gdmFsdWUuc3RyZWFtKCk7XG4gICAgICAgICAgICAgICAgICAgIGZvciBhd2FpdCAoY29uc3QgY2h1bmsgb2YgZW50cnlTdHJlYW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShjaHVuayk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGVudHJpZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbShgXFxyXFxuLS0ke2JvdW5kYXJ5fS0tXFxyXFxuYCkpO1xuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoQnVmZmVyLmZyb20oYFxcclxcbi0tJHtib3VuZGFyeX1cXHJcXG5gKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKEJ1ZmZlci5mcm9tKGBcXHJcXG4tLSR7Ym91bmRhcnl9LS1cXHJcXG5gKSk7XG4gICAgICAgICAgICAgICAgY29udHJvbGxlci5jbG9zZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgIH0pO1xufVxuZnVuY3Rpb24gZ2V0Tm9ybWFsaXplZEZpbGUobmFtZSwgYmxvYiwgZmlsZU5hbWUpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoYmxvYiwgJ25hbWUnLCB7XG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IGZpbGVOYW1lIHx8IGJsb2IubmFtZSB8fCBuYW1lLFxuICAgIH0pO1xuICAgIHJldHVybiBibG9iO1xufVxuZnVuY3Rpb24gaXNCbG9iKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlPy5hcnJheUJ1ZmZlciAhPSBudWxsO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/FormData.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Headers.js":
/*!*************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/Headers.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillHeaders = void 0;\nexports.isHeadersLike = isHeadersLike;\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst IteratorObject_js_1 = __webpack_require__(/*! ./IteratorObject.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/IteratorObject.js\");\nfunction isHeadersLike(headers) {\n    return headers?.get && headers?.forEach;\n}\nclass PonyfillHeaders {\n    headersInit;\n    _map;\n    objectNormalizedKeysOfHeadersInit = [];\n    objectOriginalKeysOfHeadersInit = [];\n    _setCookies = [];\n    constructor(headersInit) {\n        this.headersInit = headersInit;\n    }\n    // perf: we don't need to build `this.map` for Requests, as we can access the headers directly\n    _get(key) {\n        const normalized = key.toLowerCase();\n        if (normalized === 'set-cookie') {\n            return this._setCookies.join(', ');\n        }\n        // If the map is built, reuse it\n        if (this._map) {\n            return this._map.get(normalized) || null;\n        }\n        // If the map is not built, try to get the value from the this.headersInit\n        if (this.headersInit == null) {\n            return null;\n        }\n        if (Array.isArray(this.headersInit)) {\n            return this.headersInit.find(header => header[0].toLowerCase() === normalized)?.[1] || null;\n        }\n        else if (isHeadersLike(this.headersInit)) {\n            return this.headersInit.get(normalized);\n        }\n        else {\n            const initValue = this.headersInit[key] || this.headersInit[normalized];\n            if (initValue != null) {\n                return initValue;\n            }\n            if (!this.objectNormalizedKeysOfHeadersInit.length) {\n                Object.keys(this.headersInit).forEach(k => {\n                    this.objectOriginalKeysOfHeadersInit.push(k);\n                    this.objectNormalizedKeysOfHeadersInit.push(k.toLowerCase());\n                });\n            }\n            const index = this.objectNormalizedKeysOfHeadersInit.indexOf(normalized);\n            if (index === -1) {\n                return null;\n            }\n            const originalKey = this.objectOriginalKeysOfHeadersInit[index];\n            return this.headersInit[originalKey];\n        }\n    }\n    // perf: Build the map of headers lazily, only when we need to access all headers or write to it.\n    // I could do a getter here, but I'm too lazy to type `getter`.\n    getMap() {\n        if (!this._map) {\n            if (this.headersInit != null) {\n                if (Array.isArray(this.headersInit)) {\n                    this._map = new Map();\n                    this.headersInit.forEach(([key, value]) => {\n                        const normalizedKey = key.toLowerCase();\n                        if (normalizedKey === 'set-cookie') {\n                            this._setCookies.push(value);\n                            return;\n                        }\n                        this._map.set(normalizedKey, value);\n                    });\n                }\n                else if (isHeadersLike(this.headersInit)) {\n                    this._map = new Map();\n                    this.headersInit.forEach((value, key) => {\n                        if (key === 'set-cookie') {\n                            this._setCookies.push(value);\n                            return;\n                        }\n                        this._map.set(key, value);\n                    });\n                }\n                else {\n                    this._map = new Map();\n                    for (const initKey in this.headersInit) {\n                        const initValue = this.headersInit[initKey];\n                        if (initValue != null) {\n                            const normalizedKey = initKey.toLowerCase();\n                            if (normalizedKey === 'set-cookie') {\n                                this._setCookies.push(initValue);\n                                continue;\n                            }\n                            this._map.set(normalizedKey, initValue);\n                        }\n                    }\n                }\n            }\n            else {\n                this._map = new Map();\n            }\n        }\n        return this._map;\n    }\n    append(name, value) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies.push(value);\n            return;\n        }\n        const existingValue = this.getMap().get(key);\n        const finalValue = existingValue ? `${existingValue}, ${value}` : value;\n        this.getMap().set(key, finalValue);\n    }\n    get(name) {\n        const value = this._get(name);\n        if (value == null) {\n            return null;\n        }\n        return value;\n    }\n    has(name) {\n        if (name === 'set-cookie') {\n            return this._setCookies.length > 0;\n        }\n        return !!this._get(name); // we might need to check if header exists and not just check if it's not nullable\n    }\n    set(name, value) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies = [value];\n            return;\n        }\n        this.getMap().set(key, value);\n    }\n    delete(name) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies = [];\n            return;\n        }\n        this.getMap().delete(key);\n    }\n    forEach(callback) {\n        this._setCookies.forEach(setCookie => {\n            callback(setCookie, 'set-cookie', this);\n        });\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    this.headersInit.forEach(([key, value]) => {\n                        callback(value, key, this);\n                    });\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    this.headersInit.forEach(callback);\n                    return;\n                }\n                Object.entries(this.headersInit).forEach(([key, value]) => {\n                    if (value != null) {\n                        callback(value, key, this);\n                    }\n                });\n            }\n            return;\n        }\n        this.getMap().forEach((value, key) => {\n            callback(value, key, this);\n        });\n    }\n    *_keys() {\n        if (this._setCookies.length) {\n            yield 'set-cookie';\n        }\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit.map(([key]) => key)[Symbol.iterator]();\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.keys();\n                    return;\n                }\n                yield* Object.keys(this.headersInit)[Symbol.iterator]();\n                return;\n            }\n        }\n        yield* this.getMap().keys();\n    }\n    keys() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._keys(), 'HeadersIterator');\n    }\n    *_values() {\n        yield* this._setCookies;\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit.map(([, value]) => value)[Symbol.iterator]();\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.values();\n                    return;\n                }\n                yield* Object.values(this.headersInit)[Symbol.iterator]();\n                return;\n            }\n        }\n        yield* this.getMap().values();\n    }\n    values() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._values(), 'HeadersIterator');\n    }\n    *_entries() {\n        yield* this._setCookies.map(cookie => ['set-cookie', cookie]);\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit;\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.entries();\n                    return;\n                }\n                yield* Object.entries(this.headersInit);\n                return;\n            }\n        }\n        yield* this.getMap().entries();\n    }\n    entries() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._entries(), 'HeadersIterator');\n    }\n    getSetCookie() {\n        return this._setCookies;\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        const record = {};\n        this.forEach((value, key) => {\n            if (key === 'set-cookie') {\n                record['set-cookie'] = this._setCookies;\n            }\n            else {\n                record[key] = value.includes(',') ? value.split(',').map(el => el.trim()) : value;\n            }\n        });\n        return `Headers ${(0, util_1.inspect)(record)}`;\n    }\n}\nexports.PonyfillHeaders = PonyfillHeaders;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Headers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/IteratorObject.js":
/*!********************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/IteratorObject.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillIteratorObject = void 0;\nconst node_util_1 = __webpack_require__(/*! node:util */ \"node:util\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nclass PonyfillIteratorObject {\n    iterableIterator;\n    [Symbol.toStringTag] = 'IteratorObject';\n    constructor(iterableIterator, className) {\n        this.iterableIterator = iterableIterator;\n        this[Symbol.toStringTag] = className;\n    }\n    *map(callbackfn) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            yield callbackfn(value, index++);\n        }\n        return undefined;\n    }\n    *filter(callbackfn) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            if (callbackfn(value, index++)) {\n                yield value;\n            }\n        }\n        return undefined;\n    }\n    reduce(callbackfn, initialValue) {\n        let index = 0;\n        let accumulator = initialValue;\n        for (const value of this.iterableIterator) {\n            accumulator = callbackfn(accumulator, value, index++);\n        }\n        return accumulator;\n    }\n    forEach(callbackfn) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            callbackfn(value, index++);\n        }\n    }\n    *take(limit) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            if (index >= limit) {\n                break;\n            }\n            yield value;\n            index++;\n        }\n        return undefined;\n    }\n    *drop(count) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            if (index >= count) {\n                yield value;\n            }\n            index++;\n        }\n        return undefined;\n    }\n    *flatMap(callback) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            const iteratorOrIterable = callback(value, index++);\n            if ((0, utils_js_1.isIterable)(iteratorOrIterable)) {\n                for (const innerValue of iteratorOrIterable) {\n                    yield innerValue;\n                }\n            }\n            else {\n                for (const innerValue of {\n                    [Symbol.iterator]: () => iteratorOrIterable,\n                }) {\n                    yield innerValue;\n                }\n            }\n        }\n        return undefined;\n    }\n    some(predicate) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            if (predicate(value, index++)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    every(predicate) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            if (!predicate(value, index++)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    find(predicate) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            if (predicate(value, index++)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    toArray() {\n        return Array.from(this.iterableIterator);\n    }\n    [Symbol.dispose]() {\n        if (typeof this.iterableIterator.return === 'function') {\n            this.iterableIterator.return();\n        }\n    }\n    next(...[value]) {\n        return this.iterableIterator.next(value);\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        const record = {};\n        this.forEach((value, key) => {\n            const inspectedValue = (0, node_util_1.inspect)(value);\n            record[key] = inspectedValue.includes(',')\n                ? inspectedValue.split(',').map(el => el.trim())\n                : inspectedValue;\n        });\n        return `${this[Symbol.toStringTag]} ${(0, node_util_1.inspect)(record)}`;\n    }\n}\nexports.PonyfillIteratorObject = PonyfillIteratorObject;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0l0ZXJhdG9yT2JqZWN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDhCQUE4QjtBQUM5QixvQkFBb0IsbUJBQU8sQ0FBQyw0QkFBVztBQUN2QyxtQkFBbUIsbUJBQU8sQ0FBQyw2RUFBWTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Qsa0JBQWtCLDBCQUEwQixFQUFFLGlDQUFpQztBQUMvRTtBQUNBO0FBQ0EsOEJBQThCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9JdGVyYXRvck9iamVjdC5qcz9jYmYxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbEl0ZXJhdG9yT2JqZWN0ID0gdm9pZCAwO1xuY29uc3Qgbm9kZV91dGlsXzEgPSByZXF1aXJlKFwibm9kZTp1dGlsXCIpO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xuY2xhc3MgUG9ueWZpbGxJdGVyYXRvck9iamVjdCB7XG4gICAgaXRlcmFibGVJdGVyYXRvcjtcbiAgICBbU3ltYm9sLnRvU3RyaW5nVGFnXSA9ICdJdGVyYXRvck9iamVjdCc7XG4gICAgY29uc3RydWN0b3IoaXRlcmFibGVJdGVyYXRvciwgY2xhc3NOYW1lKSB7XG4gICAgICAgIHRoaXMuaXRlcmFibGVJdGVyYXRvciA9IGl0ZXJhYmxlSXRlcmF0b3I7XG4gICAgICAgIHRoaXNbU3ltYm9sLnRvU3RyaW5nVGFnXSA9IGNsYXNzTmFtZTtcbiAgICB9XG4gICAgKm1hcChjYWxsYmFja2ZuKSB7XG4gICAgICAgIGxldCBpbmRleCA9IDA7XG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdGhpcy5pdGVyYWJsZUl0ZXJhdG9yKSB7XG4gICAgICAgICAgICB5aWVsZCBjYWxsYmFja2ZuKHZhbHVlLCBpbmRleCsrKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICAqZmlsdGVyKGNhbGxiYWNrZm4pIHtcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB0aGlzLml0ZXJhYmxlSXRlcmF0b3IpIHtcbiAgICAgICAgICAgIGlmIChjYWxsYmFja2ZuKHZhbHVlLCBpbmRleCsrKSkge1xuICAgICAgICAgICAgICAgIHlpZWxkIHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJlZHVjZShjYWxsYmFja2ZuLCBpbml0aWFsVmFsdWUpIHtcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgbGV0IGFjY3VtdWxhdG9yID0gaW5pdGlhbFZhbHVlO1xuICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIHRoaXMuaXRlcmFibGVJdGVyYXRvcikge1xuICAgICAgICAgICAgYWNjdW11bGF0b3IgPSBjYWxsYmFja2ZuKGFjY3VtdWxhdG9yLCB2YWx1ZSwgaW5kZXgrKyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFjY3VtdWxhdG9yO1xuICAgIH1cbiAgICBmb3JFYWNoKGNhbGxiYWNrZm4pIHtcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB0aGlzLml0ZXJhYmxlSXRlcmF0b3IpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrZm4odmFsdWUsIGluZGV4KyspO1xuICAgICAgICB9XG4gICAgfVxuICAgICp0YWtlKGxpbWl0KSB7XG4gICAgICAgIGxldCBpbmRleCA9IDA7XG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdGhpcy5pdGVyYWJsZUl0ZXJhdG9yKSB7XG4gICAgICAgICAgICBpZiAoaW5kZXggPj0gbGltaXQpIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHlpZWxkIHZhbHVlO1xuICAgICAgICAgICAgaW5kZXgrKztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICAqZHJvcChjb3VudCkge1xuICAgICAgICBsZXQgaW5kZXggPSAwO1xuICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIHRoaXMuaXRlcmFibGVJdGVyYXRvcikge1xuICAgICAgICAgICAgaWYgKGluZGV4ID49IGNvdW50KSB7XG4gICAgICAgICAgICAgICAgeWllbGQgdmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpbmRleCsrO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgICpmbGF0TWFwKGNhbGxiYWNrKSB7XG4gICAgICAgIGxldCBpbmRleCA9IDA7XG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdGhpcy5pdGVyYWJsZUl0ZXJhdG9yKSB7XG4gICAgICAgICAgICBjb25zdCBpdGVyYXRvck9ySXRlcmFibGUgPSBjYWxsYmFjayh2YWx1ZSwgaW5kZXgrKyk7XG4gICAgICAgICAgICBpZiAoKDAsIHV0aWxzX2pzXzEuaXNJdGVyYWJsZSkoaXRlcmF0b3JPckl0ZXJhYmxlKSkge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgaW5uZXJWYWx1ZSBvZiBpdGVyYXRvck9ySXRlcmFibGUpIHtcbiAgICAgICAgICAgICAgICAgICAgeWllbGQgaW5uZXJWYWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGlubmVyVmFsdWUgb2Yge1xuICAgICAgICAgICAgICAgICAgICBbU3ltYm9sLml0ZXJhdG9yXTogKCkgPT4gaXRlcmF0b3JPckl0ZXJhYmxlLFxuICAgICAgICAgICAgICAgIH0pIHtcbiAgICAgICAgICAgICAgICAgICAgeWllbGQgaW5uZXJWYWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgc29tZShwcmVkaWNhdGUpIHtcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB0aGlzLml0ZXJhYmxlSXRlcmF0b3IpIHtcbiAgICAgICAgICAgIGlmIChwcmVkaWNhdGUodmFsdWUsIGluZGV4KyspKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBldmVyeShwcmVkaWNhdGUpIHtcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB0aGlzLml0ZXJhYmxlSXRlcmF0b3IpIHtcbiAgICAgICAgICAgIGlmICghcHJlZGljYXRlKHZhbHVlLCBpbmRleCsrKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgZmluZChwcmVkaWNhdGUpIHtcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB0aGlzLml0ZXJhYmxlSXRlcmF0b3IpIHtcbiAgICAgICAgICAgIGlmIChwcmVkaWNhdGUodmFsdWUsIGluZGV4KyspKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHRvQXJyYXkoKSB7XG4gICAgICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMuaXRlcmFibGVJdGVyYXRvcik7XG4gICAgfVxuICAgIFtTeW1ib2wuZGlzcG9zZV0oKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5pdGVyYWJsZUl0ZXJhdG9yLnJldHVybiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdGhpcy5pdGVyYWJsZUl0ZXJhdG9yLnJldHVybigpO1xuICAgICAgICB9XG4gICAgfVxuICAgIG5leHQoLi4uW3ZhbHVlXSkge1xuICAgICAgICByZXR1cm4gdGhpcy5pdGVyYWJsZUl0ZXJhdG9yLm5leHQodmFsdWUpO1xuICAgIH1cbiAgICBbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIFtTeW1ib2wuZm9yKCdub2RlanMudXRpbC5pbnNwZWN0LmN1c3RvbScpXSgpIHtcbiAgICAgICAgY29uc3QgcmVjb3JkID0ge307XG4gICAgICAgIHRoaXMuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaW5zcGVjdGVkVmFsdWUgPSAoMCwgbm9kZV91dGlsXzEuaW5zcGVjdCkodmFsdWUpO1xuICAgICAgICAgICAgcmVjb3JkW2tleV0gPSBpbnNwZWN0ZWRWYWx1ZS5pbmNsdWRlcygnLCcpXG4gICAgICAgICAgICAgICAgPyBpbnNwZWN0ZWRWYWx1ZS5zcGxpdCgnLCcpLm1hcChlbCA9PiBlbC50cmltKCkpXG4gICAgICAgICAgICAgICAgOiBpbnNwZWN0ZWRWYWx1ZTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBgJHt0aGlzW1N5bWJvbC50b1N0cmluZ1RhZ119ICR7KDAsIG5vZGVfdXRpbF8xLmluc3BlY3QpKHJlY29yZCl9YDtcbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsSXRlcmF0b3JPYmplY3QgPSBQb255ZmlsbEl0ZXJhdG9yT2JqZWN0O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/IteratorObject.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js":
/*!********************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillReadableStream = void 0;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction createController(desiredSize, readable) {\n    let chunks = [];\n    let _closed = false;\n    let flushed = false;\n    return {\n        desiredSize,\n        enqueue(chunk) {\n            const buf = typeof chunk === 'string' ? Buffer.from(chunk) : chunk;\n            if (!flushed) {\n                chunks.push(buf);\n            }\n            else {\n                readable.push(buf);\n            }\n        },\n        close() {\n            if (chunks.length > 0) {\n                this._flush();\n            }\n            readable.push(null);\n            _closed = true;\n        },\n        error(error) {\n            if (chunks.length > 0) {\n                this._flush();\n            }\n            readable.destroy(error);\n        },\n        get _closed() {\n            return _closed;\n        },\n        _flush() {\n            flushed = true;\n            if (chunks.length > 0) {\n                const concatenated = chunks.length > 1 ? Buffer.concat(chunks) : chunks[0];\n                readable.push(concatenated);\n                chunks = [];\n            }\n        },\n    };\n}\nfunction isNodeReadable(obj) {\n    return obj?.read != null;\n}\nfunction isReadableStream(obj) {\n    return obj?.getReader != null;\n}\nclass PonyfillReadableStream {\n    readable;\n    constructor(underlyingSource) {\n        if (underlyingSource instanceof PonyfillReadableStream && underlyingSource.readable != null) {\n            this.readable = underlyingSource.readable;\n        }\n        else if (isNodeReadable(underlyingSource)) {\n            this.readable = underlyingSource;\n        }\n        else if (isReadableStream(underlyingSource)) {\n            this.readable = stream_1.Readable.fromWeb(underlyingSource);\n        }\n        else {\n            let started = false;\n            let ongoing = false;\n            this.readable = new stream_1.Readable({\n                read(desiredSize) {\n                    if (ongoing) {\n                        return;\n                    }\n                    ongoing = true;\n                    return Promise.resolve().then(async () => {\n                        if (!started) {\n                            const controller = createController(desiredSize, this);\n                            started = true;\n                            await underlyingSource?.start?.(controller);\n                            controller._flush();\n                            if (controller._closed) {\n                                return;\n                            }\n                        }\n                        const controller = createController(desiredSize, this);\n                        await underlyingSource?.pull?.(controller);\n                        controller._flush();\n                        ongoing = false;\n                    });\n                },\n                destroy(err, callback) {\n                    if (underlyingSource?.cancel) {\n                        try {\n                            const res$ = underlyingSource.cancel(err);\n                            if (res$?.then) {\n                                return res$.then(() => {\n                                    callback(null);\n                                }, err => {\n                                    callback(err);\n                                });\n                            }\n                        }\n                        catch (err) {\n                            callback(err);\n                            return;\n                        }\n                    }\n                    callback(null);\n                },\n            });\n        }\n    }\n    cancel(reason) {\n        this.readable.destroy(reason);\n        return new Promise(resolve => this.readable.once('end', resolve));\n    }\n    locked = false;\n    getReader(_options) {\n        const iterator = this.readable[Symbol.asyncIterator]();\n        this.locked = true;\n        return {\n            read() {\n                return iterator.next();\n            },\n            releaseLock: () => {\n                if (iterator.return) {\n                    const retResult$ = iterator.return();\n                    if (retResult$.then) {\n                        retResult$.then(() => {\n                            this.locked = false;\n                        });\n                        return;\n                    }\n                }\n                this.locked = false;\n            },\n            cancel: reason => {\n                if (iterator.return) {\n                    const retResult$ = iterator.return(reason);\n                    if (retResult$.then) {\n                        return retResult$.then(() => {\n                            this.locked = false;\n                        });\n                    }\n                }\n                this.locked = false;\n                return (0, utils_js_1.fakePromise)(undefined);\n            },\n            closed: new Promise((resolve, reject) => {\n                this.readable.once('end', resolve);\n                this.readable.once('error', reject);\n            }),\n        };\n    }\n    [Symbol.asyncIterator]() {\n        return this.readable[Symbol.asyncIterator]();\n    }\n    tee() {\n        throw new Error('Not implemented');\n    }\n    pipeTo(destination) {\n        if (isPonyfillWritableStream(destination)) {\n            return new Promise((resolve, reject) => {\n                this.readable.pipe(destination.writable);\n                destination.writable.once('finish', resolve);\n                destination.writable.once('error', reject);\n            });\n        }\n        else {\n            const writer = destination.getWriter();\n            return Promise.resolve().then(async () => {\n                try {\n                    for await (const chunk of this) {\n                        await writer.write(chunk);\n                    }\n                    await writer.close();\n                }\n                catch (err) {\n                    await writer.abort(err);\n                }\n            });\n        }\n    }\n    pipeThrough({ writable, readable, }) {\n        this.pipeTo(writable);\n        return readable;\n    }\n    static [Symbol.hasInstance](instance) {\n        return isReadableStream(instance);\n    }\n}\nexports.PonyfillReadableStream = PonyfillReadableStream;\nfunction isPonyfillWritableStream(obj) {\n    return obj?.writable != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Request.js":
/*!*************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/Request.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillRequest = void 0;\nconst http_1 = __webpack_require__(/*! http */ \"http\");\nconst https_1 = __webpack_require__(/*! https */ \"https\");\nconst Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nconst Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nfunction isRequest(input) {\n    return input[Symbol.toStringTag] === 'Request';\n}\nfunction isURL(obj) {\n    return obj?.href != null;\n}\nclass PonyfillRequest extends Body_js_1.PonyfillBody {\n    constructor(input, options) {\n        let url;\n        let bodyInit = null;\n        let requestInit;\n        if (typeof input === 'string') {\n            url = input;\n        }\n        else if (isURL(input)) {\n            url = input.toString();\n        }\n        else if (isRequest(input)) {\n            url = input.url;\n            bodyInit = input.body;\n            requestInit = input;\n        }\n        if (options != null) {\n            bodyInit = options.body || null;\n            requestInit = options;\n        }\n        super(bodyInit, options);\n        this.cache = requestInit?.cache || 'default';\n        this.credentials = requestInit?.credentials || 'same-origin';\n        this.headers =\n            requestInit?.headers && (0, Headers_js_1.isHeadersLike)(requestInit.headers)\n                ? requestInit.headers\n                : new Headers_js_1.PonyfillHeaders(requestInit?.headers);\n        this.integrity = requestInit?.integrity || '';\n        this.keepalive = requestInit?.keepalive != null ? requestInit?.keepalive : false;\n        this.method = requestInit?.method?.toUpperCase() || 'GET';\n        this.mode = requestInit?.mode || 'cors';\n        this.redirect = requestInit?.redirect || 'follow';\n        this.referrer = requestInit?.referrer || 'about:client';\n        this.referrerPolicy = requestInit?.referrerPolicy || 'no-referrer';\n        this._signal = requestInit?.signal;\n        this.headersSerializer = requestInit?.headersSerializer;\n        this.duplex = requestInit?.duplex || 'half';\n        this.url = url || '';\n        this.destination = 'document';\n        this.priority = 'auto';\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.handleContentLengthHeader(true);\n        }\n        if (requestInit?.agent != null) {\n            if (requestInit.agent === false) {\n                this.agent = false;\n            }\n            else if (this.url.startsWith('http:/') && requestInit.agent instanceof http_1.Agent) {\n                this.agent = requestInit.agent;\n            }\n            else if (this.url.startsWith('https:/') && requestInit.agent instanceof https_1.Agent) {\n                this.agent = requestInit.agent;\n            }\n        }\n    }\n    headersSerializer;\n    cache;\n    credentials;\n    destination;\n    headers;\n    integrity;\n    keepalive;\n    method;\n    mode;\n    priority;\n    redirect;\n    referrer;\n    referrerPolicy;\n    url;\n    duplex;\n    agent;\n    _signal;\n    get signal() {\n        // Create a new signal only if needed\n        // Because the creation of signal is expensive\n        if (!this._signal) {\n            this._signal = new AbortController().signal;\n        }\n        return this._signal;\n    }\n    clone() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'Request';\n}\nexports.PonyfillRequest = PonyfillRequest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1JlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLGVBQWUsbUJBQU8sQ0FBQyxrQkFBTTtBQUM3QixnQkFBZ0IsbUJBQU8sQ0FBQyxvQkFBTztBQUMvQixrQkFBa0IsbUJBQU8sQ0FBQywyRUFBVztBQUNyQyxxQkFBcUIsbUJBQU8sQ0FBQyxpRkFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvUmVxdWVzdC5qcz8wZDczIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFJlcXVlc3QgPSB2b2lkIDA7XG5jb25zdCBodHRwXzEgPSByZXF1aXJlKFwiaHR0cFwiKTtcbmNvbnN0IGh0dHBzXzEgPSByZXF1aXJlKFwiaHR0cHNcIik7XG5jb25zdCBCb2R5X2pzXzEgPSByZXF1aXJlKFwiLi9Cb2R5LmpzXCIpO1xuY29uc3QgSGVhZGVyc19qc18xID0gcmVxdWlyZShcIi4vSGVhZGVycy5qc1wiKTtcbmZ1bmN0aW9uIGlzUmVxdWVzdChpbnB1dCkge1xuICAgIHJldHVybiBpbnB1dFtTeW1ib2wudG9TdHJpbmdUYWddID09PSAnUmVxdWVzdCc7XG59XG5mdW5jdGlvbiBpc1VSTChvYmopIHtcbiAgICByZXR1cm4gb2JqPy5ocmVmICE9IG51bGw7XG59XG5jbGFzcyBQb255ZmlsbFJlcXVlc3QgZXh0ZW5kcyBCb2R5X2pzXzEuUG9ueWZpbGxCb2R5IHtcbiAgICBjb25zdHJ1Y3RvcihpbnB1dCwgb3B0aW9ucykge1xuICAgICAgICBsZXQgdXJsO1xuICAgICAgICBsZXQgYm9keUluaXQgPSBudWxsO1xuICAgICAgICBsZXQgcmVxdWVzdEluaXQ7XG4gICAgICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB1cmwgPSBpbnB1dDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc1VSTChpbnB1dCkpIHtcbiAgICAgICAgICAgIHVybCA9IGlucHV0LnRvU3RyaW5nKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNSZXF1ZXN0KGlucHV0KSkge1xuICAgICAgICAgICAgdXJsID0gaW5wdXQudXJsO1xuICAgICAgICAgICAgYm9keUluaXQgPSBpbnB1dC5ib2R5O1xuICAgICAgICAgICAgcmVxdWVzdEluaXQgPSBpbnB1dDtcbiAgICAgICAgfVxuICAgICAgICBpZiAob3B0aW9ucyAhPSBudWxsKSB7XG4gICAgICAgICAgICBib2R5SW5pdCA9IG9wdGlvbnMuYm9keSB8fCBudWxsO1xuICAgICAgICAgICAgcmVxdWVzdEluaXQgPSBvcHRpb25zO1xuICAgICAgICB9XG4gICAgICAgIHN1cGVyKGJvZHlJbml0LCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5jYWNoZSA9IHJlcXVlc3RJbml0Py5jYWNoZSB8fCAnZGVmYXVsdCc7XG4gICAgICAgIHRoaXMuY3JlZGVudGlhbHMgPSByZXF1ZXN0SW5pdD8uY3JlZGVudGlhbHMgfHwgJ3NhbWUtb3JpZ2luJztcbiAgICAgICAgdGhpcy5oZWFkZXJzID1cbiAgICAgICAgICAgIHJlcXVlc3RJbml0Py5oZWFkZXJzICYmICgwLCBIZWFkZXJzX2pzXzEuaXNIZWFkZXJzTGlrZSkocmVxdWVzdEluaXQuaGVhZGVycylcbiAgICAgICAgICAgICAgICA/IHJlcXVlc3RJbml0LmhlYWRlcnNcbiAgICAgICAgICAgICAgICA6IG5ldyBIZWFkZXJzX2pzXzEuUG9ueWZpbGxIZWFkZXJzKHJlcXVlc3RJbml0Py5oZWFkZXJzKTtcbiAgICAgICAgdGhpcy5pbnRlZ3JpdHkgPSByZXF1ZXN0SW5pdD8uaW50ZWdyaXR5IHx8ICcnO1xuICAgICAgICB0aGlzLmtlZXBhbGl2ZSA9IHJlcXVlc3RJbml0Py5rZWVwYWxpdmUgIT0gbnVsbCA/IHJlcXVlc3RJbml0Py5rZWVwYWxpdmUgOiBmYWxzZTtcbiAgICAgICAgdGhpcy5tZXRob2QgPSByZXF1ZXN0SW5pdD8ubWV0aG9kPy50b1VwcGVyQ2FzZSgpIHx8ICdHRVQnO1xuICAgICAgICB0aGlzLm1vZGUgPSByZXF1ZXN0SW5pdD8ubW9kZSB8fCAnY29ycyc7XG4gICAgICAgIHRoaXMucmVkaXJlY3QgPSByZXF1ZXN0SW5pdD8ucmVkaXJlY3QgfHwgJ2ZvbGxvdyc7XG4gICAgICAgIHRoaXMucmVmZXJyZXIgPSByZXF1ZXN0SW5pdD8ucmVmZXJyZXIgfHwgJ2Fib3V0OmNsaWVudCc7XG4gICAgICAgIHRoaXMucmVmZXJyZXJQb2xpY3kgPSByZXF1ZXN0SW5pdD8ucmVmZXJyZXJQb2xpY3kgfHwgJ25vLXJlZmVycmVyJztcbiAgICAgICAgdGhpcy5fc2lnbmFsID0gcmVxdWVzdEluaXQ/LnNpZ25hbDtcbiAgICAgICAgdGhpcy5oZWFkZXJzU2VyaWFsaXplciA9IHJlcXVlc3RJbml0Py5oZWFkZXJzU2VyaWFsaXplcjtcbiAgICAgICAgdGhpcy5kdXBsZXggPSByZXF1ZXN0SW5pdD8uZHVwbGV4IHx8ICdoYWxmJztcbiAgICAgICAgdGhpcy51cmwgPSB1cmwgfHwgJyc7XG4gICAgICAgIHRoaXMuZGVzdGluYXRpb24gPSAnZG9jdW1lbnQnO1xuICAgICAgICB0aGlzLnByaW9yaXR5ID0gJ2F1dG8nO1xuICAgICAgICBpZiAodGhpcy5tZXRob2QgIT09ICdHRVQnICYmIHRoaXMubWV0aG9kICE9PSAnSEVBRCcpIHtcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlQ29udGVudExlbmd0aEhlYWRlcih0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocmVxdWVzdEluaXQ/LmFnZW50ICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChyZXF1ZXN0SW5pdC5hZ2VudCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFnZW50ID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0aGlzLnVybC5zdGFydHNXaXRoKCdodHRwOi8nKSAmJiByZXF1ZXN0SW5pdC5hZ2VudCBpbnN0YW5jZW9mIGh0dHBfMS5BZ2VudCkge1xuICAgICAgICAgICAgICAgIHRoaXMuYWdlbnQgPSByZXF1ZXN0SW5pdC5hZ2VudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMudXJsLnN0YXJ0c1dpdGgoJ2h0dHBzOi8nKSAmJiByZXF1ZXN0SW5pdC5hZ2VudCBpbnN0YW5jZW9mIGh0dHBzXzEuQWdlbnQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFnZW50ID0gcmVxdWVzdEluaXQuYWdlbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgaGVhZGVyc1NlcmlhbGl6ZXI7XG4gICAgY2FjaGU7XG4gICAgY3JlZGVudGlhbHM7XG4gICAgZGVzdGluYXRpb247XG4gICAgaGVhZGVycztcbiAgICBpbnRlZ3JpdHk7XG4gICAga2VlcGFsaXZlO1xuICAgIG1ldGhvZDtcbiAgICBtb2RlO1xuICAgIHByaW9yaXR5O1xuICAgIHJlZGlyZWN0O1xuICAgIHJlZmVycmVyO1xuICAgIHJlZmVycmVyUG9saWN5O1xuICAgIHVybDtcbiAgICBkdXBsZXg7XG4gICAgYWdlbnQ7XG4gICAgX3NpZ25hbDtcbiAgICBnZXQgc2lnbmFsKCkge1xuICAgICAgICAvLyBDcmVhdGUgYSBuZXcgc2lnbmFsIG9ubHkgaWYgbmVlZGVkXG4gICAgICAgIC8vIEJlY2F1c2UgdGhlIGNyZWF0aW9uIG9mIHNpZ25hbCBpcyBleHBlbnNpdmVcbiAgICAgICAgaWYgKCF0aGlzLl9zaWduYWwpIHtcbiAgICAgICAgICAgIHRoaXMuX3NpZ25hbCA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKS5zaWduYWw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX3NpZ25hbDtcbiAgICB9XG4gICAgY2xvbmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBbU3ltYm9sLnRvU3RyaW5nVGFnXSA9ICdSZXF1ZXN0Jztcbn1cbmV4cG9ydHMuUG9ueWZpbGxSZXF1ZXN0ID0gUG9ueWZpbGxSZXF1ZXN0O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Request.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Response.js":
/*!**************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/Response.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillResponse = void 0;\nconst http_1 = __webpack_require__(/*! http */ \"http\");\nconst Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nconst Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nconst JSON_CONTENT_TYPE = 'application/json; charset=utf-8';\nclass PonyfillResponse extends Body_js_1.PonyfillBody {\n    headers;\n    constructor(body, init) {\n        super(body || null, init);\n        this.headers =\n            init?.headers && (0, Headers_js_1.isHeadersLike)(init.headers)\n                ? init.headers\n                : new Headers_js_1.PonyfillHeaders(init?.headers);\n        this.status = init?.status || 200;\n        this.statusText = init?.statusText || http_1.STATUS_CODES[this.status] || 'OK';\n        this.url = init?.url || '';\n        this.redirected = init?.redirected || false;\n        this.type = init?.type || 'default';\n        this.handleContentLengthHeader();\n    }\n    get ok() {\n        return this.status >= 200 && this.status < 300;\n    }\n    status;\n    statusText;\n    url;\n    redirected;\n    type;\n    clone() {\n        return this;\n    }\n    static error() {\n        return new PonyfillResponse(null, {\n            status: 500,\n            statusText: 'Internal Server Error',\n        });\n    }\n    static redirect(url, status = 302) {\n        if (status < 300 || status > 399) {\n            throw new RangeError('Invalid status code');\n        }\n        return new PonyfillResponse(null, {\n            headers: {\n                location: url,\n            },\n            status,\n        });\n    }\n    static json(data, init = {}) {\n        init.headers =\n            init?.headers && (0, Headers_js_1.isHeadersLike)(init.headers)\n                ? init.headers\n                : new Headers_js_1.PonyfillHeaders(init?.headers);\n        if (!init.headers.has('content-type')) {\n            init.headers.set('content-type', JSON_CONTENT_TYPE);\n        }\n        return new PonyfillResponse(JSON.stringify(data), init);\n    }\n}\nexports.PonyfillResponse = PonyfillResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QixlQUFlLG1CQUFPLENBQUMsa0JBQU07QUFDN0Isa0JBQWtCLG1CQUFPLENBQUMsMkVBQVc7QUFDckMscUJBQXFCLG1CQUFPLENBQUMsaUZBQWM7QUFDM0MsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9SZXNwb25zZS5qcz83ZTQzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFJlc3BvbnNlID0gdm9pZCAwO1xuY29uc3QgaHR0cF8xID0gcmVxdWlyZShcImh0dHBcIik7XG5jb25zdCBCb2R5X2pzXzEgPSByZXF1aXJlKFwiLi9Cb2R5LmpzXCIpO1xuY29uc3QgSGVhZGVyc19qc18xID0gcmVxdWlyZShcIi4vSGVhZGVycy5qc1wiKTtcbmNvbnN0IEpTT05fQ09OVEVOVF9UWVBFID0gJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLTgnO1xuY2xhc3MgUG9ueWZpbGxSZXNwb25zZSBleHRlbmRzIEJvZHlfanNfMS5Qb255ZmlsbEJvZHkge1xuICAgIGhlYWRlcnM7XG4gICAgY29uc3RydWN0b3IoYm9keSwgaW5pdCkge1xuICAgICAgICBzdXBlcihib2R5IHx8IG51bGwsIGluaXQpO1xuICAgICAgICB0aGlzLmhlYWRlcnMgPVxuICAgICAgICAgICAgaW5pdD8uaGVhZGVycyAmJiAoMCwgSGVhZGVyc19qc18xLmlzSGVhZGVyc0xpa2UpKGluaXQuaGVhZGVycylcbiAgICAgICAgICAgICAgICA/IGluaXQuaGVhZGVyc1xuICAgICAgICAgICAgICAgIDogbmV3IEhlYWRlcnNfanNfMS5Qb255ZmlsbEhlYWRlcnMoaW5pdD8uaGVhZGVycyk7XG4gICAgICAgIHRoaXMuc3RhdHVzID0gaW5pdD8uc3RhdHVzIHx8IDIwMDtcbiAgICAgICAgdGhpcy5zdGF0dXNUZXh0ID0gaW5pdD8uc3RhdHVzVGV4dCB8fCBodHRwXzEuU1RBVFVTX0NPREVTW3RoaXMuc3RhdHVzXSB8fCAnT0snO1xuICAgICAgICB0aGlzLnVybCA9IGluaXQ/LnVybCB8fCAnJztcbiAgICAgICAgdGhpcy5yZWRpcmVjdGVkID0gaW5pdD8ucmVkaXJlY3RlZCB8fCBmYWxzZTtcbiAgICAgICAgdGhpcy50eXBlID0gaW5pdD8udHlwZSB8fCAnZGVmYXVsdCc7XG4gICAgICAgIHRoaXMuaGFuZGxlQ29udGVudExlbmd0aEhlYWRlcigpO1xuICAgIH1cbiAgICBnZXQgb2soKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXR1cyA+PSAyMDAgJiYgdGhpcy5zdGF0dXMgPCAzMDA7XG4gICAgfVxuICAgIHN0YXR1cztcbiAgICBzdGF0dXNUZXh0O1xuICAgIHVybDtcbiAgICByZWRpcmVjdGVkO1xuICAgIHR5cGU7XG4gICAgY2xvbmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBzdGF0aWMgZXJyb3IoKSB7XG4gICAgICAgIHJldHVybiBuZXcgUG9ueWZpbGxSZXNwb25zZShudWxsLCB7XG4gICAgICAgICAgICBzdGF0dXM6IDUwMCxcbiAgICAgICAgICAgIHN0YXR1c1RleHQ6ICdJbnRlcm5hbCBTZXJ2ZXIgRXJyb3InLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RhdGljIHJlZGlyZWN0KHVybCwgc3RhdHVzID0gMzAyKSB7XG4gICAgICAgIGlmIChzdGF0dXMgPCAzMDAgfHwgc3RhdHVzID4gMzk5KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignSW52YWxpZCBzdGF0dXMgY29kZScpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUG9ueWZpbGxSZXNwb25zZShudWxsLCB7XG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgbG9jYXRpb246IHVybCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdGF0dXMsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzdGF0aWMganNvbihkYXRhLCBpbml0ID0ge30pIHtcbiAgICAgICAgaW5pdC5oZWFkZXJzID1cbiAgICAgICAgICAgIGluaXQ/LmhlYWRlcnMgJiYgKDAsIEhlYWRlcnNfanNfMS5pc0hlYWRlcnNMaWtlKShpbml0LmhlYWRlcnMpXG4gICAgICAgICAgICAgICAgPyBpbml0LmhlYWRlcnNcbiAgICAgICAgICAgICAgICA6IG5ldyBIZWFkZXJzX2pzXzEuUG9ueWZpbGxIZWFkZXJzKGluaXQ/LmhlYWRlcnMpO1xuICAgICAgICBpZiAoIWluaXQuaGVhZGVycy5oYXMoJ2NvbnRlbnQtdHlwZScpKSB7XG4gICAgICAgICAgICBpbml0LmhlYWRlcnMuc2V0KCdjb250ZW50LXR5cGUnLCBKU09OX0NPTlRFTlRfVFlQRSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBQb255ZmlsbFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KGRhdGEpLCBpbml0KTtcbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsUmVzcG9uc2UgPSBQb255ZmlsbFJlc3BvbnNlO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Response.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js":
/*!************************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillTextDecoder = exports.PonyfillTextEncoder = void 0;\nexports.PonyfillBtoa = PonyfillBtoa;\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nclass PonyfillTextEncoder {\n    encoding;\n    constructor(encoding = 'utf-8') {\n        this.encoding = encoding;\n    }\n    encode(input) {\n        return Buffer.from(input, this.encoding);\n    }\n    encodeInto(source, destination) {\n        const buffer = this.encode(source);\n        const copied = buffer.copy(destination);\n        return {\n            read: copied,\n            written: copied,\n        };\n    }\n}\nexports.PonyfillTextEncoder = PonyfillTextEncoder;\nclass PonyfillTextDecoder {\n    encoding;\n    fatal = false;\n    ignoreBOM = false;\n    constructor(encoding = 'utf-8', options) {\n        this.encoding = encoding;\n        if (options) {\n            this.fatal = options.fatal || false;\n            this.ignoreBOM = options.ignoreBOM || false;\n        }\n    }\n    decode(input) {\n        if (Buffer.isBuffer(input)) {\n            return input.toString(this.encoding);\n        }\n        if ((0, utils_js_1.isArrayBufferView)(input)) {\n            return Buffer.from(input.buffer, input.byteOffset, input.byteLength).toString(this.encoding);\n        }\n        return Buffer.from(input).toString(this.encoding);\n    }\n}\nexports.PonyfillTextDecoder = PonyfillTextDecoder;\nfunction PonyfillBtoa(input) {\n    return Buffer.from(input, 'binary').toString('base64');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RleHRFbmNvZGVyRGVjb2Rlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkIsR0FBRywyQkFBMkI7QUFDekQsb0JBQW9CO0FBQ3BCLG1CQUFtQixtQkFBTyxDQUFDLDZFQUFZO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvVGV4dEVuY29kZXJEZWNvZGVyLmpzPzliYWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsVGV4dERlY29kZXIgPSBleHBvcnRzLlBvbnlmaWxsVGV4dEVuY29kZXIgPSB2b2lkIDA7XG5leHBvcnRzLlBvbnlmaWxsQnRvYSA9IFBvbnlmaWxsQnRvYTtcbmNvbnN0IHV0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi91dGlscy5qc1wiKTtcbmNsYXNzIFBvbnlmaWxsVGV4dEVuY29kZXIge1xuICAgIGVuY29kaW5nO1xuICAgIGNvbnN0cnVjdG9yKGVuY29kaW5nID0gJ3V0Zi04Jykge1xuICAgICAgICB0aGlzLmVuY29kaW5nID0gZW5jb2Rpbmc7XG4gICAgfVxuICAgIGVuY29kZShpbnB1dCkge1xuICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20oaW5wdXQsIHRoaXMuZW5jb2RpbmcpO1xuICAgIH1cbiAgICBlbmNvZGVJbnRvKHNvdXJjZSwgZGVzdGluYXRpb24pIHtcbiAgICAgICAgY29uc3QgYnVmZmVyID0gdGhpcy5lbmNvZGUoc291cmNlKTtcbiAgICAgICAgY29uc3QgY29waWVkID0gYnVmZmVyLmNvcHkoZGVzdGluYXRpb24pO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcmVhZDogY29waWVkLFxuICAgICAgICAgICAgd3JpdHRlbjogY29waWVkLFxuICAgICAgICB9O1xuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxUZXh0RW5jb2RlciA9IFBvbnlmaWxsVGV4dEVuY29kZXI7XG5jbGFzcyBQb255ZmlsbFRleHREZWNvZGVyIHtcbiAgICBlbmNvZGluZztcbiAgICBmYXRhbCA9IGZhbHNlO1xuICAgIGlnbm9yZUJPTSA9IGZhbHNlO1xuICAgIGNvbnN0cnVjdG9yKGVuY29kaW5nID0gJ3V0Zi04Jywgb3B0aW9ucykge1xuICAgICAgICB0aGlzLmVuY29kaW5nID0gZW5jb2Rpbmc7XG4gICAgICAgIGlmIChvcHRpb25zKSB7XG4gICAgICAgICAgICB0aGlzLmZhdGFsID0gb3B0aW9ucy5mYXRhbCB8fCBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuaWdub3JlQk9NID0gb3B0aW9ucy5pZ25vcmVCT00gfHwgZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZGVjb2RlKGlucHV0KSB7XG4gICAgICAgIGlmIChCdWZmZXIuaXNCdWZmZXIoaW5wdXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gaW5wdXQudG9TdHJpbmcodGhpcy5lbmNvZGluZyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCgwLCB1dGlsc19qc18xLmlzQXJyYXlCdWZmZXJWaWV3KShpbnB1dCkpIHtcbiAgICAgICAgICAgIHJldHVybiBCdWZmZXIuZnJvbShpbnB1dC5idWZmZXIsIGlucHV0LmJ5dGVPZmZzZXQsIGlucHV0LmJ5dGVMZW5ndGgpLnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBCdWZmZXIuZnJvbShpbnB1dCkudG9TdHJpbmcodGhpcy5lbmNvZGluZyk7XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbFRleHREZWNvZGVyID0gUG9ueWZpbGxUZXh0RGVjb2RlcjtcbmZ1bmN0aW9uIFBvbnlmaWxsQnRvYShpbnB1dCkge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbShpbnB1dCwgJ2JpbmFyeScpLnRvU3RyaW5nKCdiYXNlNjQnKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillTransformStream = void 0;\nconst node_stream_1 = __webpack_require__(/*! node:stream */ \"node:stream\");\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst WritableStream_js_1 = __webpack_require__(/*! ./WritableStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\");\nclass PonyfillTransformStream {\n    transform;\n    writable;\n    readable;\n    constructor(transformer) {\n        if (transformer instanceof node_stream_1.Transform) {\n            this.transform = transformer;\n        }\n        else if (transformer) {\n            const controller = {\n                enqueue(chunk) {\n                    transform.push(chunk);\n                },\n                error(reason) {\n                    transform.destroy(reason);\n                },\n                terminate() {\n                    transform.end();\n                },\n                get desiredSize() {\n                    return transform.writableLength;\n                },\n            };\n            const transform = new node_stream_1.Transform({\n                read() { },\n                write(chunk, _encoding, callback) {\n                    try {\n                        const result = transformer.transform?.(chunk, controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n                final(callback) {\n                    try {\n                        const result = transformer.flush?.(controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n            });\n            this.transform = transform;\n        }\n        else {\n            this.transform = new node_stream_1.Transform();\n        }\n        this.writable = new WritableStream_js_1.PonyfillWritableStream(this.transform);\n        this.readable = new ReadableStream_js_1.PonyfillReadableStream(this.transform);\n    }\n}\nexports.PonyfillTransformStream = PonyfillTransformStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RyYW5zZm9ybVN0cmVhbS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0I7QUFDL0Isc0JBQXNCLG1CQUFPLENBQUMsZ0NBQWE7QUFDM0MsNEJBQTRCLG1CQUFPLENBQUMsK0ZBQXFCO0FBQ3pELDRCQUE0QixtQkFBTyxDQUFDLCtGQUFxQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9UcmFuc2Zvcm1TdHJlYW0uanM/MmQwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxUcmFuc2Zvcm1TdHJlYW0gPSB2b2lkIDA7XG5jb25zdCBub2RlX3N0cmVhbV8xID0gcmVxdWlyZShcIm5vZGU6c3RyZWFtXCIpO1xuY29uc3QgUmVhZGFibGVTdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL1JlYWRhYmxlU3RyZWFtLmpzXCIpO1xuY29uc3QgV3JpdGFibGVTdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL1dyaXRhYmxlU3RyZWFtLmpzXCIpO1xuY2xhc3MgUG9ueWZpbGxUcmFuc2Zvcm1TdHJlYW0ge1xuICAgIHRyYW5zZm9ybTtcbiAgICB3cml0YWJsZTtcbiAgICByZWFkYWJsZTtcbiAgICBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm1lcikge1xuICAgICAgICBpZiAodHJhbnNmb3JtZXIgaW5zdGFuY2VvZiBub2RlX3N0cmVhbV8xLlRyYW5zZm9ybSkge1xuICAgICAgICAgICAgdGhpcy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1lcjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0cmFuc2Zvcm1lcikge1xuICAgICAgICAgICAgY29uc3QgY29udHJvbGxlciA9IHtcbiAgICAgICAgICAgICAgICBlbnF1ZXVlKGNodW5rKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybS5wdXNoKGNodW5rKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGVycm9yKHJlYXNvbikge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm0uZGVzdHJveShyZWFzb24pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgdGVybWluYXRlKCkge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm0uZW5kKCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgZGVzaXJlZFNpemUoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cmFuc2Zvcm0ud3JpdGFibGVMZW5ndGg7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjb25zdCB0cmFuc2Zvcm0gPSBuZXcgbm9kZV9zdHJlYW1fMS5UcmFuc2Zvcm0oe1xuICAgICAgICAgICAgICAgIHJlYWQoKSB7IH0sXG4gICAgICAgICAgICAgICAgd3JpdGUoY2h1bmssIF9lbmNvZGluZywgY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHRyYW5zZm9ybWVyLnRyYW5zZm9ybT8uKGNodW5rLCBjb250cm9sbGVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIGVyciA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGZpbmFsKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSB0cmFuc2Zvcm1lci5mbHVzaD8uKGNvbnRyb2xsZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgZXJyID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMudHJhbnNmb3JtID0gdHJhbnNmb3JtO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy50cmFuc2Zvcm0gPSBuZXcgbm9kZV9zdHJlYW1fMS5UcmFuc2Zvcm0oKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLndyaXRhYmxlID0gbmV3IFdyaXRhYmxlU3RyZWFtX2pzXzEuUG9ueWZpbGxXcml0YWJsZVN0cmVhbSh0aGlzLnRyYW5zZm9ybSk7XG4gICAgICAgIHRoaXMucmVhZGFibGUgPSBuZXcgUmVhZGFibGVTdHJlYW1fanNfMS5Qb255ZmlsbFJlYWRhYmxlU3RyZWFtKHRoaXMudHJhbnNmb3JtKTtcbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsVHJhbnNmb3JtU3RyZWFtID0gUG9ueWZpbGxUcmFuc2Zvcm1TdHJlYW07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URL.js":
/*!*********************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/URL.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillURL = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst fast_querystring_1 = tslib_1.__importDefault(__webpack_require__(/*! fast-querystring */ \"(rsc)/./node_modules/fast-querystring/lib/index.js\"));\nconst fast_url_parser_1 = tslib_1.__importDefault(__webpack_require__(/*! @kamilkisiela/fast-url-parser */ \"(rsc)/./node_modules/@kamilkisiela/fast-url-parser/src/urlparser.js\"));\nconst URLSearchParams_js_1 = __webpack_require__(/*! ./URLSearchParams.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\");\nfast_url_parser_1.default.queryString = fast_querystring_1.default;\nclass PonyfillURL extends fast_url_parser_1.default {\n    constructor(url, base) {\n        super();\n        if (url.startsWith('data:')) {\n            this.protocol = 'data:';\n            this.pathname = url.slice('data:'.length);\n            return;\n        }\n        this.parse(url, false);\n        if (base) {\n            const baseParsed = typeof base === 'string' ? new PonyfillURL(base) : base;\n            this.protocol = this.protocol || baseParsed.protocol;\n            this.host = this.host || baseParsed.host;\n            this.pathname = this.pathname || baseParsed.pathname;\n        }\n    }\n    get origin() {\n        return `${this.protocol}//${this.host}`;\n    }\n    _searchParams;\n    get searchParams() {\n        if (!this._searchParams) {\n            this._searchParams = new URLSearchParams_js_1.PonyfillURLSearchParams(this.query);\n        }\n        return this._searchParams;\n    }\n    get username() {\n        return this.auth?.split(':')[0] || '';\n    }\n    set username(value) {\n        this.auth = `${value}:${this.password}`;\n    }\n    get password() {\n        return this.auth?.split(':')[1] || '';\n    }\n    set password(value) {\n        this.auth = `${this.username}:${value}`;\n    }\n    toString() {\n        return this.format();\n    }\n    toJSON() {\n        return this.toString();\n    }\n    static blobRegistry = new Map();\n    static createObjectURL(blob) {\n        const blobUrl = `blob:whatwgnode:${(0, crypto_1.randomUUID)()}`;\n        this.blobRegistry.set(blobUrl, blob);\n        return blobUrl;\n    }\n    static resolveObjectURL(url) {\n        if (!this.blobRegistry.has(url)) {\n            URL.revokeObjectURL(url);\n        }\n        else {\n            this.blobRegistry.delete(url);\n        }\n    }\n    static getBlobFromURL(url) {\n        return (this.blobRegistry.get(url) || (0, buffer_1.resolveObjectURL)(url));\n    }\n}\nexports.PonyfillURL = PonyfillURL;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1VSTC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkIsZ0JBQWdCLG1CQUFPLENBQUMsdURBQU87QUFDL0IsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakMsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakMsbURBQW1ELG1CQUFPLENBQUMsNEVBQWtCO0FBQzdFLGtEQUFrRCxtQkFBTyxDQUFDLDBHQUErQjtBQUN6Riw2QkFBNkIsbUJBQU8sQ0FBQyxpR0FBc0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGNBQWMsSUFBSSxVQUFVO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixNQUFNLEdBQUcsY0FBYztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGNBQWMsR0FBRyxNQUFNO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQywyQkFBMkI7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9VUkwuanM/YTgzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxVUkwgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgYnVmZmVyXzEgPSByZXF1aXJlKFwiYnVmZmVyXCIpO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuY29uc3QgZmFzdF9xdWVyeXN0cmluZ18xID0gdHNsaWJfMS5fX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImZhc3QtcXVlcnlzdHJpbmdcIikpO1xuY29uc3QgZmFzdF91cmxfcGFyc2VyXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiQGthbWlsa2lzaWVsYS9mYXN0LXVybC1wYXJzZXJcIikpO1xuY29uc3QgVVJMU2VhcmNoUGFyYW1zX2pzXzEgPSByZXF1aXJlKFwiLi9VUkxTZWFyY2hQYXJhbXMuanNcIik7XG5mYXN0X3VybF9wYXJzZXJfMS5kZWZhdWx0LnF1ZXJ5U3RyaW5nID0gZmFzdF9xdWVyeXN0cmluZ18xLmRlZmF1bHQ7XG5jbGFzcyBQb255ZmlsbFVSTCBleHRlbmRzIGZhc3RfdXJsX3BhcnNlcl8xLmRlZmF1bHQge1xuICAgIGNvbnN0cnVjdG9yKHVybCwgYmFzZSkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICBpZiAodXJsLnN0YXJ0c1dpdGgoJ2RhdGE6JykpIHtcbiAgICAgICAgICAgIHRoaXMucHJvdG9jb2wgPSAnZGF0YTonO1xuICAgICAgICAgICAgdGhpcy5wYXRobmFtZSA9IHVybC5zbGljZSgnZGF0YTonLmxlbmd0aCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wYXJzZSh1cmwsIGZhbHNlKTtcbiAgICAgICAgaWYgKGJhc2UpIHtcbiAgICAgICAgICAgIGNvbnN0IGJhc2VQYXJzZWQgPSB0eXBlb2YgYmFzZSA9PT0gJ3N0cmluZycgPyBuZXcgUG9ueWZpbGxVUkwoYmFzZSkgOiBiYXNlO1xuICAgICAgICAgICAgdGhpcy5wcm90b2NvbCA9IHRoaXMucHJvdG9jb2wgfHwgYmFzZVBhcnNlZC5wcm90b2NvbDtcbiAgICAgICAgICAgIHRoaXMuaG9zdCA9IHRoaXMuaG9zdCB8fCBiYXNlUGFyc2VkLmhvc3Q7XG4gICAgICAgICAgICB0aGlzLnBhdGhuYW1lID0gdGhpcy5wYXRobmFtZSB8fCBiYXNlUGFyc2VkLnBhdGhuYW1lO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldCBvcmlnaW4oKSB7XG4gICAgICAgIHJldHVybiBgJHt0aGlzLnByb3RvY29sfS8vJHt0aGlzLmhvc3R9YDtcbiAgICB9XG4gICAgX3NlYXJjaFBhcmFtcztcbiAgICBnZXQgc2VhcmNoUGFyYW1zKCkge1xuICAgICAgICBpZiAoIXRoaXMuX3NlYXJjaFBhcmFtcykge1xuICAgICAgICAgICAgdGhpcy5fc2VhcmNoUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtc19qc18xLlBvbnlmaWxsVVJMU2VhcmNoUGFyYW1zKHRoaXMucXVlcnkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9zZWFyY2hQYXJhbXM7XG4gICAgfVxuICAgIGdldCB1c2VybmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXV0aD8uc3BsaXQoJzonKVswXSB8fCAnJztcbiAgICB9XG4gICAgc2V0IHVzZXJuYW1lKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuYXV0aCA9IGAke3ZhbHVlfToke3RoaXMucGFzc3dvcmR9YDtcbiAgICB9XG4gICAgZ2V0IHBhc3N3b3JkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5hdXRoPy5zcGxpdCgnOicpWzFdIHx8ICcnO1xuICAgIH1cbiAgICBzZXQgcGFzc3dvcmQodmFsdWUpIHtcbiAgICAgICAgdGhpcy5hdXRoID0gYCR7dGhpcy51c2VybmFtZX06JHt2YWx1ZX1gO1xuICAgIH1cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZm9ybWF0KCk7XG4gICAgfVxuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgc3RhdGljIGJsb2JSZWdpc3RyeSA9IG5ldyBNYXAoKTtcbiAgICBzdGF0aWMgY3JlYXRlT2JqZWN0VVJMKGJsb2IpIHtcbiAgICAgICAgY29uc3QgYmxvYlVybCA9IGBibG9iOndoYXR3Z25vZGU6JHsoMCwgY3J5cHRvXzEucmFuZG9tVVVJRCkoKX1gO1xuICAgICAgICB0aGlzLmJsb2JSZWdpc3RyeS5zZXQoYmxvYlVybCwgYmxvYik7XG4gICAgICAgIHJldHVybiBibG9iVXJsO1xuICAgIH1cbiAgICBzdGF0aWMgcmVzb2x2ZU9iamVjdFVSTCh1cmwpIHtcbiAgICAgICAgaWYgKCF0aGlzLmJsb2JSZWdpc3RyeS5oYXModXJsKSkge1xuICAgICAgICAgICAgVVJMLnJldm9rZU9iamVjdFVSTCh1cmwpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5ibG9iUmVnaXN0cnkuZGVsZXRlKHVybCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGljIGdldEJsb2JGcm9tVVJMKHVybCkge1xuICAgICAgICByZXR1cm4gKHRoaXMuYmxvYlJlZ2lzdHJ5LmdldCh1cmwpIHx8ICgwLCBidWZmZXJfMS5yZXNvbHZlT2JqZWN0VVJMKSh1cmwpKTtcbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsVVJMID0gUG9ueWZpbGxVUkw7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URL.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillURLSearchParams = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nconst fast_querystring_1 = tslib_1.__importDefault(__webpack_require__(/*! fast-querystring */ \"(rsc)/./node_modules/fast-querystring/lib/index.js\"));\nconst IteratorObject_js_1 = __webpack_require__(/*! ./IteratorObject.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/IteratorObject.js\");\nfunction isURLSearchParams(value) {\n    return value?.entries != null;\n}\nclass PonyfillURLSearchParams {\n    params;\n    constructor(init) {\n        if (init) {\n            if (typeof init === 'string') {\n                this.params = fast_querystring_1.default.parse(init);\n            }\n            else if (Array.isArray(init)) {\n                this.params = {};\n                for (const [key, value] of init) {\n                    this.params[key] = value;\n                }\n            }\n            else if (isURLSearchParams(init)) {\n                this.params = {};\n                for (const [key, value] of init.entries()) {\n                    this.params[key] = value;\n                }\n            }\n            else {\n                this.params = init;\n            }\n        }\n        else {\n            this.params = {};\n        }\n    }\n    append(name, value) {\n        const existingValue = this.params[name];\n        const finalValue = existingValue ? `${existingValue},${value}` : value;\n        this.params[name] = finalValue;\n    }\n    delete(name) {\n        delete this.params[name];\n    }\n    get(name) {\n        const value = this.params[name];\n        if (Array.isArray(value)) {\n            return value[0] || null;\n        }\n        return value || null;\n    }\n    getAll(name) {\n        const value = this.params[name];\n        if (!Array.isArray(value)) {\n            return value ? [value] : [];\n        }\n        return value;\n    }\n    has(name) {\n        return name in this.params;\n    }\n    set(name, value) {\n        this.params[name] = value;\n    }\n    sort() {\n        const sortedKeys = Object.keys(this.params).sort();\n        const sortedParams = {};\n        for (const key of sortedKeys) {\n            sortedParams[key] = this.params[key];\n        }\n        this.params = sortedParams;\n    }\n    toString() {\n        return fast_querystring_1.default.stringify(this.params);\n    }\n    *_keys() {\n        for (const key in this.params) {\n            yield key;\n        }\n    }\n    keys() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._keys(), 'URLSearchParamsIterator');\n    }\n    *_entries() {\n        for (const key of this.keys()) {\n            const value = this.params[key];\n            if (Array.isArray(value)) {\n                for (const item of value) {\n                    yield [key, item];\n                }\n            }\n            else {\n                yield [key, value];\n            }\n        }\n    }\n    entries() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._entries(), 'URLSearchParamsIterator');\n    }\n    *_values() {\n        for (const [, value] of this) {\n            yield value;\n        }\n    }\n    values() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._values(), 'URLSearchParamsIterator');\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key, this);\n        }\n    }\n    get size() {\n        return Object.keys(this.params).length;\n    }\n}\nexports.PonyfillURLSearchParams = PonyfillURLSearchParams;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1VSTFNlYXJjaFBhcmFtcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0I7QUFDL0IsZ0JBQWdCLG1CQUFPLENBQUMsdURBQU87QUFDL0IsbURBQW1ELG1CQUFPLENBQUMsNEVBQWtCO0FBQzdFLDRCQUE0QixtQkFBTyxDQUFDLCtGQUFxQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWMsR0FBRyxNQUFNO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1VSTFNlYXJjaFBhcmFtcy5qcz9jZTY0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFVSTFNlYXJjaFBhcmFtcyA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBmYXN0X3F1ZXJ5c3RyaW5nXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZmFzdC1xdWVyeXN0cmluZ1wiKSk7XG5jb25zdCBJdGVyYXRvck9iamVjdF9qc18xID0gcmVxdWlyZShcIi4vSXRlcmF0b3JPYmplY3QuanNcIik7XG5mdW5jdGlvbiBpc1VSTFNlYXJjaFBhcmFtcyh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZT8uZW50cmllcyAhPSBudWxsO1xufVxuY2xhc3MgUG9ueWZpbGxVUkxTZWFyY2hQYXJhbXMge1xuICAgIHBhcmFtcztcbiAgICBjb25zdHJ1Y3Rvcihpbml0KSB7XG4gICAgICAgIGlmIChpbml0KSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGluaXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSBmYXN0X3F1ZXJ5c3RyaW5nXzEuZGVmYXVsdC5wYXJzZShpbml0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoaW5pdCkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBhcmFtcyA9IHt9O1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIGluaXQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXJhbXNba2V5XSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGlzVVJMU2VhcmNoUGFyYW1zKGluaXQpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSB7fTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBpbml0LmVudHJpZXMoKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBhcmFtc1trZXldID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSBpbml0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSB7fTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhcHBlbmQobmFtZSwgdmFsdWUpIHtcbiAgICAgICAgY29uc3QgZXhpc3RpbmdWYWx1ZSA9IHRoaXMucGFyYW1zW25hbWVdO1xuICAgICAgICBjb25zdCBmaW5hbFZhbHVlID0gZXhpc3RpbmdWYWx1ZSA/IGAke2V4aXN0aW5nVmFsdWV9LCR7dmFsdWV9YCA6IHZhbHVlO1xuICAgICAgICB0aGlzLnBhcmFtc1tuYW1lXSA9IGZpbmFsVmFsdWU7XG4gICAgfVxuICAgIGRlbGV0ZShuYW1lKSB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLnBhcmFtc1tuYW1lXTtcbiAgICB9XG4gICAgZ2V0KG5hbWUpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnBhcmFtc1tuYW1lXTtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWVbMF0gfHwgbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWUgfHwgbnVsbDtcbiAgICB9XG4gICAgZ2V0QWxsKG5hbWUpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnBhcmFtc1tuYW1lXTtcbiAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlID8gW3ZhbHVlXSA6IFtdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgaGFzKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIG5hbWUgaW4gdGhpcy5wYXJhbXM7XG4gICAgfVxuICAgIHNldChuYW1lLCB2YWx1ZSkge1xuICAgICAgICB0aGlzLnBhcmFtc1tuYW1lXSA9IHZhbHVlO1xuICAgIH1cbiAgICBzb3J0KCkge1xuICAgICAgICBjb25zdCBzb3J0ZWRLZXlzID0gT2JqZWN0LmtleXModGhpcy5wYXJhbXMpLnNvcnQoKTtcbiAgICAgICAgY29uc3Qgc29ydGVkUGFyYW1zID0ge307XG4gICAgICAgIGZvciAoY29uc3Qga2V5IG9mIHNvcnRlZEtleXMpIHtcbiAgICAgICAgICAgIHNvcnRlZFBhcmFtc1trZXldID0gdGhpcy5wYXJhbXNba2V5XTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBhcmFtcyA9IHNvcnRlZFBhcmFtcztcbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiBmYXN0X3F1ZXJ5c3RyaW5nXzEuZGVmYXVsdC5zdHJpbmdpZnkodGhpcy5wYXJhbXMpO1xuICAgIH1cbiAgICAqX2tleXMoKSB7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IGluIHRoaXMucGFyYW1zKSB7XG4gICAgICAgICAgICB5aWVsZCBrZXk7XG4gICAgICAgIH1cbiAgICB9XG4gICAga2V5cygpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBJdGVyYXRvck9iamVjdF9qc18xLlBvbnlmaWxsSXRlcmF0b3JPYmplY3QodGhpcy5fa2V5cygpLCAnVVJMU2VhcmNoUGFyYW1zSXRlcmF0b3InKTtcbiAgICB9XG4gICAgKl9lbnRyaWVzKCkge1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiB0aGlzLmtleXMoKSkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnBhcmFtc1trZXldO1xuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIHlpZWxkIFtrZXksIGl0ZW1dO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHlpZWxkIFtrZXksIHZhbHVlXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBlbnRyaWVzKCkge1xuICAgICAgICByZXR1cm4gbmV3IEl0ZXJhdG9yT2JqZWN0X2pzXzEuUG9ueWZpbGxJdGVyYXRvck9iamVjdCh0aGlzLl9lbnRyaWVzKCksICdVUkxTZWFyY2hQYXJhbXNJdGVyYXRvcicpO1xuICAgIH1cbiAgICAqX3ZhbHVlcygpIHtcbiAgICAgICAgZm9yIChjb25zdCBbLCB2YWx1ZV0gb2YgdGhpcykge1xuICAgICAgICAgICAgeWllbGQgdmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdmFsdWVzKCkge1xuICAgICAgICByZXR1cm4gbmV3IEl0ZXJhdG9yT2JqZWN0X2pzXzEuUG9ueWZpbGxJdGVyYXRvck9iamVjdCh0aGlzLl92YWx1ZXMoKSwgJ1VSTFNlYXJjaFBhcmFtc0l0ZXJhdG9yJyk7XG4gICAgfVxuICAgIFtTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbnRyaWVzKCk7XG4gICAgfVxuICAgIGZvckVhY2goY2FsbGJhY2spIHtcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgdGhpcykge1xuICAgICAgICAgICAgY2FsbGJhY2sodmFsdWUsIGtleSwgdGhpcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IHNpemUoKSB7XG4gICAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLnBhcmFtcykubGVuZ3RoO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxVUkxTZWFyY2hQYXJhbXMgPSBQb255ZmlsbFVSTFNlYXJjaFBhcmFtcztcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js":
/*!********************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillWritableStream = void 0;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nclass PonyfillWritableStream {\n    writable;\n    constructor(underlyingSink) {\n        if (underlyingSink instanceof stream_1.Writable) {\n            this.writable = underlyingSink;\n        }\n        else if (underlyingSink) {\n            const writable = new stream_1.Writable({\n                write(chunk, _encoding, callback) {\n                    try {\n                        const result = underlyingSink.write?.(chunk, controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n                final(callback) {\n                    const result = underlyingSink.close?.();\n                    if (result instanceof Promise) {\n                        result.then(() => {\n                            callback();\n                        }, err => {\n                            callback(err);\n                        });\n                    }\n                    else {\n                        callback();\n                    }\n                },\n            });\n            this.writable = writable;\n            let onabort;\n            let reason;\n            const controller = {\n                signal: {\n                    any(signals) {\n                        return AbortSignal.any([...signals]);\n                    },\n                    get reason() {\n                        return reason;\n                    },\n                    get aborted() {\n                        return writable.destroyed;\n                    },\n                    addEventListener: (_event, eventListener) => {\n                        writable.once('error', eventListener);\n                        writable.once('close', eventListener);\n                    },\n                    removeEventListener: (_event, eventListener) => {\n                        writable.off('error', eventListener);\n                        writable.off('close', eventListener);\n                    },\n                    dispatchEvent: (_event) => {\n                        return false;\n                    },\n                    get onabort() {\n                        return onabort;\n                    },\n                    set onabort(value) {\n                        if (onabort) {\n                            this.removeEventListener('abort', onabort);\n                        }\n                        onabort = value;\n                        if (onabort) {\n                            this.addEventListener('abort', onabort);\n                        }\n                    },\n                    throwIfAborted() {\n                        if (writable.destroyed) {\n                            throw reason;\n                        }\n                    },\n                },\n                error: e => {\n                    this.writable.destroy(e);\n                },\n            };\n            this.writable.once('error', err => {\n                reason = err;\n            });\n        }\n        else {\n            this.writable = new stream_1.Writable();\n        }\n    }\n    getWriter() {\n        const writable = this.writable;\n        return {\n            closed: new Promise(resolve => {\n                writable.once('close', () => {\n                    resolve(undefined);\n                });\n            }),\n            get desiredSize() {\n                return writable.writableLength;\n            },\n            ready: new Promise(resolve => {\n                writable.once('drain', () => {\n                    resolve(undefined);\n                });\n            }),\n            releaseLock() {\n                // no-op\n            },\n            write(chunk) {\n                if (chunk == null) {\n                    return (0, utils_js_1.fakePromise)(undefined);\n                }\n                return new Promise((resolve, reject) => {\n                    writable.write(chunk, (err) => {\n                        if (err) {\n                            reject(err);\n                        }\n                        else {\n                            resolve();\n                        }\n                    });\n                });\n            },\n            close() {\n                if (!writable.errored && writable.closed) {\n                    return (0, utils_js_1.fakePromise)(undefined);\n                }\n                return new Promise((resolve, reject) => {\n                    if (writable.errored) {\n                        reject(writable.errored);\n                    }\n                    else {\n                        writable.end((err) => {\n                            if (err) {\n                                reject(err);\n                            }\n                            else {\n                                resolve();\n                            }\n                        });\n                    }\n                });\n            },\n            abort(reason) {\n                return new Promise(resolve => {\n                    writable.destroy(reason);\n                    writable.once('close', resolve);\n                });\n            },\n        };\n    }\n    close() {\n        if (!this.writable.errored && this.writable.closed) {\n            return (0, utils_js_1.fakePromise)(undefined);\n        }\n        return new Promise((resolve, reject) => {\n            if (this.writable.errored) {\n                reject(this.writable.errored);\n            }\n            else {\n                this.writable.end((err) => {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve();\n                    }\n                });\n            }\n        });\n    }\n    abort(reason) {\n        return new Promise(resolve => {\n            this.writable.destroy(reason);\n            this.writable.once('close', resolve);\n        });\n    }\n    locked = false;\n}\nexports.PonyfillWritableStream = PonyfillWritableStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetch.js":
/*!***********************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/fetch.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchPonyfill = fetchPonyfill;\nconst fs_1 = __webpack_require__(/*! fs */ \"fs\");\nconst url_1 = __webpack_require__(/*! url */ \"url\");\nconst fetchCurl_js_1 = __webpack_require__(/*! ./fetchCurl.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js\");\nconst fetchNodeHttp_js_1 = __webpack_require__(/*! ./fetchNodeHttp.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js\");\nconst Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nconst BASE64_SUFFIX = ';base64';\nfunction getResponseForFile(url) {\n    const path = (0, url_1.fileURLToPath)(url);\n    const readable = (0, fs_1.createReadStream)(path);\n    return new Response_js_1.PonyfillResponse(readable);\n}\nfunction getResponseForDataUri(url) {\n    const [mimeType = 'text/plain', ...datas] = url.substring(5).split(',');\n    const data = decodeURIComponent(datas.join(','));\n    if (mimeType.endsWith(BASE64_SUFFIX)) {\n        const buffer = Buffer.from(data, 'base64url');\n        const realMimeType = mimeType.slice(0, -BASE64_SUFFIX.length);\n        return new Response_js_1.PonyfillResponse(buffer, {\n            status: 200,\n            statusText: 'OK',\n            headers: {\n                'content-type': realMimeType,\n            },\n        });\n    }\n    return new Response_js_1.PonyfillResponse(data, {\n        status: 200,\n        statusText: 'OK',\n        headers: {\n            'content-type': mimeType,\n        },\n    });\n}\nfunction getResponseForBlob(url) {\n    const blob = URL_js_1.PonyfillURL.getBlobFromURL(url);\n    if (!blob) {\n        throw new TypeError('Invalid Blob URL');\n    }\n    return new Response_js_1.PonyfillResponse(blob, {\n        status: 200,\n        headers: {\n            'content-type': blob.type,\n            'content-length': blob.size.toString(),\n        },\n    });\n}\nfunction isURL(obj) {\n    return obj != null && obj.href != null;\n}\nfunction fetchPonyfill(info, init) {\n    if (typeof info === 'string' || isURL(info)) {\n        const ponyfillRequest = new Request_js_1.PonyfillRequest(info, init);\n        return fetchPonyfill(ponyfillRequest);\n    }\n    const fetchRequest = info;\n    if (fetchRequest.url.startsWith('data:')) {\n        const response = getResponseForDataUri(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (fetchRequest.url.startsWith('file:')) {\n        const response = getResponseForFile(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (fetchRequest.url.startsWith('blob:')) {\n        const response = getResponseForBlob(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (globalThis.libcurl && !fetchRequest.agent) {\n        return (0, fetchCurl_js_1.fetchCurl)(fetchRequest);\n    }\n    return (0, fetchNodeHttp_js_1.fetchNodeHttp)(fetchRequest);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL2ZldGNoLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQixhQUFhLG1CQUFPLENBQUMsY0FBSTtBQUN6QixjQUFjLG1CQUFPLENBQUMsZ0JBQUs7QUFDM0IsdUJBQXVCLG1CQUFPLENBQUMscUZBQWdCO0FBQy9DLDJCQUEyQixtQkFBTyxDQUFDLDZGQUFvQjtBQUN2RCxxQkFBcUIsbUJBQU8sQ0FBQyxpRkFBYztBQUMzQyxzQkFBc0IsbUJBQU8sQ0FBQyxtRkFBZTtBQUM3QyxpQkFBaUIsbUJBQU8sQ0FBQyx5RUFBVTtBQUNuQyxtQkFBbUIsbUJBQU8sQ0FBQyw2RUFBWTtBQUN2Qyx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9mZXRjaC5qcz8wNmMxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5mZXRjaFBvbnlmaWxsID0gZmV0Y2hQb255ZmlsbDtcbmNvbnN0IGZzXzEgPSByZXF1aXJlKFwiZnNcIik7XG5jb25zdCB1cmxfMSA9IHJlcXVpcmUoXCJ1cmxcIik7XG5jb25zdCBmZXRjaEN1cmxfanNfMSA9IHJlcXVpcmUoXCIuL2ZldGNoQ3VybC5qc1wiKTtcbmNvbnN0IGZldGNoTm9kZUh0dHBfanNfMSA9IHJlcXVpcmUoXCIuL2ZldGNoTm9kZUh0dHAuanNcIik7XG5jb25zdCBSZXF1ZXN0X2pzXzEgPSByZXF1aXJlKFwiLi9SZXF1ZXN0LmpzXCIpO1xuY29uc3QgUmVzcG9uc2VfanNfMSA9IHJlcXVpcmUoXCIuL1Jlc3BvbnNlLmpzXCIpO1xuY29uc3QgVVJMX2pzXzEgPSByZXF1aXJlKFwiLi9VUkwuanNcIik7XG5jb25zdCB1dGlsc19qc18xID0gcmVxdWlyZShcIi4vdXRpbHMuanNcIik7XG5jb25zdCBCQVNFNjRfU1VGRklYID0gJztiYXNlNjQnO1xuZnVuY3Rpb24gZ2V0UmVzcG9uc2VGb3JGaWxlKHVybCkge1xuICAgIGNvbnN0IHBhdGggPSAoMCwgdXJsXzEuZmlsZVVSTFRvUGF0aCkodXJsKTtcbiAgICBjb25zdCByZWFkYWJsZSA9ICgwLCBmc18xLmNyZWF0ZVJlYWRTdHJlYW0pKHBhdGgpO1xuICAgIHJldHVybiBuZXcgUmVzcG9uc2VfanNfMS5Qb255ZmlsbFJlc3BvbnNlKHJlYWRhYmxlKTtcbn1cbmZ1bmN0aW9uIGdldFJlc3BvbnNlRm9yRGF0YVVyaSh1cmwpIHtcbiAgICBjb25zdCBbbWltZVR5cGUgPSAndGV4dC9wbGFpbicsIC4uLmRhdGFzXSA9IHVybC5zdWJzdHJpbmcoNSkuc3BsaXQoJywnKTtcbiAgICBjb25zdCBkYXRhID0gZGVjb2RlVVJJQ29tcG9uZW50KGRhdGFzLmpvaW4oJywnKSk7XG4gICAgaWYgKG1pbWVUeXBlLmVuZHNXaXRoKEJBU0U2NF9TVUZGSVgpKSB7XG4gICAgICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5mcm9tKGRhdGEsICdiYXNlNjR1cmwnKTtcbiAgICAgICAgY29uc3QgcmVhbE1pbWVUeXBlID0gbWltZVR5cGUuc2xpY2UoMCwgLUJBU0U2NF9TVUZGSVgubGVuZ3RoKTtcbiAgICAgICAgcmV0dXJuIG5ldyBSZXNwb25zZV9qc18xLlBvbnlmaWxsUmVzcG9uc2UoYnVmZmVyLCB7XG4gICAgICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgICAgIHN0YXR1c1RleHQ6ICdPSycsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6IHJlYWxNaW1lVHlwZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlX2pzXzEuUG9ueWZpbGxSZXNwb25zZShkYXRhLCB7XG4gICAgICAgIHN0YXR1czogMjAwLFxuICAgICAgICBzdGF0dXNUZXh0OiAnT0snLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnY29udGVudC10eXBlJzogbWltZVR5cGUsXG4gICAgICAgIH0sXG4gICAgfSk7XG59XG5mdW5jdGlvbiBnZXRSZXNwb25zZUZvckJsb2IodXJsKSB7XG4gICAgY29uc3QgYmxvYiA9IFVSTF9qc18xLlBvbnlmaWxsVVJMLmdldEJsb2JGcm9tVVJMKHVybCk7XG4gICAgaWYgKCFibG9iKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgQmxvYiBVUkwnKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZV9qc18xLlBvbnlmaWxsUmVzcG9uc2UoYmxvYiwge1xuICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6IGJsb2IudHlwZSxcbiAgICAgICAgICAgICdjb250ZW50LWxlbmd0aCc6IGJsb2Iuc2l6ZS50b1N0cmluZygpLFxuICAgICAgICB9LFxuICAgIH0pO1xufVxuZnVuY3Rpb24gaXNVUkwob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAhPSBudWxsICYmIG9iai5ocmVmICE9IG51bGw7XG59XG5mdW5jdGlvbiBmZXRjaFBvbnlmaWxsKGluZm8sIGluaXQpIHtcbiAgICBpZiAodHlwZW9mIGluZm8gPT09ICdzdHJpbmcnIHx8IGlzVVJMKGluZm8pKSB7XG4gICAgICAgIGNvbnN0IHBvbnlmaWxsUmVxdWVzdCA9IG5ldyBSZXF1ZXN0X2pzXzEuUG9ueWZpbGxSZXF1ZXN0KGluZm8sIGluaXQpO1xuICAgICAgICByZXR1cm4gZmV0Y2hQb255ZmlsbChwb255ZmlsbFJlcXVlc3QpO1xuICAgIH1cbiAgICBjb25zdCBmZXRjaFJlcXVlc3QgPSBpbmZvO1xuICAgIGlmIChmZXRjaFJlcXVlc3QudXJsLnN0YXJ0c1dpdGgoJ2RhdGE6JykpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBnZXRSZXNwb25zZUZvckRhdGFVcmkoZmV0Y2hSZXF1ZXN0LnVybCk7XG4gICAgICAgIHJldHVybiAoMCwgdXRpbHNfanNfMS5mYWtlUHJvbWlzZSkocmVzcG9uc2UpO1xuICAgIH1cbiAgICBpZiAoZmV0Y2hSZXF1ZXN0LnVybC5zdGFydHNXaXRoKCdmaWxlOicpKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gZ2V0UmVzcG9uc2VGb3JGaWxlKGZldGNoUmVxdWVzdC51cmwpO1xuICAgICAgICByZXR1cm4gKDAsIHV0aWxzX2pzXzEuZmFrZVByb21pc2UpKHJlc3BvbnNlKTtcbiAgICB9XG4gICAgaWYgKGZldGNoUmVxdWVzdC51cmwuc3RhcnRzV2l0aCgnYmxvYjonKSkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGdldFJlc3BvbnNlRm9yQmxvYihmZXRjaFJlcXVlc3QudXJsKTtcbiAgICAgICAgcmV0dXJuICgwLCB1dGlsc19qc18xLmZha2VQcm9taXNlKShyZXNwb25zZSk7XG4gICAgfVxuICAgIGlmIChnbG9iYWxUaGlzLmxpYmN1cmwgJiYgIWZldGNoUmVxdWVzdC5hZ2VudCkge1xuICAgICAgICByZXR1cm4gKDAsIGZldGNoQ3VybF9qc18xLmZldGNoQ3VybCkoZmV0Y2hSZXF1ZXN0KTtcbiAgICB9XG4gICAgcmV0dXJuICgwLCBmZXRjaE5vZGVIdHRwX2pzXzEuZmV0Y2hOb2RlSHR0cCkoZmV0Y2hSZXF1ZXN0KTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetch.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js":
/*!***************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchCurl = fetchCurl;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst tls_1 = __webpack_require__(/*! tls */ \"tls\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction fetchCurl(fetchRequest) {\n    const { Curl, CurlFeature, CurlPause, CurlProgressFunc } = globalThis['libcurl'];\n    const curlHandle = new Curl();\n    curlHandle.enable(CurlFeature.NoDataParsing);\n    curlHandle.setOpt('URL', fetchRequest.url);\n    if (process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0') {\n        curlHandle.setOpt('SSL_VERIFYPEER', false);\n    }\n    if (process.env.NODE_EXTRA_CA_CERTS) {\n        curlHandle.setOpt('CAINFO', process.env.NODE_EXTRA_CA_CERTS);\n    }\n    else {\n        curlHandle.setOpt('CAINFO_BLOB', tls_1.rootCertificates.join('\\n'));\n    }\n    curlHandle.enable(CurlFeature.StreamResponse);\n    curlHandle.setStreamProgressCallback(function () {\n        return fetchRequest['_signal']?.aborted\n            ? process.env.DEBUG\n                ? CurlProgressFunc.Continue\n                : 1\n            : 0;\n    });\n    if (fetchRequest['bodyType'] === 'String') {\n        curlHandle.setOpt('POSTFIELDS', fetchRequest['bodyInit']);\n    }\n    else {\n        const nodeReadable = (fetchRequest.body != null\n            ? (0, utils_js_1.isNodeReadable)(fetchRequest.body)\n                ? fetchRequest.body\n                : stream_1.Readable.from(fetchRequest.body)\n            : null);\n        if (nodeReadable) {\n            curlHandle.setOpt('UPLOAD', true);\n            curlHandle.setUploadStream(nodeReadable);\n        }\n    }\n    if (process.env.DEBUG) {\n        curlHandle.setOpt('VERBOSE', true);\n    }\n    curlHandle.setOpt('TRANSFER_ENCODING', false);\n    curlHandle.setOpt('HTTP_TRANSFER_DECODING', true);\n    curlHandle.setOpt('FOLLOWLOCATION', fetchRequest.redirect === 'follow');\n    curlHandle.setOpt('MAXREDIRS', 20);\n    curlHandle.setOpt('ACCEPT_ENCODING', '');\n    curlHandle.setOpt('CUSTOMREQUEST', fetchRequest.method);\n    const headersSerializer = fetchRequest.headersSerializer || utils_js_1.defaultHeadersSerializer;\n    let size;\n    const curlHeaders = headersSerializer(fetchRequest.headers, value => {\n        size = Number(value);\n    });\n    if (size != null) {\n        curlHandle.setOpt('INFILESIZE', size);\n    }\n    curlHandle.setOpt('HTTPHEADER', curlHeaders);\n    curlHandle.enable(CurlFeature.NoHeaderParsing);\n    const deferredPromise = (0, utils_js_1.createDeferredPromise)();\n    let streamResolved;\n    if (fetchRequest['_signal']) {\n        fetchRequest['_signal'].onabort = () => {\n            if (curlHandle.isOpen) {\n                try {\n                    curlHandle.pause(CurlPause.Recv);\n                }\n                catch (e) {\n                    deferredPromise.reject(e);\n                }\n            }\n        };\n    }\n    curlHandle.once('end', function endListener() {\n        try {\n            curlHandle.close();\n        }\n        catch (e) {\n            deferredPromise.reject(e);\n        }\n    });\n    curlHandle.once('error', function errorListener(error) {\n        if (streamResolved && !streamResolved.closed && !streamResolved.destroyed) {\n            streamResolved.destroy(error);\n        }\n        else {\n            if (error.message === 'Operation was aborted by an application callback') {\n                error.message = 'The operation was aborted.';\n            }\n            deferredPromise.reject(error);\n        }\n        try {\n            curlHandle.close();\n        }\n        catch (e) {\n            deferredPromise.reject(e);\n        }\n    });\n    curlHandle.once('stream', function streamListener(stream, status, headersBuf) {\n        const outputStream = new stream_1.PassThrough();\n        stream_1.promises\n            .pipeline(stream, outputStream, {\n            end: true,\n            signal: fetchRequest['_signal'] ?? undefined,\n        })\n            .then(() => {\n            if (!stream.destroyed) {\n                stream.resume();\n            }\n        })\n            .catch(deferredPromise.reject);\n        const headersFlat = headersBuf\n            .toString('utf8')\n            .split(/\\r?\\n|\\r/g)\n            .filter(headerFilter => {\n            if (headerFilter && !headerFilter.startsWith('HTTP/')) {\n                if (fetchRequest.redirect === 'error' &&\n                    (headerFilter.includes('location') || headerFilter.includes('Location'))) {\n                    if (!stream.destroyed) {\n                        stream.resume();\n                    }\n                    outputStream.destroy();\n                    deferredPromise.reject(new Error('redirect is not allowed'));\n                }\n                return true;\n            }\n            return false;\n        });\n        const headersInit = headersFlat.map(headerFlat => headerFlat.split(/:\\s(.+)/).slice(0, 2));\n        const ponyfillResponse = new Response_js_1.PonyfillResponse(outputStream, {\n            status,\n            headers: headersInit,\n            url: curlHandle.getInfo(Curl.info.REDIRECT_URL)?.toString() || fetchRequest.url,\n            redirected: Number(curlHandle.getInfo(Curl.info.REDIRECT_COUNT)) > 0,\n        });\n        deferredPromise.resolve(ponyfillResponse);\n        streamResolved = outputStream;\n    });\n    let count = 0;\n    try {\n        count = Curl.getCount();\n    }\n    catch { }\n    if (count > 0) {\n        setImmediate(() => {\n            curlHandle.perform();\n        });\n    }\n    else {\n        curlHandle.perform();\n    }\n    return deferredPromise.promise;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchNodeHttp = fetchNodeHttp;\nconst http_1 = __webpack_require__(/*! http */ \"http\");\nconst https_1 = __webpack_require__(/*! https */ \"https\");\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst zlib_1 = __webpack_require__(/*! zlib */ \"zlib\");\nconst Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction getRequestFnForProtocol(url) {\n    if (url.startsWith('http:')) {\n        return http_1.request;\n    }\n    else if (url.startsWith('https:')) {\n        return https_1.request;\n    }\n    throw new Error(`Unsupported protocol: ${url.split(':')[0] || url}`);\n}\nfunction fetchNodeHttp(fetchRequest) {\n    return new Promise((resolve, reject) => {\n        try {\n            const requestFn = getRequestFnForProtocol(fetchRequest.url);\n            const nodeReadable = (fetchRequest.body != null\n                ? (0, utils_js_1.isNodeReadable)(fetchRequest.body)\n                    ? fetchRequest.body\n                    : stream_1.Readable.from(fetchRequest.body)\n                : null);\n            const headersSerializer = fetchRequest.headersSerializer || utils_js_1.getHeadersObj;\n            const nodeHeaders = headersSerializer(fetchRequest.headers);\n            if (nodeHeaders['accept-encoding'] == null) {\n                nodeHeaders['accept-encoding'] = 'gzip, deflate, br';\n            }\n            const nodeRequest = requestFn(fetchRequest.url, {\n                method: fetchRequest.method,\n                headers: nodeHeaders,\n                signal: fetchRequest['_signal'] ?? undefined,\n                agent: fetchRequest.agent,\n            });\n            nodeRequest.once('response', nodeResponse => {\n                let outputStream;\n                const contentEncoding = nodeResponse.headers['content-encoding'];\n                switch (contentEncoding) {\n                    case 'x-gzip':\n                    case 'gzip':\n                        outputStream = (0, zlib_1.createGunzip)();\n                        break;\n                    case 'x-deflate':\n                    case 'deflate':\n                        outputStream = (0, zlib_1.createInflate)();\n                        break;\n                    case 'x-deflate-raw':\n                    case 'deflate-raw':\n                        outputStream = (0, zlib_1.createInflateRaw)();\n                        break;\n                    case 'br':\n                        outputStream = (0, zlib_1.createBrotliDecompress)();\n                        break;\n                    default:\n                        outputStream = new stream_1.PassThrough();\n                }\n                if (nodeResponse.headers.location) {\n                    if (fetchRequest.redirect === 'error') {\n                        const redirectError = new Error('Redirects are not allowed');\n                        reject(redirectError);\n                        nodeResponse.resume();\n                        return;\n                    }\n                    if (fetchRequest.redirect === 'follow') {\n                        const redirectedUrl = new URL_js_1.PonyfillURL(nodeResponse.headers.location, fetchRequest.url);\n                        const redirectResponse$ = fetchNodeHttp(new Request_js_1.PonyfillRequest(redirectedUrl, fetchRequest));\n                        resolve(redirectResponse$.then(redirectResponse => {\n                            redirectResponse.redirected = true;\n                            return redirectResponse;\n                        }));\n                        nodeResponse.resume();\n                        return;\n                    }\n                }\n                stream_1.promises\n                    .pipeline(nodeResponse, outputStream, {\n                    signal: fetchRequest['_signal'] ?? undefined,\n                    end: true,\n                })\n                    .then(() => {\n                    if (!nodeResponse.destroyed) {\n                        nodeResponse.resume();\n                    }\n                })\n                    .catch(reject);\n                const ponyfillResponse = new Response_js_1.PonyfillResponse(outputStream, {\n                    status: nodeResponse.statusCode,\n                    statusText: nodeResponse.statusMessage,\n                    headers: nodeResponse.headers,\n                    url: fetchRequest.url,\n                });\n                resolve(ponyfillResponse);\n            });\n            nodeRequest.once('error', reject);\n            if (nodeReadable) {\n                nodeReadable.pipe(nodeRequest);\n            }\n            else {\n                nodeRequest.end();\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IteratorObject = exports.DecompressionStream = exports.CompressionStream = exports.TransformStream = exports.WritableStream = exports.URLSearchParams = exports.URL = exports.btoa = exports.TextDecoder = exports.TextEncoder = exports.Blob = exports.FormData = exports.File = exports.ReadableStream = exports.Response = exports.Request = exports.Body = exports.Headers = exports.fetch = void 0;\nvar fetch_js_1 = __webpack_require__(/*! ./fetch.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/fetch.js\");\nObject.defineProperty(exports, \"fetch\", ({ enumerable: true, get: function () { return fetch_js_1.fetchPonyfill; } }));\nvar Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nObject.defineProperty(exports, \"Headers\", ({ enumerable: true, get: function () { return Headers_js_1.PonyfillHeaders; } }));\nvar Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nObject.defineProperty(exports, \"Body\", ({ enumerable: true, get: function () { return Body_js_1.PonyfillBody; } }));\nvar Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nObject.defineProperty(exports, \"Request\", ({ enumerable: true, get: function () { return Request_js_1.PonyfillRequest; } }));\nvar Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nObject.defineProperty(exports, \"Response\", ({ enumerable: true, get: function () { return Response_js_1.PonyfillResponse; } }));\nvar ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nObject.defineProperty(exports, \"ReadableStream\", ({ enumerable: true, get: function () { return ReadableStream_js_1.PonyfillReadableStream; } }));\nvar File_js_1 = __webpack_require__(/*! ./File.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/File.js\");\nObject.defineProperty(exports, \"File\", ({ enumerable: true, get: function () { return File_js_1.PonyfillFile; } }));\nvar FormData_js_1 = __webpack_require__(/*! ./FormData.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/FormData.js\");\nObject.defineProperty(exports, \"FormData\", ({ enumerable: true, get: function () { return FormData_js_1.PonyfillFormData; } }));\nvar Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nObject.defineProperty(exports, \"Blob\", ({ enumerable: true, get: function () { return Blob_js_1.PonyfillBlob; } }));\nvar TextEncoderDecoder_js_1 = __webpack_require__(/*! ./TextEncoderDecoder.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js\");\nObject.defineProperty(exports, \"TextEncoder\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillTextEncoder; } }));\nObject.defineProperty(exports, \"TextDecoder\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillTextDecoder; } }));\nObject.defineProperty(exports, \"btoa\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillBtoa; } }));\nvar URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nObject.defineProperty(exports, \"URL\", ({ enumerable: true, get: function () { return URL_js_1.PonyfillURL; } }));\nvar URLSearchParams_js_1 = __webpack_require__(/*! ./URLSearchParams.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\");\nObject.defineProperty(exports, \"URLSearchParams\", ({ enumerable: true, get: function () { return URLSearchParams_js_1.PonyfillURLSearchParams; } }));\nvar WritableStream_js_1 = __webpack_require__(/*! ./WritableStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\");\nObject.defineProperty(exports, \"WritableStream\", ({ enumerable: true, get: function () { return WritableStream_js_1.PonyfillWritableStream; } }));\nvar TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nObject.defineProperty(exports, \"TransformStream\", ({ enumerable: true, get: function () { return TransformStream_js_1.PonyfillTransformStream; } }));\nvar CompressionStream_js_1 = __webpack_require__(/*! ./CompressionStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js\");\nObject.defineProperty(exports, \"CompressionStream\", ({ enumerable: true, get: function () { return CompressionStream_js_1.PonyfillCompressionStream; } }));\nvar DecompressionStream_js_1 = __webpack_require__(/*! ./DecompressionStream.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js\");\nObject.defineProperty(exports, \"DecompressionStream\", ({ enumerable: true, get: function () { return DecompressionStream_js_1.PonyfillDecompressionStream; } }));\nvar IteratorObject_js_1 = __webpack_require__(/*! ./IteratorObject.js */ \"(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/IteratorObject.js\");\nObject.defineProperty(exports, \"IteratorObject\", ({ enumerable: true, get: function () { return IteratorObject_js_1.PonyfillIteratorObject; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQixHQUFHLDJCQUEyQixHQUFHLHlCQUF5QixHQUFHLHVCQUF1QixHQUFHLHNCQUFzQixHQUFHLHVCQUF1QixHQUFHLFdBQVcsR0FBRyxZQUFZLEdBQUcsbUJBQW1CLEdBQUcsbUJBQW1CLEdBQUcsWUFBWSxHQUFHLGdCQUFnQixHQUFHLFlBQVksR0FBRyxzQkFBc0IsR0FBRyxnQkFBZ0IsR0FBRyxlQUFlLEdBQUcsWUFBWSxHQUFHLGVBQWUsR0FBRyxhQUFhO0FBQ3RZLGlCQUFpQixtQkFBTyxDQUFDLDZFQUFZO0FBQ3JDLHlDQUF3QyxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUNwSCxtQkFBbUIsbUJBQU8sQ0FBQyxpRkFBYztBQUN6QywyQ0FBMEMsRUFBRSxxQ0FBcUMsd0NBQXdDLEVBQUM7QUFDMUgsZ0JBQWdCLG1CQUFPLENBQUMsMkVBQVc7QUFDbkMsd0NBQXVDLEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDO0FBQ2pILG1CQUFtQixtQkFBTyxDQUFDLGlGQUFjO0FBQ3pDLDJDQUEwQyxFQUFFLHFDQUFxQyx3Q0FBd0MsRUFBQztBQUMxSCxvQkFBb0IsbUJBQU8sQ0FBQyxtRkFBZTtBQUMzQyw0Q0FBMkMsRUFBRSxxQ0FBcUMsMENBQTBDLEVBQUM7QUFDN0gsMEJBQTBCLG1CQUFPLENBQUMsK0ZBQXFCO0FBQ3ZELGtEQUFpRCxFQUFFLHFDQUFxQyxzREFBc0QsRUFBQztBQUMvSSxnQkFBZ0IsbUJBQU8sQ0FBQywyRUFBVztBQUNuQyx3Q0FBdUMsRUFBRSxxQ0FBcUMsa0NBQWtDLEVBQUM7QUFDakgsb0JBQW9CLG1CQUFPLENBQUMsbUZBQWU7QUFDM0MsNENBQTJDLEVBQUUscUNBQXFDLDBDQUEwQyxFQUFDO0FBQzdILGdCQUFnQixtQkFBTyxDQUFDLDJFQUFXO0FBQ25DLHdDQUF1QyxFQUFFLHFDQUFxQyxrQ0FBa0MsRUFBQztBQUNqSCw4QkFBOEIsbUJBQU8sQ0FBQyx1R0FBeUI7QUFDL0QsK0NBQThDLEVBQUUscUNBQXFDLHVEQUF1RCxFQUFDO0FBQzdJLCtDQUE4QyxFQUFFLHFDQUFxQyx1REFBdUQsRUFBQztBQUM3SSx3Q0FBdUMsRUFBRSxxQ0FBcUMsZ0RBQWdELEVBQUM7QUFDL0gsZUFBZSxtQkFBTyxDQUFDLHlFQUFVO0FBQ2pDLHVDQUFzQyxFQUFFLHFDQUFxQyxnQ0FBZ0MsRUFBQztBQUM5RywyQkFBMkIsbUJBQU8sQ0FBQyxpR0FBc0I7QUFDekQsbURBQWtELEVBQUUscUNBQXFDLHdEQUF3RCxFQUFDO0FBQ2xKLDBCQUEwQixtQkFBTyxDQUFDLCtGQUFxQjtBQUN2RCxrREFBaUQsRUFBRSxxQ0FBcUMsc0RBQXNELEVBQUM7QUFDL0ksMkJBQTJCLG1CQUFPLENBQUMsaUdBQXNCO0FBQ3pELG1EQUFrRCxFQUFFLHFDQUFxQyx3REFBd0QsRUFBQztBQUNsSiw2QkFBNkIsbUJBQU8sQ0FBQyxxR0FBd0I7QUFDN0QscURBQW9ELEVBQUUscUNBQXFDLDREQUE0RCxFQUFDO0FBQ3hKLCtCQUErQixtQkFBTyxDQUFDLHlHQUEwQjtBQUNqRSx1REFBc0QsRUFBRSxxQ0FBcUMsZ0VBQWdFLEVBQUM7QUFDOUosMEJBQTBCLG1CQUFPLENBQUMsK0ZBQXFCO0FBQ3ZELGtEQUFpRCxFQUFFLHFDQUFxQyxzREFBc0QsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvaW5kZXguanM/YTYxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSXRlcmF0b3JPYmplY3QgPSBleHBvcnRzLkRlY29tcHJlc3Npb25TdHJlYW0gPSBleHBvcnRzLkNvbXByZXNzaW9uU3RyZWFtID0gZXhwb3J0cy5UcmFuc2Zvcm1TdHJlYW0gPSBleHBvcnRzLldyaXRhYmxlU3RyZWFtID0gZXhwb3J0cy5VUkxTZWFyY2hQYXJhbXMgPSBleHBvcnRzLlVSTCA9IGV4cG9ydHMuYnRvYSA9IGV4cG9ydHMuVGV4dERlY29kZXIgPSBleHBvcnRzLlRleHRFbmNvZGVyID0gZXhwb3J0cy5CbG9iID0gZXhwb3J0cy5Gb3JtRGF0YSA9IGV4cG9ydHMuRmlsZSA9IGV4cG9ydHMuUmVhZGFibGVTdHJlYW0gPSBleHBvcnRzLlJlc3BvbnNlID0gZXhwb3J0cy5SZXF1ZXN0ID0gZXhwb3J0cy5Cb2R5ID0gZXhwb3J0cy5IZWFkZXJzID0gZXhwb3J0cy5mZXRjaCA9IHZvaWQgMDtcbnZhciBmZXRjaF9qc18xID0gcmVxdWlyZShcIi4vZmV0Y2guanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJmZXRjaFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZmV0Y2hfanNfMS5mZXRjaFBvbnlmaWxsOyB9IH0pO1xudmFyIEhlYWRlcnNfanNfMSA9IHJlcXVpcmUoXCIuL0hlYWRlcnMuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJIZWFkZXJzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBIZWFkZXJzX2pzXzEuUG9ueWZpbGxIZWFkZXJzOyB9IH0pO1xudmFyIEJvZHlfanNfMSA9IHJlcXVpcmUoXCIuL0JvZHkuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJCb2R5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBCb2R5X2pzXzEuUG9ueWZpbGxCb2R5OyB9IH0pO1xudmFyIFJlcXVlc3RfanNfMSA9IHJlcXVpcmUoXCIuL1JlcXVlc3QuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJSZXF1ZXN0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBSZXF1ZXN0X2pzXzEuUG9ueWZpbGxSZXF1ZXN0OyB9IH0pO1xudmFyIFJlc3BvbnNlX2pzXzEgPSByZXF1aXJlKFwiLi9SZXNwb25zZS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJlc3BvbnNlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBSZXNwb25zZV9qc18xLlBvbnlmaWxsUmVzcG9uc2U7IH0gfSk7XG52YXIgUmVhZGFibGVTdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL1JlYWRhYmxlU3RyZWFtLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUmVhZGFibGVTdHJlYW1cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFJlYWRhYmxlU3RyZWFtX2pzXzEuUG9ueWZpbGxSZWFkYWJsZVN0cmVhbTsgfSB9KTtcbnZhciBGaWxlX2pzXzEgPSByZXF1aXJlKFwiLi9GaWxlLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRmlsZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gRmlsZV9qc18xLlBvbnlmaWxsRmlsZTsgfSB9KTtcbnZhciBGb3JtRGF0YV9qc18xID0gcmVxdWlyZShcIi4vRm9ybURhdGEuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJGb3JtRGF0YVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gRm9ybURhdGFfanNfMS5Qb255ZmlsbEZvcm1EYXRhOyB9IH0pO1xudmFyIEJsb2JfanNfMSA9IHJlcXVpcmUoXCIuL0Jsb2IuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJCbG9iXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBCbG9iX2pzXzEuUG9ueWZpbGxCbG9iOyB9IH0pO1xudmFyIFRleHRFbmNvZGVyRGVjb2Rlcl9qc18xID0gcmVxdWlyZShcIi4vVGV4dEVuY29kZXJEZWNvZGVyLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVGV4dEVuY29kZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFRleHRFbmNvZGVyRGVjb2Rlcl9qc18xLlBvbnlmaWxsVGV4dEVuY29kZXI7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJUZXh0RGVjb2RlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gVGV4dEVuY29kZXJEZWNvZGVyX2pzXzEuUG9ueWZpbGxUZXh0RGVjb2RlcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImJ0b2FcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFRleHRFbmNvZGVyRGVjb2Rlcl9qc18xLlBvbnlmaWxsQnRvYTsgfSB9KTtcbnZhciBVUkxfanNfMSA9IHJlcXVpcmUoXCIuL1VSTC5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlVSTFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gVVJMX2pzXzEuUG9ueWZpbGxVUkw7IH0gfSk7XG52YXIgVVJMU2VhcmNoUGFyYW1zX2pzXzEgPSByZXF1aXJlKFwiLi9VUkxTZWFyY2hQYXJhbXMuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJVUkxTZWFyY2hQYXJhbXNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFVSTFNlYXJjaFBhcmFtc19qc18xLlBvbnlmaWxsVVJMU2VhcmNoUGFyYW1zOyB9IH0pO1xudmFyIFdyaXRhYmxlU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9Xcml0YWJsZVN0cmVhbS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIldyaXRhYmxlU3RyZWFtXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBXcml0YWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsV3JpdGFibGVTdHJlYW07IH0gfSk7XG52YXIgVHJhbnNmb3JtU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9UcmFuc2Zvcm1TdHJlYW0uanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJUcmFuc2Zvcm1TdHJlYW1cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFRyYW5zZm9ybVN0cmVhbV9qc18xLlBvbnlmaWxsVHJhbnNmb3JtU3RyZWFtOyB9IH0pO1xudmFyIENvbXByZXNzaW9uU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9Db21wcmVzc2lvblN0cmVhbS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbXByZXNzaW9uU3RyZWFtXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBDb21wcmVzc2lvblN0cmVhbV9qc18xLlBvbnlmaWxsQ29tcHJlc3Npb25TdHJlYW07IH0gfSk7XG52YXIgRGVjb21wcmVzc2lvblN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vRGVjb21wcmVzc2lvblN0cmVhbS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkRlY29tcHJlc3Npb25TdHJlYW1cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIERlY29tcHJlc3Npb25TdHJlYW1fanNfMS5Qb255ZmlsbERlY29tcHJlc3Npb25TdHJlYW07IH0gfSk7XG52YXIgSXRlcmF0b3JPYmplY3RfanNfMSA9IHJlcXVpcmUoXCIuL0l0ZXJhdG9yT2JqZWN0LmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSXRlcmF0b3JPYmplY3RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEl0ZXJhdG9yT2JqZWN0X2pzXzEuUG9ueWZpbGxJdGVyYXRvck9iamVjdDsgfSB9KTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js":
/*!***********************************************************!*\
  !*** ./node_modules/@whatwg-node/node-fetch/cjs/utils.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getHeadersObj = getHeadersObj;\nexports.defaultHeadersSerializer = defaultHeadersSerializer;\nexports.fakePromise = fakePromise;\nexports.isArrayBufferView = isArrayBufferView;\nexports.isNodeReadable = isNodeReadable;\nexports.createDeferredPromise = createDeferredPromise;\nexports.isIterable = isIterable;\nfunction isHeadersInstance(obj) {\n    return obj?.forEach != null;\n}\nfunction getHeadersObj(headers) {\n    if (headers == null || !isHeadersInstance(headers)) {\n        return headers;\n    }\n    const obj = {};\n    headers.forEach((value, key) => {\n        obj[key] = value;\n    });\n    return obj;\n}\nfunction defaultHeadersSerializer(headers, onContentLength) {\n    const headerArray = [];\n    headers.forEach((value, key) => {\n        if (onContentLength && key === 'content-length') {\n            onContentLength(value);\n        }\n        headerArray.push(`${key}: ${value}`);\n    });\n    return headerArray;\n}\nfunction isPromise(val) {\n    return val?.then != null;\n}\nfunction fakePromise(value) {\n    if (isPromise(value)) {\n        return value;\n    }\n    // Write a fake promise to avoid the promise constructor\n    // being called with `new Promise` in the browser.\n    return {\n        then(resolve) {\n            if (resolve) {\n                const callbackResult = resolve(value);\n                if (isPromise(callbackResult)) {\n                    return callbackResult;\n                }\n                return fakePromise(callbackResult);\n            }\n            return this;\n        },\n        catch() {\n            return this;\n        },\n        finally(cb) {\n            if (cb) {\n                const callbackResult = cb();\n                if (isPromise(callbackResult)) {\n                    return callbackResult.then(() => value);\n                }\n                return fakePromise(value);\n            }\n            return this;\n        },\n        [Symbol.toStringTag]: 'Promise',\n    };\n}\nfunction isArrayBufferView(obj) {\n    return obj != null && obj.buffer != null && obj.byteLength != null && obj.byteOffset != null;\n}\nfunction isNodeReadable(obj) {\n    return obj != null && obj.pipe != null;\n}\nfunction createDeferredPromise() {\n    let resolveFn;\n    let rejectFn;\n    const promise = new Promise(function deferredPromiseExecutor(resolve, reject) {\n        resolveFn = resolve;\n        rejectFn = reject;\n    });\n    return {\n        promise,\n        get resolve() {\n            return resolveFn;\n        },\n        get reject() {\n            return rejectFn;\n        },\n    };\n}\nfunction isIterable(value) {\n    return value?.[Symbol.iterator] != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQixnQ0FBZ0M7QUFDaEMsbUJBQW1CO0FBQ25CLHlCQUF5QjtBQUN6QixzQkFBc0I7QUFDdEIsNkJBQTZCO0FBQzdCLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLElBQUksSUFBSSxNQUFNO0FBQzFDLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvdXRpbHMuanM/Mzk2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0SGVhZGVyc09iaiA9IGdldEhlYWRlcnNPYmo7XG5leHBvcnRzLmRlZmF1bHRIZWFkZXJzU2VyaWFsaXplciA9IGRlZmF1bHRIZWFkZXJzU2VyaWFsaXplcjtcbmV4cG9ydHMuZmFrZVByb21pc2UgPSBmYWtlUHJvbWlzZTtcbmV4cG9ydHMuaXNBcnJheUJ1ZmZlclZpZXcgPSBpc0FycmF5QnVmZmVyVmlldztcbmV4cG9ydHMuaXNOb2RlUmVhZGFibGUgPSBpc05vZGVSZWFkYWJsZTtcbmV4cG9ydHMuY3JlYXRlRGVmZXJyZWRQcm9taXNlID0gY3JlYXRlRGVmZXJyZWRQcm9taXNlO1xuZXhwb3J0cy5pc0l0ZXJhYmxlID0gaXNJdGVyYWJsZTtcbmZ1bmN0aW9uIGlzSGVhZGVyc0luc3RhbmNlKG9iaikge1xuICAgIHJldHVybiBvYmo/LmZvckVhY2ggIT0gbnVsbDtcbn1cbmZ1bmN0aW9uIGdldEhlYWRlcnNPYmooaGVhZGVycykge1xuICAgIGlmIChoZWFkZXJzID09IG51bGwgfHwgIWlzSGVhZGVyc0luc3RhbmNlKGhlYWRlcnMpKSB7XG4gICAgICAgIHJldHVybiBoZWFkZXJzO1xuICAgIH1cbiAgICBjb25zdCBvYmogPSB7fTtcbiAgICBoZWFkZXJzLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gb2JqO1xufVxuZnVuY3Rpb24gZGVmYXVsdEhlYWRlcnNTZXJpYWxpemVyKGhlYWRlcnMsIG9uQ29udGVudExlbmd0aCkge1xuICAgIGNvbnN0IGhlYWRlckFycmF5ID0gW107XG4gICAgaGVhZGVycy5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgIGlmIChvbkNvbnRlbnRMZW5ndGggJiYga2V5ID09PSAnY29udGVudC1sZW5ndGgnKSB7XG4gICAgICAgICAgICBvbkNvbnRlbnRMZW5ndGgodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGhlYWRlckFycmF5LnB1c2goYCR7a2V5fTogJHt2YWx1ZX1gKTtcbiAgICB9KTtcbiAgICByZXR1cm4gaGVhZGVyQXJyYXk7XG59XG5mdW5jdGlvbiBpc1Byb21pc2UodmFsKSB7XG4gICAgcmV0dXJuIHZhbD8udGhlbiAhPSBudWxsO1xufVxuZnVuY3Rpb24gZmFrZVByb21pc2UodmFsdWUpIHtcbiAgICBpZiAoaXNQcm9taXNlKHZhbHVlKSkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIC8vIFdyaXRlIGEgZmFrZSBwcm9taXNlIHRvIGF2b2lkIHRoZSBwcm9taXNlIGNvbnN0cnVjdG9yXG4gICAgLy8gYmVpbmcgY2FsbGVkIHdpdGggYG5ldyBQcm9taXNlYCBpbiB0aGUgYnJvd3Nlci5cbiAgICByZXR1cm4ge1xuICAgICAgICB0aGVuKHJlc29sdmUpIHtcbiAgICAgICAgICAgIGlmIChyZXNvbHZlKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2FsbGJhY2tSZXN1bHQgPSByZXNvbHZlKHZhbHVlKTtcbiAgICAgICAgICAgICAgICBpZiAoaXNQcm9taXNlKGNhbGxiYWNrUmVzdWx0KSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2FsbGJhY2tSZXN1bHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBmYWtlUHJvbWlzZShjYWxsYmFja1Jlc3VsdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfSxcbiAgICAgICAgY2F0Y2goKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfSxcbiAgICAgICAgZmluYWxseShjYikge1xuICAgICAgICAgICAgaWYgKGNiKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2FsbGJhY2tSZXN1bHQgPSBjYigpO1xuICAgICAgICAgICAgICAgIGlmIChpc1Byb21pc2UoY2FsbGJhY2tSZXN1bHQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjYWxsYmFja1Jlc3VsdC50aGVuKCgpID0+IHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZha2VQcm9taXNlKHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgICAgICBbU3ltYm9sLnRvU3RyaW5nVGFnXTogJ1Byb21pc2UnLFxuICAgIH07XG59XG5mdW5jdGlvbiBpc0FycmF5QnVmZmVyVmlldyhvYmopIHtcbiAgICByZXR1cm4gb2JqICE9IG51bGwgJiYgb2JqLmJ1ZmZlciAhPSBudWxsICYmIG9iai5ieXRlTGVuZ3RoICE9IG51bGwgJiYgb2JqLmJ5dGVPZmZzZXQgIT0gbnVsbDtcbn1cbmZ1bmN0aW9uIGlzTm9kZVJlYWRhYmxlKG9iaikge1xuICAgIHJldHVybiBvYmogIT0gbnVsbCAmJiBvYmoucGlwZSAhPSBudWxsO1xufVxuZnVuY3Rpb24gY3JlYXRlRGVmZXJyZWRQcm9taXNlKCkge1xuICAgIGxldCByZXNvbHZlRm47XG4gICAgbGV0IHJlamVjdEZuO1xuICAgIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiBkZWZlcnJlZFByb21pc2VFeGVjdXRvcihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgcmVzb2x2ZUZuID0gcmVzb2x2ZTtcbiAgICAgICAgcmVqZWN0Rm4gPSByZWplY3Q7XG4gICAgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvbWlzZSxcbiAgICAgICAgZ2V0IHJlc29sdmUoKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzb2x2ZUZuO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgcmVqZWN0KCkge1xuICAgICAgICAgICAgcmV0dXJuIHJlamVjdEZuO1xuICAgICAgICB9LFxuICAgIH07XG59XG5mdW5jdGlvbiBpc0l0ZXJhYmxlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlPy5bU3ltYm9sLml0ZXJhdG9yXSAhPSBudWxsO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/node-fetch/cjs/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/createServerAdapter.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/createServerAdapter.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createServerAdapter = createServerAdapter;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\n/* eslint-disable @typescript-eslint/ban-types */\nconst DefaultFetchAPI = tslib_1.__importStar(__webpack_require__(/*! @whatwg-node/fetch */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\"));\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/utils.js\");\nconst uwebsockets_js_1 = __webpack_require__(/*! ./uwebsockets.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/uwebsockets.js\");\nasync function handleWaitUntils(waitUntilPromises) {\n    await Promise.allSettled(waitUntilPromises);\n}\n// Required for envs like nextjs edge runtime\nfunction isRequestAccessible(serverContext) {\n    try {\n        return !!serverContext?.request;\n    }\n    catch {\n        return false;\n    }\n}\nconst EMPTY_OBJECT = {};\nfunction createServerAdapter(serverAdapterBaseObject, options) {\n    const fetchAPI = {\n        ...DefaultFetchAPI,\n        ...options?.fetchAPI,\n    };\n    const givenHandleRequest = typeof serverAdapterBaseObject === 'function'\n        ? serverAdapterBaseObject\n        : serverAdapterBaseObject.handle;\n    const onRequestHooks = [];\n    const onResponseHooks = [];\n    if (options?.plugins != null) {\n        for (const plugin of options.plugins) {\n            if (plugin.onRequest) {\n                onRequestHooks.push(plugin.onRequest);\n            }\n            if (plugin.onResponse) {\n                onResponseHooks.push(plugin.onResponse);\n            }\n        }\n    }\n    const handleRequest = onRequestHooks.length > 0 || onResponseHooks.length > 0\n        ? function handleRequest(request, serverContext) {\n            let requestHandler = givenHandleRequest;\n            let response;\n            if (onRequestHooks.length === 0) {\n                return handleEarlyResponse();\n            }\n            let url = new Proxy(EMPTY_OBJECT, {\n                get(_target, prop, _receiver) {\n                    url = new fetchAPI.URL(request.url, 'http://localhost');\n                    return Reflect.get(url, prop, url);\n                },\n            });\n            const onRequestHooksIteration$ = (0, utils_js_1.iterateAsyncVoid)(onRequestHooks, (onRequestHook, stopEarly) => onRequestHook({\n                request,\n                setRequest(newRequest) {\n                    request = newRequest;\n                },\n                serverContext,\n                fetchAPI,\n                url,\n                requestHandler,\n                setRequestHandler(newRequestHandler) {\n                    requestHandler = newRequestHandler;\n                },\n                endResponse(newResponse) {\n                    response = newResponse;\n                    if (newResponse) {\n                        stopEarly();\n                    }\n                },\n            }));\n            function handleResponse(response) {\n                if (onResponseHooks.length === 0) {\n                    return response;\n                }\n                const onResponseHookPayload = {\n                    request,\n                    response,\n                    serverContext,\n                    setResponse(newResponse) {\n                        response = newResponse;\n                    },\n                    fetchAPI,\n                };\n                const onResponseHooksIteration$ = (0, utils_js_1.iterateAsyncVoid)(onResponseHooks, onResponseHook => onResponseHook(onResponseHookPayload));\n                if ((0, utils_js_1.isPromise)(onResponseHooksIteration$)) {\n                    return onResponseHooksIteration$.then(() => response);\n                }\n                return response;\n            }\n            function handleEarlyResponse() {\n                if (!response) {\n                    const response$ = requestHandler(request, serverContext);\n                    if ((0, utils_js_1.isPromise)(response$)) {\n                        return response$.then(handleResponse);\n                    }\n                    return handleResponse(response$);\n                }\n                return handleResponse(response);\n            }\n            if ((0, utils_js_1.isPromise)(onRequestHooksIteration$)) {\n                return onRequestHooksIteration$.then(handleEarlyResponse);\n            }\n            return handleEarlyResponse();\n        }\n        : givenHandleRequest;\n    // TODO: Remove this on the next major version\n    function handleNodeRequest(nodeRequest, ...ctx) {\n        const serverContext = ctx.length > 1 ? (0, utils_js_1.completeAssign)(...ctx) : ctx[0] || {};\n        const request = (0, utils_js_1.normalizeNodeRequest)(nodeRequest, fetchAPI);\n        return handleRequest(request, serverContext);\n    }\n    function handleNodeRequestAndResponse(nodeRequest, nodeResponseOrContainer, ...ctx) {\n        const nodeResponse = nodeResponseOrContainer.raw || nodeResponseOrContainer;\n        utils_js_1.nodeRequestResponseMap.set(nodeRequest, nodeResponse);\n        return handleNodeRequest(nodeRequest, ...ctx);\n    }\n    function requestListener(nodeRequest, nodeResponse, ...ctx) {\n        const waitUntilPromises = [];\n        const defaultServerContext = {\n            req: nodeRequest,\n            res: nodeResponse,\n            waitUntil(cb) {\n                waitUntilPromises.push(cb.catch(err => console.error(err)));\n            },\n        };\n        let response$;\n        try {\n            response$ = handleNodeRequestAndResponse(nodeRequest, nodeResponse, defaultServerContext, ...ctx);\n        }\n        catch (err) {\n            response$ = (0, utils_js_1.handleErrorFromRequestHandler)(err, fetchAPI.Response);\n        }\n        if ((0, utils_js_1.isPromise)(response$)) {\n            return response$\n                .catch((e) => (0, utils_js_1.handleErrorFromRequestHandler)(e, fetchAPI.Response))\n                .then(response => (0, utils_js_1.sendNodeResponse)(response, nodeResponse, nodeRequest))\n                .catch(err => {\n                console.error(`Unexpected error while handling request: ${err.message || err}`);\n            });\n        }\n        try {\n            return (0, utils_js_1.sendNodeResponse)(response$, nodeResponse, nodeRequest);\n        }\n        catch (err) {\n            console.error(`Unexpected error while handling request: ${err.message || err}`);\n        }\n    }\n    function handleUWS(res, req, ...ctx) {\n        const waitUntilPromises = [];\n        const defaultServerContext = {\n            res,\n            req,\n            waitUntil(cb) {\n                waitUntilPromises.push(cb.catch(err => console.error(err)));\n            },\n        };\n        const filteredCtxParts = ctx.filter(partCtx => partCtx != null);\n        const serverContext = filteredCtxParts.length > 0\n            ? (0, utils_js_1.completeAssign)(defaultServerContext, ...ctx)\n            : defaultServerContext;\n        const signal = new utils_js_1.ServerAdapterRequestAbortSignal();\n        const originalResEnd = res.end.bind(res);\n        let resEnded = false;\n        res.end = function (data) {\n            resEnded = true;\n            return originalResEnd(data);\n        };\n        const originalOnAborted = res.onAborted.bind(res);\n        originalOnAborted(function () {\n            signal.sendAbort();\n        });\n        res.onAborted = function (cb) {\n            signal.addEventListener('abort', cb);\n        };\n        const request = (0, uwebsockets_js_1.getRequestFromUWSRequest)({\n            req,\n            res,\n            fetchAPI,\n            signal,\n        });\n        let response$;\n        try {\n            response$ = handleRequest(request, serverContext);\n        }\n        catch (err) {\n            response$ = (0, utils_js_1.handleErrorFromRequestHandler)(err, fetchAPI.Response);\n        }\n        if ((0, utils_js_1.isPromise)(response$)) {\n            return response$\n                .catch((e) => (0, utils_js_1.handleErrorFromRequestHandler)(e, fetchAPI.Response))\n                .then(response => {\n                if (!signal.aborted && !resEnded) {\n                    return (0, uwebsockets_js_1.sendResponseToUwsOpts)(res, response, signal);\n                }\n            })\n                .catch(err => {\n                console.error(`Unexpected error while handling request: \\n${err.stack || err.message || err}`);\n            });\n        }\n        try {\n            if (!signal.aborted && !resEnded) {\n                return (0, uwebsockets_js_1.sendResponseToUwsOpts)(res, response$, signal);\n            }\n        }\n        catch (err) {\n            console.error(`Unexpected error while handling request: \\n${err.stack || err.message || err}`);\n        }\n    }\n    function handleEvent(event, ...ctx) {\n        if (!event.respondWith || !event.request) {\n            throw new TypeError(`Expected FetchEvent, got ${event}`);\n        }\n        const filteredCtxParts = ctx.filter(partCtx => partCtx != null);\n        const serverContext = filteredCtxParts.length > 0\n            ? (0, utils_js_1.completeAssign)({}, event, ...filteredCtxParts)\n            : (0, utils_js_1.isolateObject)(event);\n        const response$ = handleRequest(event.request, serverContext);\n        event.respondWith(response$);\n    }\n    function handleRequestWithWaitUntil(request, ...ctx) {\n        const filteredCtxParts = ctx.filter(partCtx => partCtx != null);\n        let waitUntilPromises;\n        const serverContext = filteredCtxParts.length > 1\n            ? (0, utils_js_1.completeAssign)({}, ...filteredCtxParts)\n            : (0, utils_js_1.isolateObject)(filteredCtxParts[0], filteredCtxParts[0] == null || filteredCtxParts[0].waitUntil == null\n                ? (waitUntilPromises = [])\n                : undefined);\n        const response$ = handleRequest(request, serverContext);\n        if (waitUntilPromises?.length) {\n            return handleWaitUntils(waitUntilPromises).then(() => response$);\n        }\n        return response$;\n    }\n    const fetchFn = (input, ...maybeCtx) => {\n        if (typeof input === 'string' || 'href' in input) {\n            const [initOrCtx, ...restOfCtx] = maybeCtx;\n            if ((0, utils_js_1.isRequestInit)(initOrCtx)) {\n                const request = new fetchAPI.Request(input, initOrCtx);\n                const res$ = handleRequestWithWaitUntil(request, ...restOfCtx);\n                return (0, utils_js_1.handleAbortSignalAndPromiseResponse)(res$, initOrCtx?.signal);\n            }\n            const request = new fetchAPI.Request(input);\n            return handleRequestWithWaitUntil(request, ...maybeCtx);\n        }\n        const res$ = handleRequestWithWaitUntil(input, ...maybeCtx);\n        return (0, utils_js_1.handleAbortSignalAndPromiseResponse)(res$, input._signal);\n    };\n    const genericRequestHandler = (input, ...maybeCtx) => {\n        // If it is a Node request\n        const [initOrCtxOrRes, ...restOfCtx] = maybeCtx;\n        if ((0, utils_js_1.isNodeRequest)(input)) {\n            if (!(0, utils_js_1.isServerResponse)(initOrCtxOrRes)) {\n                throw new TypeError(`Expected ServerResponse, got ${initOrCtxOrRes}`);\n            }\n            return requestListener(input, initOrCtxOrRes, ...restOfCtx);\n        }\n        if ((0, uwebsockets_js_1.isUWSResponse)(input)) {\n            return handleUWS(input, initOrCtxOrRes, ...restOfCtx);\n        }\n        if ((0, utils_js_1.isServerResponse)(initOrCtxOrRes)) {\n            throw new TypeError('Got Node response without Node request');\n        }\n        // Is input a container object over Request?\n        if (isRequestAccessible(input)) {\n            // Is it FetchEvent?\n            if ((0, utils_js_1.isFetchEvent)(input)) {\n                return handleEvent(input, ...maybeCtx);\n            }\n            // In this input is also the context\n            return handleRequestWithWaitUntil(input.request, input, ...maybeCtx);\n        }\n        // Or is it Request itself?\n        // Then ctx is present and it is the context\n        return fetchFn(input, ...maybeCtx);\n    };\n    const adapterObj = {\n        handleRequest: handleRequestWithWaitUntil,\n        fetch: fetchFn,\n        handleNodeRequest,\n        handleNodeRequestAndResponse,\n        requestListener,\n        handleEvent,\n        handleUWS,\n        handle: genericRequestHandler,\n    };\n    const serverAdapter = new Proxy(genericRequestHandler, {\n        // It should have all the attributes of the handler function and the server instance\n        has: (_, prop) => {\n            return (prop in adapterObj ||\n                prop in genericRequestHandler ||\n                (serverAdapterBaseObject && prop in serverAdapterBaseObject));\n        },\n        get: (_, prop) => {\n            const adapterProp = adapterObj[prop];\n            if (adapterProp) {\n                if (adapterProp.bind) {\n                    return adapterProp.bind(adapterObj);\n                }\n                return adapterProp;\n            }\n            const handleProp = genericRequestHandler[prop];\n            if (handleProp) {\n                if (handleProp.bind) {\n                    return handleProp.bind(genericRequestHandler);\n                }\n                return handleProp;\n            }\n            if (serverAdapterBaseObject) {\n                const serverAdapterBaseObjectProp = serverAdapterBaseObject[prop];\n                if (serverAdapterBaseObjectProp) {\n                    if (serverAdapterBaseObjectProp.bind) {\n                        return function (...args) {\n                            const returnedVal = serverAdapterBaseObject[prop](...args);\n                            if (returnedVal === serverAdapterBaseObject) {\n                                return serverAdapter;\n                            }\n                            return returnedVal;\n                        };\n                    }\n                    return serverAdapterBaseObjectProp;\n                }\n            }\n        },\n        apply(_, __, args) {\n            return genericRequestHandler(...args);\n        },\n    });\n    return serverAdapter;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/cjs/createServerAdapter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Response = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ./createServerAdapter.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/createServerAdapter.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./types.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/types.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/utils.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./plugins/types.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/types.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./plugins/useCors.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useCors.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./plugins/useErrorHandling.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useErrorHandling.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./plugins/useContentEncoding.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useContentEncoding.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./uwebsockets.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/uwebsockets.js\"), exports);\nvar fetch_1 = __webpack_require__(/*! @whatwg-node/fetch */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\");\nObject.defineProperty(exports, \"Response\", ({ enumerable: true, get: function () { return fetch_1.Response; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCLGdCQUFnQixtQkFBTyxDQUFDLHVEQUFPO0FBQy9CLHFCQUFxQixtQkFBTyxDQUFDLHFHQUEwQjtBQUN2RCxxQkFBcUIsbUJBQU8sQ0FBQyx5RUFBWTtBQUN6QyxxQkFBcUIsbUJBQU8sQ0FBQyx5RUFBWTtBQUN6QyxxQkFBcUIsbUJBQU8sQ0FBQyx5RkFBb0I7QUFDakQscUJBQXFCLG1CQUFPLENBQUMsNkZBQXNCO0FBQ25ELHFCQUFxQixtQkFBTyxDQUFDLCtHQUErQjtBQUM1RCxxQkFBcUIsbUJBQU8sQ0FBQyxtSEFBaUM7QUFDOUQscUJBQXFCLG1CQUFPLENBQUMscUZBQWtCO0FBQy9DLGNBQWMsbUJBQU8sQ0FBQywwSEFBb0I7QUFDMUMsNENBQTJDLEVBQUUscUNBQXFDLDRCQUE0QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9zZXJ2ZXIvY2pzL2luZGV4LmpzP2Q1ZDUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJlc3BvbnNlID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NyZWF0ZVNlcnZlckFkYXB0ZXIuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXMuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXRpbHMuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcGx1Z2lucy90eXBlcy5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wbHVnaW5zL3VzZUNvcnMuanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcGx1Z2lucy91c2VFcnJvckhhbmRsaW5nLmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3BsdWdpbnMvdXNlQ29udGVudEVuY29kaW5nLmpzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3V3ZWJzb2NrZXRzLmpzXCIpLCBleHBvcnRzKTtcbnZhciBmZXRjaF8xID0gcmVxdWlyZShcIkB3aGF0d2ctbm9kZS9mZXRjaFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJlc3BvbnNlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBmZXRjaF8xLlJlc3BvbnNlOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/types.js":
/*!***************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/plugins/types.js ***!
  \***************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useContentEncoding.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/plugins/useContentEncoding.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useContentEncoding = useContentEncoding;\nconst utils_js_1 = __webpack_require__(/*! ../utils.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/utils.js\");\nfunction useContentEncoding() {\n    const encodingMap = new WeakMap();\n    return {\n        onRequest({ request, setRequest, fetchAPI, endResponse }) {\n            if (request.body) {\n                const contentEncodingHeader = request.headers.get('content-encoding');\n                if (contentEncodingHeader && contentEncodingHeader !== 'none') {\n                    const contentEncodings = contentEncodingHeader?.split(',');\n                    if (!contentEncodings.every(encoding => (0, utils_js_1.getSupportedEncodings)(fetchAPI).includes(encoding))) {\n                        endResponse(new fetchAPI.Response(`Unsupported 'Content-Encoding': ${contentEncodingHeader}`, {\n                            status: 415,\n                            statusText: 'Unsupported Media Type',\n                        }));\n                        return;\n                    }\n                    let newBody = request.body;\n                    for (const contentEncoding of contentEncodings) {\n                        newBody = newBody.pipeThrough(new fetchAPI.DecompressionStream(contentEncoding));\n                    }\n                    request = new fetchAPI.Request(request.url, {\n                        body: newBody,\n                        cache: request.cache,\n                        credentials: request.credentials,\n                        headers: request.headers,\n                        integrity: request.integrity,\n                        keepalive: request.keepalive,\n                        method: request.method,\n                        mode: request.mode,\n                        redirect: request.redirect,\n                        referrer: request.referrer,\n                        referrerPolicy: request.referrerPolicy,\n                        signal: request.signal,\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                        // @ts-ignore - not in the TS types yet\n                        duplex: 'half',\n                    });\n                    setRequest(request);\n                }\n            }\n            const acceptEncoding = request.headers.get('accept-encoding');\n            if (acceptEncoding) {\n                encodingMap.set(request, acceptEncoding.split(','));\n            }\n        },\n        onResponse({ request, response, setResponse, fetchAPI, serverContext }) {\n            const waitUntil = serverContext.waitUntil?.bind(serverContext) || (() => { });\n            // Hack for avoiding to create whatwg-node to create a readable stream until it's needed\n            if (response['bodyInit'] || response.body) {\n                const encodings = encodingMap.get(request);\n                if (encodings) {\n                    const supportedEncoding = encodings.find(encoding => (0, utils_js_1.getSupportedEncodings)(fetchAPI).includes(encoding));\n                    if (supportedEncoding) {\n                        const compressionStream = new fetchAPI.CompressionStream(supportedEncoding);\n                        // To calculate final content-length\n                        const contentLength = response.headers.get('content-length');\n                        if (contentLength) {\n                            const bufOfRes = response._buffer;\n                            if (bufOfRes) {\n                                const writer = compressionStream.writable.getWriter();\n                                waitUntil(writer.write(bufOfRes));\n                                waitUntil(writer.close());\n                                const uint8Arrays$ = (0, utils_js_1.isReadable)(compressionStream.readable['readable'])\n                                    ? collectReadableValues(compressionStream.readable['readable'])\n                                    : (0, utils_js_1.isAsyncIterable)(compressionStream.readable)\n                                        ? collectAsyncIterableValues(compressionStream.readable)\n                                        : collectReadableStreamValues(compressionStream.readable);\n                                return uint8Arrays$.then(uint8Arrays => {\n                                    const chunks = uint8Arrays.flatMap(uint8Array => [...uint8Array]);\n                                    const uint8Array = new Uint8Array(chunks);\n                                    const newHeaders = new fetchAPI.Headers(response.headers);\n                                    newHeaders.set('content-encoding', supportedEncoding);\n                                    newHeaders.set('content-length', uint8Array.byteLength.toString());\n                                    const compressedResponse = new fetchAPI.Response(uint8Array, {\n                                        ...response,\n                                        headers: newHeaders,\n                                    });\n                                    utils_js_1.decompressedResponseMap.set(compressedResponse, response);\n                                    setResponse(compressedResponse);\n                                    waitUntil(compressionStream.writable.close());\n                                });\n                            }\n                        }\n                        const newHeaders = new fetchAPI.Headers(response.headers);\n                        newHeaders.set('content-encoding', supportedEncoding);\n                        newHeaders.delete('content-length');\n                        const compressedBody = response.body.pipeThrough(compressionStream);\n                        const compressedResponse = new fetchAPI.Response(compressedBody, {\n                            status: response.status,\n                            statusText: response.statusText,\n                            headers: newHeaders,\n                        });\n                        utils_js_1.decompressedResponseMap.set(compressedResponse, response);\n                        setResponse(compressedResponse);\n                    }\n                }\n            }\n        },\n    };\n}\nfunction collectReadableValues(readable) {\n    const values = [];\n    readable.on('data', value => values.push(value));\n    return new Promise((resolve, reject) => {\n        readable.once('end', () => resolve(values));\n        readable.once('error', reject);\n    });\n}\nasync function collectAsyncIterableValues(asyncIterable) {\n    const values = [];\n    for await (const value of asyncIterable) {\n        values.push(value);\n    }\n    return values;\n}\nasync function collectReadableStreamValues(readableStream) {\n    const reader = readableStream.getReader();\n    const values = [];\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) {\n            reader.releaseLock();\n            break;\n        }\n        else if (value) {\n            values.push(value);\n        }\n    }\n    return values;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useContentEncoding.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useCors.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/plugins/useCors.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getCORSHeadersByRequestAndOptions = getCORSHeadersByRequestAndOptions;\nexports.useCORS = useCORS;\nfunction getCORSHeadersByRequestAndOptions(request, corsOptions) {\n    const currentOrigin = request.headers.get('origin');\n    if (corsOptions === false || currentOrigin == null) {\n        return null;\n    }\n    const headers = {};\n    // If defined origins have '*' or undefined by any means, we should allow all origins\n    if (corsOptions.origin == null ||\n        corsOptions.origin.length === 0 ||\n        corsOptions.origin.includes('*')) {\n        headers['Access-Control-Allow-Origin'] = currentOrigin;\n        // Vary by origin because there are multiple origins\n        headers['Vary'] = 'Origin';\n    }\n    else if (typeof corsOptions.origin === 'string') {\n        // If there is one specific origin is specified, use it directly\n        headers['Access-Control-Allow-Origin'] = corsOptions.origin;\n    }\n    else if (Array.isArray(corsOptions.origin)) {\n        // If there is only one origin defined in the array, consider it as a single one\n        if (corsOptions.origin.length === 1) {\n            headers['Access-Control-Allow-Origin'] = corsOptions.origin[0];\n        }\n        else if (corsOptions.origin.includes(currentOrigin)) {\n            // If origin is available in the headers, use it\n            headers['Access-Control-Allow-Origin'] = currentOrigin;\n            // Vary by origin because there are multiple origins\n            headers['Vary'] = 'Origin';\n        }\n        else {\n            // There is no origin found in the headers, so we should return null\n            headers['Access-Control-Allow-Origin'] = 'null';\n        }\n    }\n    if (corsOptions.methods?.length) {\n        headers['Access-Control-Allow-Methods'] = corsOptions.methods.join(', ');\n    }\n    else {\n        const requestMethod = request.headers.get('access-control-request-method');\n        if (requestMethod) {\n            headers['Access-Control-Allow-Methods'] = requestMethod;\n        }\n    }\n    if (corsOptions.allowedHeaders?.length) {\n        headers['Access-Control-Allow-Headers'] = corsOptions.allowedHeaders.join(', ');\n    }\n    else {\n        const requestHeaders = request.headers.get('access-control-request-headers');\n        if (requestHeaders) {\n            headers['Access-Control-Allow-Headers'] = requestHeaders;\n            if (headers['Vary']) {\n                headers['Vary'] += ', Access-Control-Request-Headers';\n            }\n            else {\n                headers['Vary'] = 'Access-Control-Request-Headers';\n            }\n        }\n    }\n    if (corsOptions.credentials != null) {\n        if (corsOptions.credentials === true) {\n            headers['Access-Control-Allow-Credentials'] = 'true';\n        }\n    }\n    else if (headers['Access-Control-Allow-Origin'] !== '*') {\n        headers['Access-Control-Allow-Credentials'] = 'true';\n    }\n    if (corsOptions.exposedHeaders) {\n        headers['Access-Control-Expose-Headers'] = corsOptions.exposedHeaders.join(', ');\n    }\n    if (corsOptions.maxAge) {\n        headers['Access-Control-Max-Age'] = corsOptions.maxAge.toString();\n    }\n    return headers;\n}\nasync function getCORSResponseHeaders(request, corsOptionsFactory, serverContext) {\n    const corsOptions = await corsOptionsFactory(request, serverContext);\n    return getCORSHeadersByRequestAndOptions(request, corsOptions);\n}\nfunction useCORS(options) {\n    let corsOptionsFactory = () => ({});\n    if (options != null) {\n        if (typeof options === 'function') {\n            corsOptionsFactory = options;\n        }\n        else if (typeof options === 'object') {\n            const corsOptions = {\n                ...options,\n            };\n            corsOptionsFactory = () => corsOptions;\n        }\n        else if (options === false) {\n            corsOptionsFactory = () => false;\n        }\n    }\n    return {\n        onRequest({ request, fetchAPI, endResponse }) {\n            if (request.method.toUpperCase() === 'OPTIONS') {\n                const response = new fetchAPI.Response(null, {\n                    status: 204,\n                    // Safari (and potentially other browsers) need content-length 0,\n                    // for 204 or they just hang waiting for a body\n                    // see: https://github.com/expressjs/cors/blob/master/lib/index.js#L176\n                    headers: {\n                        'Content-Length': '0',\n                    },\n                });\n                endResponse(response);\n            }\n        },\n        async onResponse({ request, serverContext, response }) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const headers = await getCORSResponseHeaders(request, corsOptionsFactory, serverContext);\n            if (headers != null) {\n                for (const headerName in headers) {\n                    response.headers.set(headerName, headers[headerName]);\n                }\n            }\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useCors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useErrorHandling.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/plugins/useErrorHandling.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HTTPError = void 0;\nexports.createDefaultErrorHandler = createDefaultErrorHandler;\nexports.useErrorHandling = useErrorHandling;\nconst fetch_1 = __webpack_require__(/*! @whatwg-node/fetch */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\");\nconst utils_js_1 = __webpack_require__(/*! ../utils.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/utils.js\");\nfunction createDefaultErrorHandler(ResponseCtor = fetch_1.Response) {\n    return function defaultErrorHandler(e) {\n        if (e.details || e.status || e.headers || e.name === 'HTTPError') {\n            return new ResponseCtor(typeof e.details === 'object' ? JSON.stringify(e.details) : e.message, {\n                status: e.status,\n                headers: e.headers || {},\n            });\n        }\n        console.error(e);\n        return createDefaultErrorResponse(ResponseCtor);\n    };\n}\nfunction createDefaultErrorResponse(ResponseCtor) {\n    if (ResponseCtor.error) {\n        return ResponseCtor.error();\n    }\n    return new ResponseCtor(null, { status: 500 });\n}\nclass HTTPError extends Error {\n    status;\n    message;\n    headers;\n    details;\n    name = 'HTTPError';\n    constructor(status = 500, message, headers = {}, details) {\n        super(message);\n        this.status = status;\n        this.message = message;\n        this.headers = headers;\n        this.details = details;\n        Error.captureStackTrace(this, HTTPError);\n    }\n}\nexports.HTTPError = HTTPError;\nfunction useErrorHandling(onError) {\n    return {\n        onRequest({ requestHandler, setRequestHandler, fetchAPI }) {\n            const errorHandler = onError || createDefaultErrorHandler(fetchAPI.Response);\n            setRequestHandler(function handlerWithErrorHandling(request, serverContext) {\n                try {\n                    const response$ = requestHandler(request, serverContext);\n                    if ((0, utils_js_1.isPromise)(response$)) {\n                        return response$.catch(e => errorHandler(e, request, serverContext) ||\n                            createDefaultErrorResponse(fetchAPI.Response));\n                    }\n                    return response$;\n                }\n                catch (e) {\n                    return (errorHandler(e, request, serverContext) || createDefaultErrorResponse(fetchAPI.Response));\n                }\n            });\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9janMvcGx1Z2lucy91c2VFcnJvckhhbmRsaW5nLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQixpQ0FBaUM7QUFDakMsd0JBQXdCO0FBQ3hCLGdCQUFnQixtQkFBTyxDQUFDLDBIQUFvQjtBQUM1QyxtQkFBbUIsbUJBQU8sQ0FBQywwRUFBYTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsYUFBYTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRDtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxvQkFBb0IsNkNBQTZDO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9zZXJ2ZXIvY2pzL3BsdWdpbnMvdXNlRXJyb3JIYW5kbGluZy5qcz81OGEyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IVFRQRXJyb3IgPSB2b2lkIDA7XG5leHBvcnRzLmNyZWF0ZURlZmF1bHRFcnJvckhhbmRsZXIgPSBjcmVhdGVEZWZhdWx0RXJyb3JIYW5kbGVyO1xuZXhwb3J0cy51c2VFcnJvckhhbmRsaW5nID0gdXNlRXJyb3JIYW5kbGluZztcbmNvbnN0IGZldGNoXzEgPSByZXF1aXJlKFwiQHdoYXR3Zy1ub2RlL2ZldGNoXCIpO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlscy5qc1wiKTtcbmZ1bmN0aW9uIGNyZWF0ZURlZmF1bHRFcnJvckhhbmRsZXIoUmVzcG9uc2VDdG9yID0gZmV0Y2hfMS5SZXNwb25zZSkge1xuICAgIHJldHVybiBmdW5jdGlvbiBkZWZhdWx0RXJyb3JIYW5kbGVyKGUpIHtcbiAgICAgICAgaWYgKGUuZGV0YWlscyB8fCBlLnN0YXR1cyB8fCBlLmhlYWRlcnMgfHwgZS5uYW1lID09PSAnSFRUUEVycm9yJykge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBSZXNwb25zZUN0b3IodHlwZW9mIGUuZGV0YWlscyA9PT0gJ29iamVjdCcgPyBKU09OLnN0cmluZ2lmeShlLmRldGFpbHMpIDogZS5tZXNzYWdlLCB7XG4gICAgICAgICAgICAgICAgc3RhdHVzOiBlLnN0YXR1cyxcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiBlLmhlYWRlcnMgfHwge30sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBjb25zb2xlLmVycm9yKGUpO1xuICAgICAgICByZXR1cm4gY3JlYXRlRGVmYXVsdEVycm9yUmVzcG9uc2UoUmVzcG9uc2VDdG9yKTtcbiAgICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlRGVmYXVsdEVycm9yUmVzcG9uc2UoUmVzcG9uc2VDdG9yKSB7XG4gICAgaWYgKFJlc3BvbnNlQ3Rvci5lcnJvcikge1xuICAgICAgICByZXR1cm4gUmVzcG9uc2VDdG9yLmVycm9yKCk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgUmVzcG9uc2VDdG9yKG51bGwsIHsgc3RhdHVzOiA1MDAgfSk7XG59XG5jbGFzcyBIVFRQRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgc3RhdHVzO1xuICAgIG1lc3NhZ2U7XG4gICAgaGVhZGVycztcbiAgICBkZXRhaWxzO1xuICAgIG5hbWUgPSAnSFRUUEVycm9yJztcbiAgICBjb25zdHJ1Y3RvcihzdGF0dXMgPSA1MDAsIG1lc3NhZ2UsIGhlYWRlcnMgPSB7fSwgZGV0YWlscykge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7XG4gICAgICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgICAgIHRoaXMuaGVhZGVycyA9IGhlYWRlcnM7XG4gICAgICAgIHRoaXMuZGV0YWlscyA9IGRldGFpbHM7XG4gICAgICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIEhUVFBFcnJvcik7XG4gICAgfVxufVxuZXhwb3J0cy5IVFRQRXJyb3IgPSBIVFRQRXJyb3I7XG5mdW5jdGlvbiB1c2VFcnJvckhhbmRsaW5nKG9uRXJyb3IpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBvblJlcXVlc3QoeyByZXF1ZXN0SGFuZGxlciwgc2V0UmVxdWVzdEhhbmRsZXIsIGZldGNoQVBJIH0pIHtcbiAgICAgICAgICAgIGNvbnN0IGVycm9ySGFuZGxlciA9IG9uRXJyb3IgfHwgY3JlYXRlRGVmYXVsdEVycm9ySGFuZGxlcihmZXRjaEFQSS5SZXNwb25zZSk7XG4gICAgICAgICAgICBzZXRSZXF1ZXN0SGFuZGxlcihmdW5jdGlvbiBoYW5kbGVyV2l0aEVycm9ySGFuZGxpbmcocmVxdWVzdCwgc2VydmVyQ29udGV4dCkge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlJCA9IHJlcXVlc3RIYW5kbGVyKHJlcXVlc3QsIHNlcnZlckNvbnRleHQpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoKDAsIHV0aWxzX2pzXzEuaXNQcm9taXNlKShyZXNwb25zZSQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UkLmNhdGNoKGUgPT4gZXJyb3JIYW5kbGVyKGUsIHJlcXVlc3QsIHNlcnZlckNvbnRleHQpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRlRGVmYXVsdEVycm9yUmVzcG9uc2UoZmV0Y2hBUEkuUmVzcG9uc2UpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKGVycm9ySGFuZGxlcihlLCByZXF1ZXN0LCBzZXJ2ZXJDb250ZXh0KSB8fCBjcmVhdGVEZWZhdWx0RXJyb3JSZXNwb25zZShmZXRjaEFQSS5SZXNwb25zZSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/cjs/plugins/useErrorHandling.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/types.js":
/*!*******************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/types.js ***!
  \*******************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/utils.js":
/*!*******************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/utils.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decompressedResponseMap = exports.nodeRequestResponseMap = exports.ServerAdapterRequestAbortSignal = void 0;\nexports.isAsyncIterable = isAsyncIterable;\nexports.normalizeNodeRequest = normalizeNodeRequest;\nexports.isReadable = isReadable;\nexports.isNodeRequest = isNodeRequest;\nexports.isServerResponse = isServerResponse;\nexports.isReadableStream = isReadableStream;\nexports.isFetchEvent = isFetchEvent;\nexports.sendNodeResponse = sendNodeResponse;\nexports.isRequestInit = isRequestInit;\nexports.completeAssign = completeAssign;\nexports.isPromise = isPromise;\nexports.iterateAsyncVoid = iterateAsyncVoid;\nexports.handleErrorFromRequestHandler = handleErrorFromRequestHandler;\nexports.isolateObject = isolateObject;\nexports.createDeferredPromise = createDeferredPromise;\nexports.handleAbortSignalAndPromiseResponse = handleAbortSignalAndPromiseResponse;\nexports.getSupportedEncodings = getSupportedEncodings;\nexports.handleResponseDecompression = handleResponseDecompression;\nfunction isAsyncIterable(body) {\n    return (body != null && typeof body === 'object' && typeof body[Symbol.asyncIterator] === 'function');\n}\nfunction getPort(nodeRequest) {\n    if (nodeRequest.socket?.localPort) {\n        return nodeRequest.socket?.localPort;\n    }\n    const hostInHeader = nodeRequest.headers?.[':authority'] || nodeRequest.headers?.host;\n    const portInHeader = hostInHeader?.split(':')?.[1];\n    if (portInHeader) {\n        return portInHeader;\n    }\n    return 80;\n}\nfunction getHostnameWithPort(nodeRequest) {\n    if (nodeRequest.headers?.[':authority']) {\n        return nodeRequest.headers?.[':authority'];\n    }\n    if (nodeRequest.headers?.host) {\n        return nodeRequest.headers?.host;\n    }\n    const port = getPort(nodeRequest);\n    if (nodeRequest.hostname) {\n        return nodeRequest.hostname + ':' + port;\n    }\n    const localIp = nodeRequest.socket?.localAddress;\n    if (localIp && !localIp?.includes('::') && !localIp?.includes('ffff')) {\n        return `${localIp}:${port}`;\n    }\n    return 'localhost';\n}\nfunction buildFullUrl(nodeRequest) {\n    const hostnameWithPort = getHostnameWithPort(nodeRequest);\n    const protocol = nodeRequest.protocol || (nodeRequest.socket?.encrypted ? 'https' : 'http');\n    const endpoint = nodeRequest.originalUrl || nodeRequest.url || '/graphql';\n    return `${protocol}://${hostnameWithPort}${endpoint}`;\n}\nfunction isRequestBody(body) {\n    const stringTag = body[Symbol.toStringTag];\n    if (typeof body === 'string' ||\n        stringTag === 'Uint8Array' ||\n        stringTag === 'Blob' ||\n        stringTag === 'FormData' ||\n        stringTag === 'URLSearchParams' ||\n        isAsyncIterable(body)) {\n        return true;\n    }\n    return false;\n}\nclass ServerAdapterRequestAbortSignal extends EventTarget {\n    aborted = false;\n    _onabort = null;\n    reason;\n    throwIfAborted() {\n        if (this.aborted) {\n            throw this.reason;\n        }\n    }\n    sendAbort() {\n        this.reason = new DOMException('This operation was aborted', 'AbortError');\n        this.aborted = true;\n        this.dispatchEvent(new Event('abort'));\n    }\n    get onabort() {\n        return this._onabort;\n    }\n    set onabort(value) {\n        this._onabort = value;\n        if (value) {\n            this.addEventListener('abort', value);\n        }\n        else {\n            this.removeEventListener('abort', value);\n        }\n    }\n    any(signals) {\n        return AbortSignal.any([...signals]);\n    }\n}\nexports.ServerAdapterRequestAbortSignal = ServerAdapterRequestAbortSignal;\nlet bunNodeCompatModeWarned = false;\nexports.nodeRequestResponseMap = new WeakMap();\nfunction normalizeNodeRequest(nodeRequest, fetchAPI) {\n    const rawRequest = nodeRequest.raw || nodeRequest.req || nodeRequest;\n    let fullUrl = buildFullUrl(rawRequest);\n    if (nodeRequest.query) {\n        const url = new fetchAPI.URL(fullUrl);\n        for (const key in nodeRequest.query) {\n            url.searchParams.set(key, nodeRequest.query[key]);\n        }\n        fullUrl = url.toString();\n    }\n    let signal;\n    const nodeResponse = exports.nodeRequestResponseMap.get(nodeRequest);\n    exports.nodeRequestResponseMap.delete(nodeRequest);\n    let normalizedHeaders = nodeRequest.headers;\n    if (nodeRequest.headers?.[':method']) {\n        normalizedHeaders = {};\n        for (const key in nodeRequest.headers) {\n            if (!key.startsWith(':')) {\n                normalizedHeaders[key] = nodeRequest.headers[key];\n            }\n        }\n    }\n    if (nodeResponse?.once) {\n        let sendAbortSignal;\n        // If ponyfilled\n        if (fetchAPI.Request !== globalThis.Request) {\n            signal = new ServerAdapterRequestAbortSignal();\n            sendAbortSignal = () => signal.sendAbort();\n        }\n        else {\n            const controller = new AbortController();\n            signal = controller.signal;\n            sendAbortSignal = () => controller.abort();\n        }\n        const closeEventListener = () => {\n            if (signal && !signal.aborted) {\n                rawRequest.aborted = true;\n                sendAbortSignal();\n            }\n        };\n        nodeResponse.once('error', closeEventListener);\n        nodeResponse.once('close', closeEventListener);\n        nodeResponse.once('finish', () => {\n            nodeResponse.removeListener('close', closeEventListener);\n        });\n    }\n    if (nodeRequest.method === 'GET' || nodeRequest.method === 'HEAD') {\n        return new fetchAPI.Request(fullUrl, {\n            method: nodeRequest.method,\n            headers: normalizedHeaders,\n            signal,\n        });\n    }\n    /**\n     * Some Node server frameworks like Serverless Express sends a dummy object with body but as a Buffer not string\n     * so we do those checks to see is there something we can use directly as BodyInit\n     * because the presence of body means the request stream is already consumed and,\n     * rawRequest cannot be used as BodyInit/ReadableStream by Fetch API in this case.\n     */\n    const maybeParsedBody = nodeRequest.body;\n    if (maybeParsedBody != null && Object.keys(maybeParsedBody).length > 0) {\n        if (isRequestBody(maybeParsedBody)) {\n            return new fetchAPI.Request(fullUrl, {\n                method: nodeRequest.method,\n                headers: normalizedHeaders,\n                body: maybeParsedBody,\n                signal,\n            });\n        }\n        const request = new fetchAPI.Request(fullUrl, {\n            method: nodeRequest.method,\n            headers: normalizedHeaders,\n            signal,\n        });\n        if (!request.headers.get('content-type')?.includes('json')) {\n            request.headers.set('content-type', 'application/json; charset=utf-8');\n        }\n        return new Proxy(request, {\n            get: (target, prop, receiver) => {\n                switch (prop) {\n                    case 'json':\n                        return async () => maybeParsedBody;\n                    case 'text':\n                        return async () => JSON.stringify(maybeParsedBody);\n                    default:\n                        return Reflect.get(target, prop, receiver);\n                }\n            },\n        });\n    }\n    // Temporary workaround for a bug in Bun Node compat mode\n    if (globalThis.process?.versions?.bun && isReadable(rawRequest)) {\n        if (!bunNodeCompatModeWarned) {\n            bunNodeCompatModeWarned = true;\n            console.warn(`You use Bun Node compatibility mode, which is not recommended!\nIt will affect your performance. Please check our Bun integration recipe, and avoid using 'http' for your server implementation.`);\n        }\n        return new fetchAPI.Request(fullUrl, {\n            method: nodeRequest.method,\n            headers: normalizedHeaders,\n            duplex: 'half',\n            body: new ReadableStream({\n                start(controller) {\n                    rawRequest.on('data', chunk => {\n                        controller.enqueue(chunk);\n                    });\n                    rawRequest.on('error', e => {\n                        controller.error(e);\n                    });\n                    rawRequest.on('end', () => {\n                        controller.close();\n                    });\n                },\n                cancel(e) {\n                    rawRequest.destroy(e);\n                },\n            }),\n            signal,\n        });\n    }\n    // perf: instead of spreading the object, we can just pass it as is and it performs better\n    return new fetchAPI.Request(fullUrl, {\n        method: nodeRequest.method,\n        headers: normalizedHeaders,\n        body: rawRequest,\n        duplex: 'half',\n        signal,\n    });\n}\nfunction isReadable(stream) {\n    return stream.read != null;\n}\nfunction isNodeRequest(request) {\n    return isReadable(request);\n}\nfunction isServerResponse(stream) {\n    // Check all used functions are defined\n    return (stream != null &&\n        stream.setHeader != null &&\n        stream.end != null &&\n        stream.once != null &&\n        stream.write != null);\n}\nfunction isReadableStream(stream) {\n    return stream != null && stream.getReader != null;\n}\nfunction isFetchEvent(event) {\n    return event != null && event.request != null && event.respondWith != null;\n}\nfunction configureSocket(rawRequest) {\n    rawRequest?.socket?.setTimeout?.(0);\n    rawRequest?.socket?.setNoDelay?.(true);\n    rawRequest?.socket?.setKeepAlive?.(true);\n}\nfunction endResponse(serverResponse) {\n    // @ts-expect-error Avoid arguments adaptor trampoline https://v8.dev/blog/adaptor-frame\n    serverResponse.end(null, null, null);\n}\nasync function sendAsyncIterable(serverResponse, asyncIterable) {\n    let closed = false;\n    const closeEventListener = () => {\n        closed = true;\n    };\n    serverResponse.once('error', closeEventListener);\n    serverResponse.once('close', closeEventListener);\n    serverResponse.once('finish', () => {\n        serverResponse.removeListener('close', closeEventListener);\n    });\n    for await (const chunk of asyncIterable) {\n        if (closed) {\n            break;\n        }\n        if (!serverResponse\n            // @ts-expect-error http and http2 writes are actually compatible\n            .write(chunk)) {\n            if (closed) {\n                break;\n            }\n            await new Promise(resolve => serverResponse.once('drain', resolve));\n        }\n    }\n    endResponse(serverResponse);\n}\nfunction sendNodeResponse(fetchResponse, serverResponse, nodeRequest) {\n    if (serverResponse.closed || serverResponse.destroyed || serverResponse.writableEnded) {\n        return;\n    }\n    if (!fetchResponse) {\n        serverResponse.statusCode = 404;\n        serverResponse.end();\n        return;\n    }\n    serverResponse.statusCode = fetchResponse.status;\n    serverResponse.statusMessage = fetchResponse.statusText;\n    let setCookiesSet = false;\n    fetchResponse.headers.forEach((value, key) => {\n        if (key === 'set-cookie') {\n            if (setCookiesSet) {\n                return;\n            }\n            setCookiesSet = true;\n            const setCookies = fetchResponse.headers.getSetCookie?.();\n            if (setCookies) {\n                serverResponse.setHeader('set-cookie', setCookies);\n                return;\n            }\n        }\n        serverResponse.setHeader(key, value);\n    });\n    // Optimizations for node-fetch\n    const bufOfRes = fetchResponse._buffer;\n    if (bufOfRes) {\n        // @ts-expect-error http and http2 writes are actually compatible\n        serverResponse.write(bufOfRes);\n        endResponse(serverResponse);\n        return;\n    }\n    // Other fetch implementations\n    const fetchBody = fetchResponse.body;\n    if (fetchBody == null) {\n        endResponse(serverResponse);\n        return;\n    }\n    if (fetchBody[Symbol.toStringTag] === 'Uint8Array') {\n        serverResponse\n            // @ts-expect-error http and http2 writes are actually compatible\n            .write(fetchBody);\n        endResponse(serverResponse);\n        return;\n    }\n    configureSocket(nodeRequest);\n    if (isReadable(fetchBody)) {\n        serverResponse.once('close', () => {\n            fetchBody.destroy();\n        });\n        fetchBody.pipe(serverResponse);\n        return;\n    }\n    if (isAsyncIterable(fetchBody)) {\n        return sendAsyncIterable(serverResponse, fetchBody);\n    }\n}\nfunction isRequestInit(val) {\n    return (val != null &&\n        typeof val === 'object' &&\n        ('body' in val ||\n            'cache' in val ||\n            'credentials' in val ||\n            'headers' in val ||\n            'integrity' in val ||\n            'keepalive' in val ||\n            'method' in val ||\n            'mode' in val ||\n            'redirect' in val ||\n            'referrer' in val ||\n            'referrerPolicy' in val ||\n            'signal' in val ||\n            'window' in val));\n}\n// from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#copying_accessors\nfunction completeAssign(...args) {\n    const [target, ...sources] = args.filter(arg => arg != null && typeof arg === 'object');\n    sources.forEach(source => {\n        // modified Object.keys to Object.getOwnPropertyNames\n        // because Object.keys only returns enumerable properties\n        const descriptors = Object.getOwnPropertyNames(source).reduce((descriptors, key) => {\n            const descriptor = Object.getOwnPropertyDescriptor(source, key);\n            if (descriptor) {\n                descriptors[key] = Object.getOwnPropertyDescriptor(source, key);\n            }\n            return descriptors;\n        }, {});\n        // By default, Object.assign copies enumerable Symbols, too\n        Object.getOwnPropertySymbols(source).forEach(sym => {\n            const descriptor = Object.getOwnPropertyDescriptor(source, sym);\n            if (descriptor?.enumerable) {\n                descriptors[sym] = descriptor;\n            }\n        });\n        Object.defineProperties(target, descriptors);\n    });\n    return target;\n}\nfunction isPromise(val) {\n    return val?.then != null;\n}\nfunction iterateAsyncVoid(iterable, callback) {\n    const iterator = iterable[Symbol.iterator]();\n    let stopEarlyFlag = false;\n    function stopEarlyFn() {\n        stopEarlyFlag = true;\n    }\n    function iterate() {\n        const { done: endOfIterator, value } = iterator.next();\n        if (endOfIterator) {\n            return;\n        }\n        const result$ = callback(value, stopEarlyFn);\n        if (isPromise(result$)) {\n            return result$.then(() => {\n                if (stopEarlyFlag) {\n                    return;\n                }\n                return iterate();\n            });\n        }\n        if (stopEarlyFlag) {\n            return;\n        }\n        return iterate();\n    }\n    return iterate();\n}\nfunction handleErrorFromRequestHandler(error, ResponseCtor) {\n    return new ResponseCtor(error.stack || error.message || error.toString(), {\n        status: error.status || 500,\n    });\n}\nfunction isolateObject(originalCtx, waitUntilPromises) {\n    if (originalCtx == null) {\n        if (waitUntilPromises == null) {\n            return {};\n        }\n        originalCtx = {};\n    }\n    const extraProps = {};\n    const deletedProps = new Set();\n    return new Proxy(originalCtx, {\n        get(originalCtx, prop) {\n            if (waitUntilPromises != null && prop === 'waitUntil') {\n                return function waitUntil(promise) {\n                    waitUntilPromises.push(promise.catch(err => console.error(err)));\n                };\n            }\n            const extraPropVal = extraProps[prop];\n            if (extraPropVal != null) {\n                if (typeof extraPropVal === 'function') {\n                    return extraPropVal.bind(extraProps);\n                }\n                return extraPropVal;\n            }\n            if (deletedProps.has(prop)) {\n                return undefined;\n            }\n            return originalCtx[prop];\n        },\n        set(_originalCtx, prop, value) {\n            extraProps[prop] = value;\n            return true;\n        },\n        has(originalCtx, prop) {\n            if (waitUntilPromises != null && prop === 'waitUntil') {\n                return true;\n            }\n            if (deletedProps.has(prop)) {\n                return false;\n            }\n            if (prop in extraProps) {\n                return true;\n            }\n            return prop in originalCtx;\n        },\n        defineProperty(_originalCtx, prop, descriptor) {\n            return Reflect.defineProperty(extraProps, prop, descriptor);\n        },\n        deleteProperty(_originalCtx, prop) {\n            if (prop in extraProps) {\n                return Reflect.deleteProperty(extraProps, prop);\n            }\n            deletedProps.add(prop);\n            return true;\n        },\n        ownKeys(originalCtx) {\n            const extraKeys = Reflect.ownKeys(extraProps);\n            const originalKeys = Reflect.ownKeys(originalCtx);\n            const deletedKeys = Array.from(deletedProps);\n            const allKeys = new Set(extraKeys.concat(originalKeys.filter(keys => !deletedKeys.includes(keys))));\n            if (waitUntilPromises != null) {\n                allKeys.add('waitUntil');\n            }\n            return Array.from(allKeys);\n        },\n        getOwnPropertyDescriptor(originalCtx, prop) {\n            if (prop in extraProps) {\n                return Reflect.getOwnPropertyDescriptor(extraProps, prop);\n            }\n            if (deletedProps.has(prop)) {\n                return undefined;\n            }\n            return Reflect.getOwnPropertyDescriptor(originalCtx, prop);\n        },\n    });\n}\nfunction createDeferredPromise() {\n    let resolveFn;\n    let rejectFn;\n    const promise = new Promise(function deferredPromiseExecutor(resolve, reject) {\n        resolveFn = resolve;\n        rejectFn = reject;\n    });\n    return {\n        promise,\n        get resolve() {\n            return resolveFn;\n        },\n        get reject() {\n            return rejectFn;\n        },\n    };\n}\nfunction handleAbortSignalAndPromiseResponse(response$, abortSignal) {\n    if (isPromise(response$) && abortSignal) {\n        const deferred$ = createDeferredPromise();\n        abortSignal.addEventListener('abort', function abortSignalFetchErrorHandler() {\n            deferred$.reject(abortSignal.reason);\n        });\n        response$\n            .then(function fetchSuccessHandler(res) {\n            deferred$.resolve(res);\n        })\n            .catch(function fetchErrorHandler(err) {\n            deferred$.reject(err);\n        });\n        return deferred$.promise;\n    }\n    return response$;\n}\nexports.decompressedResponseMap = new WeakMap();\nconst supportedEncodingsByFetchAPI = new WeakMap();\nfunction getSupportedEncodings(fetchAPI) {\n    let supportedEncodings = supportedEncodingsByFetchAPI.get(fetchAPI);\n    if (!supportedEncodings) {\n        const possibleEncodings = ['deflate', 'gzip', 'deflate-raw', 'br'];\n        if (fetchAPI.DecompressionStream['supportedFormats']) {\n            supportedEncodings = fetchAPI.DecompressionStream['supportedFormats'];\n        }\n        else {\n            supportedEncodings = possibleEncodings.filter(encoding => {\n                // deflate-raw is not supported in Node.js >v20\n                if (globalThis.process?.version?.startsWith('v2') &&\n                    fetchAPI.DecompressionStream === globalThis.DecompressionStream &&\n                    encoding === 'deflate-raw') {\n                    return false;\n                }\n                try {\n                    // eslint-disable-next-line no-new\n                    new fetchAPI.DecompressionStream(encoding);\n                    return true;\n                }\n                catch {\n                    return false;\n                }\n            });\n        }\n        supportedEncodingsByFetchAPI.set(fetchAPI, supportedEncodings);\n    }\n    return supportedEncodings;\n}\nfunction handleResponseDecompression(response, fetchAPI) {\n    const contentEncodingHeader = response?.headers.get('content-encoding');\n    if (!contentEncodingHeader || contentEncodingHeader === 'none') {\n        return response;\n    }\n    if (!response?.body) {\n        return response;\n    }\n    let decompressedResponse = exports.decompressedResponseMap.get(response);\n    if (!decompressedResponse || decompressedResponse.bodyUsed) {\n        let decompressedBody = response.body;\n        const contentEncodings = contentEncodingHeader.split(',');\n        if (!contentEncodings.every(encoding => getSupportedEncodings(fetchAPI).includes(encoding))) {\n            return new fetchAPI.Response(`Unsupported 'Content-Encoding': ${contentEncodingHeader}`, {\n                status: 415,\n                statusText: 'Unsupported Media Type',\n            });\n        }\n        for (const contentEncoding of contentEncodings) {\n            decompressedBody = decompressedBody.pipeThrough(new fetchAPI.DecompressionStream(contentEncoding));\n        }\n        decompressedResponse = new fetchAPI.Response(decompressedBody, response);\n        exports.decompressedResponseMap.set(response, decompressedResponse);\n    }\n    return decompressedResponse;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/cjs/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/cjs/uwebsockets.js":
/*!*************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/cjs/uwebsockets.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isUWSResponse = isUWSResponse;\nexports.getRequestFromUWSRequest = getRequestFromUWSRequest;\nexports.sendResponseToUwsOpts = sendResponseToUwsOpts;\nexports.fakePromise = fakePromise;\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/server/cjs/utils.js\");\nfunction isUWSResponse(res) {\n    return !!res.onData;\n}\nfunction getRequestFromUWSRequest({ req, res, fetchAPI, signal }) {\n    const method = req.getMethod();\n    let duplex;\n    const chunks = [];\n    const pushFns = [\n        (chunk) => {\n            chunks.push(chunk);\n        },\n    ];\n    const push = (chunk) => {\n        for (const pushFn of pushFns) {\n            pushFn(chunk);\n        }\n    };\n    let stopped = false;\n    const stopFns = [\n        () => {\n            stopped = true;\n        },\n    ];\n    const stop = () => {\n        for (const stopFn of stopFns) {\n            stopFn();\n        }\n    };\n    res.onData(function (ab, isLast) {\n        push(Buffer.from(Buffer.from(ab, 0, ab.byteLength)));\n        if (isLast) {\n            stop();\n        }\n    });\n    let getReadableStream;\n    if (method !== 'get' && method !== 'head') {\n        duplex = 'half';\n        signal.addEventListener('abort', () => {\n            stop();\n        });\n        let readableStream;\n        getReadableStream = () => {\n            if (!readableStream) {\n                readableStream = new fetchAPI.ReadableStream({\n                    start(controller) {\n                        for (const chunk of chunks) {\n                            controller.enqueue(chunk);\n                        }\n                        if (stopped) {\n                            controller.close();\n                            return;\n                        }\n                        pushFns.push((chunk) => {\n                            controller.enqueue(chunk);\n                        });\n                        stopFns.push(() => {\n                            if (controller.desiredSize) {\n                                controller.close();\n                            }\n                        });\n                    },\n                });\n            }\n            return readableStream;\n        };\n    }\n    const headers = new fetchAPI.Headers();\n    req.forEach((key, value) => {\n        headers.append(key, value);\n    });\n    let url = `http://localhost${req.getUrl()}`;\n    const query = req.getQuery();\n    if (query) {\n        url += `?${query}`;\n    }\n    let buffer;\n    function getBody() {\n        if (!getReadableStream) {\n            return null;\n        }\n        if (stopped) {\n            return getBufferFromChunks();\n        }\n        return getReadableStream();\n    }\n    const request = new fetchAPI.Request(url, {\n        method,\n        headers,\n        get body() {\n            return getBody();\n        },\n        signal,\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore - not in the TS types yet\n        duplex,\n    });\n    function getBufferFromChunks() {\n        if (!buffer) {\n            buffer = chunks.length === 1 ? chunks[0] : Buffer.concat(chunks);\n        }\n        return buffer;\n    }\n    function collectBuffer() {\n        if (stopped) {\n            return fakePromise(getBufferFromChunks());\n        }\n        return new Promise((resolve, reject) => {\n            try {\n                stopFns.push(() => {\n                    resolve(getBufferFromChunks());\n                });\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    }\n    Object.defineProperties(request, {\n        body: {\n            get() {\n                return getBody();\n            },\n            configurable: true,\n            enumerable: true,\n        },\n        json: {\n            value() {\n                return collectBuffer()\n                    .then(b => b.toString('utf8'))\n                    .then(t => JSON.parse(t));\n            },\n            configurable: true,\n            enumerable: true,\n        },\n        text: {\n            value() {\n                return collectBuffer().then(b => b.toString('utf8'));\n            },\n            configurable: true,\n            enumerable: true,\n        },\n        arrayBuffer: {\n            value() {\n                return collectBuffer();\n            },\n            configurable: true,\n            enumerable: true,\n        },\n    });\n    return request;\n}\nasync function forwardResponseBodyToUWSResponse(uwsResponse, fetchResponse, signal) {\n    for await (const chunk of fetchResponse.body) {\n        if (signal.aborted) {\n            return;\n        }\n        uwsResponse.cork(() => {\n            uwsResponse.write(chunk);\n        });\n    }\n    uwsResponse.cork(() => {\n        uwsResponse.end();\n    });\n}\nfunction sendResponseToUwsOpts(uwsResponse, fetchResponse, signal) {\n    if (!fetchResponse) {\n        uwsResponse.writeStatus('404 Not Found');\n        uwsResponse.end();\n        return;\n    }\n    const bufferOfRes = fetchResponse._buffer;\n    if (signal.aborted) {\n        return;\n    }\n    uwsResponse.cork(() => {\n        uwsResponse.writeStatus(`${fetchResponse.status} ${fetchResponse.statusText}`);\n        for (const [key, value] of fetchResponse.headers) {\n            // content-length causes an error with Node.js's fetch\n            if (key !== 'content-length') {\n                if (key === 'set-cookie') {\n                    const setCookies = fetchResponse.headers.getSetCookie?.();\n                    if (setCookies) {\n                        for (const setCookie of setCookies) {\n                            uwsResponse.writeHeader(key, setCookie);\n                        }\n                        continue;\n                    }\n                }\n                uwsResponse.writeHeader(key, value);\n            }\n        }\n        if (bufferOfRes) {\n            uwsResponse.end(bufferOfRes);\n        }\n    });\n    if (bufferOfRes) {\n        return;\n    }\n    if (!fetchResponse.body) {\n        uwsResponse.end();\n        return;\n    }\n    return forwardResponseBodyToUWSResponse(uwsResponse, fetchResponse, signal);\n}\nfunction fakePromise(value) {\n    if ((0, utils_js_1.isPromise)(value)) {\n        return value;\n    }\n    // Write a fake promise to avoid the promise constructor\n    // being called with `new Promise` in the browser.\n    return {\n        then(resolve) {\n            if (resolve) {\n                const callbackResult = resolve(value);\n                if ((0, utils_js_1.isPromise)(callbackResult)) {\n                    return callbackResult;\n                }\n                return fakePromise(callbackResult);\n            }\n            return this;\n        },\n        catch() {\n            return this;\n        },\n        finally(cb) {\n            if (cb) {\n                const callbackResult = cb();\n                if ((0, utils_js_1.isPromise)(callbackResult)) {\n                    return callbackResult.then(() => value);\n                }\n                return fakePromise(value);\n            }\n            return this;\n        },\n        [Symbol.toStringTag]: 'Promise',\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/cjs/uwebsockets.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Blob.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Blob.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillBlob = void 0;\nexports.hasBufferMethod = hasBufferMethod;\nexports.hasArrayBufferMethod = hasArrayBufferMethod;\nexports.hasBytesMethod = hasBytesMethod;\nexports.hasTextMethod = hasTextMethod;\nexports.hasSizeProperty = hasSizeProperty;\nexports.hasStreamMethod = hasStreamMethod;\nexports.hasBlobSignature = hasBlobSignature;\nexports.isArrayBuffer = isArrayBuffer;\n/* eslint-disable @typescript-eslint/no-unsafe-declaration-merging */\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction getBlobPartAsBuffer(blobPart) {\n    if (typeof blobPart === 'string') {\n        return Buffer.from(blobPart);\n    }\n    else if (Buffer.isBuffer(blobPart)) {\n        return blobPart;\n    }\n    else if ((0, utils_js_1.isArrayBufferView)(blobPart)) {\n        return Buffer.from(blobPart.buffer, blobPart.byteOffset, blobPart.byteLength);\n    }\n    else {\n        return Buffer.from(blobPart);\n    }\n}\nfunction hasBufferMethod(obj) {\n    return obj != null && obj.buffer != null && typeof obj.buffer === 'function';\n}\nfunction hasArrayBufferMethod(obj) {\n    return obj != null && obj.arrayBuffer != null && typeof obj.arrayBuffer === 'function';\n}\nfunction hasBytesMethod(obj) {\n    return obj != null && obj.bytes != null && typeof obj.bytes === 'function';\n}\nfunction hasTextMethod(obj) {\n    return obj != null && obj.text != null && typeof obj.text === 'function';\n}\nfunction hasSizeProperty(obj) {\n    return obj != null && typeof obj.size === 'number';\n}\nfunction hasStreamMethod(obj) {\n    return obj != null && obj.stream != null && typeof obj.stream === 'function';\n}\nfunction hasBlobSignature(obj) {\n    return obj != null && obj[Symbol.toStringTag] === 'Blob';\n}\nfunction isArrayBuffer(obj) {\n    return obj != null && obj.byteLength != null && obj.slice != null;\n}\n// Will be removed after v14 reaches EOL\n// Needed because v14 doesn't have .stream() implemented\nclass PonyfillBlob {\n    blobParts;\n    type;\n    encoding;\n    _size = null;\n    constructor(blobParts = [], options) {\n        this.blobParts = blobParts;\n        this.type = options?.type || 'application/octet-stream';\n        this.encoding = options?.encoding || 'utf8';\n        this._size = options?.size || null;\n        if (blobParts.length === 1 && hasBlobSignature(blobParts[0])) {\n            return blobParts[0];\n        }\n    }\n    _buffer = null;\n    buffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (hasBufferMethod(blobPart)) {\n                return blobPart.buffer().then(buf => {\n                    this._buffer = buf;\n                    return this._buffer;\n                });\n            }\n            if (hasBytesMethod(blobPart)) {\n                return blobPart.bytes().then(bytes => {\n                    this._buffer = Buffer.from(bytes);\n                    return this._buffer;\n                });\n            }\n            if (hasArrayBufferMethod(blobPart)) {\n                return blobPart.arrayBuffer().then(arrayBuf => {\n                    this._buffer = Buffer.from(arrayBuf, undefined, blobPart.size);\n                    return this._buffer;\n                });\n            }\n            this._buffer = getBlobPartAsBuffer(blobPart);\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        const jobs = [];\n        const bufferChunks = this.blobParts.map((blobPart, i) => {\n            if (hasBufferMethod(blobPart)) {\n                jobs.push(blobPart.buffer().then(buf => {\n                    bufferChunks[i] = buf;\n                }));\n                return undefined;\n            }\n            else if (hasArrayBufferMethod(blobPart)) {\n                jobs.push(blobPart.arrayBuffer().then(arrayBuf => {\n                    bufferChunks[i] = Buffer.from(arrayBuf, undefined, blobPart.size);\n                }));\n                return undefined;\n            }\n            else if (hasBytesMethod(blobPart)) {\n                jobs.push(blobPart.bytes().then(bytes => {\n                    bufferChunks[i] = Buffer.from(bytes);\n                }));\n                return undefined;\n            }\n            else {\n                return getBlobPartAsBuffer(blobPart);\n            }\n        });\n        if (jobs.length > 0) {\n            return Promise.all(jobs).then(() => Buffer.concat(bufferChunks, this._size || undefined));\n        }\n        return (0, utils_js_1.fakePromise)(Buffer.concat(bufferChunks, this._size || undefined));\n    }\n    arrayBuffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            if (isArrayBuffer(this.blobParts[0])) {\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (hasArrayBufferMethod(this.blobParts[0])) {\n                return this.blobParts[0].arrayBuffer();\n            }\n        }\n        return this.buffer();\n    }\n    bytes() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            if (Buffer.isBuffer(this.blobParts[0])) {\n                this._buffer = this.blobParts[0];\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (this.blobParts[0] instanceof Uint8Array) {\n                this._buffer = Buffer.from(this.blobParts[0]);\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (hasBytesMethod(this.blobParts[0])) {\n                return this.blobParts[0].bytes();\n            }\n            if (hasBufferMethod(this.blobParts[0])) {\n                return this.blobParts[0].buffer();\n            }\n        }\n        return this.buffer();\n    }\n    _text = null;\n    text() {\n        if (this._text) {\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (typeof blobPart === 'string') {\n                this._text = blobPart;\n                return (0, utils_js_1.fakePromise)(this._text);\n            }\n            if (hasTextMethod(blobPart)) {\n                return blobPart.text().then(text => {\n                    this._text = text;\n                    return this._text;\n                });\n            }\n            const buf = getBlobPartAsBuffer(blobPart);\n            this._text = buf.toString(this.encoding);\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        return this.buffer().then(buf => {\n            this._text = buf.toString(this.encoding);\n            return this._text;\n        });\n    }\n    _json = null;\n    json() {\n        if (this._json) {\n            return (0, utils_js_1.fakePromise)(this._json);\n        }\n        return this.text().then(text => {\n            this._json = JSON.parse(text);\n            return this._json;\n        });\n    }\n    _formData = null;\n    formData() {\n        if (this._formData) {\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        throw new Error('Not implemented');\n    }\n    get size() {\n        if (this._size == null) {\n            this._size = 0;\n            for (const blobPart of this.blobParts) {\n                if (typeof blobPart === 'string') {\n                    this._size += Buffer.byteLength(blobPart);\n                }\n                else if (hasSizeProperty(blobPart)) {\n                    this._size += blobPart.size;\n                }\n                else if ((0, utils_js_1.isArrayBufferView)(blobPart)) {\n                    this._size += blobPart.byteLength;\n                }\n            }\n        }\n        return this._size;\n    }\n    stream() {\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (hasStreamMethod(blobPart)) {\n                return blobPart.stream();\n            }\n            const buf = getBlobPartAsBuffer(blobPart);\n            return new ReadableStream_js_1.PonyfillReadableStream({\n                start: controller => {\n                    controller.enqueue(buf);\n                    controller.close();\n                },\n            });\n        }\n        if (this._buffer != null) {\n            return new ReadableStream_js_1.PonyfillReadableStream({\n                start: controller => {\n                    controller.enqueue(this._buffer);\n                    controller.close();\n                },\n            });\n        }\n        let blobPartIterator;\n        return new ReadableStream_js_1.PonyfillReadableStream({\n            start: controller => {\n                if (this.blobParts.length === 0) {\n                    controller.close();\n                    return;\n                }\n                blobPartIterator = this.blobParts[Symbol.iterator]();\n            },\n            pull: controller => {\n                const { value: blobPart, done } = blobPartIterator.next();\n                if (done) {\n                    controller.close();\n                    return;\n                }\n                if (blobPart) {\n                    if (hasBufferMethod(blobPart)) {\n                        return blobPart.buffer().then(buf => {\n                            controller.enqueue(buf);\n                        });\n                    }\n                    if (hasBytesMethod(blobPart)) {\n                        return blobPart.bytes().then(bytes => {\n                            const buf = Buffer.from(bytes);\n                            controller.enqueue(buf);\n                        });\n                    }\n                    if (hasArrayBufferMethod(blobPart)) {\n                        return blobPart.arrayBuffer().then(arrayBuffer => {\n                            const buf = Buffer.from(arrayBuffer, undefined, blobPart.size);\n                            controller.enqueue(buf);\n                        });\n                    }\n                    const buf = getBlobPartAsBuffer(blobPart);\n                    controller.enqueue(buf);\n                }\n            },\n        });\n    }\n    slice() {\n        throw new Error('Not implemented');\n    }\n}\nexports.PonyfillBlob = PonyfillBlob;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Blob.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Body.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Body.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillBody = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst busboy_1 = tslib_1.__importDefault(__webpack_require__(/*! busboy */ \"(rsc)/./node_modules/busboy/lib/index.js\"));\nconst Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nconst File_js_1 = __webpack_require__(/*! ./File.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/File.js\");\nconst FormData_js_1 = __webpack_require__(/*! ./FormData.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/FormData.js\");\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nvar BodyInitType;\n(function (BodyInitType) {\n    BodyInitType[\"ReadableStream\"] = \"ReadableStream\";\n    BodyInitType[\"Blob\"] = \"Blob\";\n    BodyInitType[\"FormData\"] = \"FormData\";\n    BodyInitType[\"String\"] = \"String\";\n    BodyInitType[\"Readable\"] = \"Readable\";\n    BodyInitType[\"Buffer\"] = \"Buffer\";\n    BodyInitType[\"AsyncIterable\"] = \"AsyncIterable\";\n})(BodyInitType || (BodyInitType = {}));\nclass PonyfillBody {\n    bodyInit;\n    options;\n    bodyUsed = false;\n    contentType = null;\n    contentLength = null;\n    constructor(bodyInit, options = {}) {\n        this.bodyInit = bodyInit;\n        this.options = options;\n        const { bodyFactory, contentType, contentLength, bodyType, buffer } = processBodyInit(bodyInit);\n        this._bodyFactory = bodyFactory;\n        this.contentType = contentType;\n        this.contentLength = contentLength;\n        this.bodyType = bodyType;\n        this._buffer = buffer;\n    }\n    bodyType;\n    _bodyFactory = () => null;\n    _generatedBody = null;\n    _buffer;\n    generateBody() {\n        if (this._generatedBody?.readable?.destroyed && this._buffer) {\n            this._generatedBody.readable = stream_1.Readable.from(this._buffer);\n        }\n        if (this._generatedBody) {\n            return this._generatedBody;\n        }\n        const body = this._bodyFactory();\n        this._generatedBody = body;\n        return body;\n    }\n    handleContentLengthHeader(forceSet = false) {\n        const contentTypeInHeaders = this.headers.get('content-type');\n        if (!contentTypeInHeaders) {\n            if (this.contentType) {\n                this.headers.set('content-type', this.contentType);\n            }\n        }\n        else {\n            this.contentType = contentTypeInHeaders;\n        }\n        const contentLengthInHeaders = this.headers.get('content-length');\n        if (forceSet && this.bodyInit == null && !contentLengthInHeaders) {\n            this.contentLength = 0;\n            this.headers.set('content-length', '0');\n        }\n        if (!contentLengthInHeaders) {\n            if (this.contentLength) {\n                this.headers.set('content-length', this.contentLength.toString());\n            }\n        }\n        else {\n            this.contentLength = parseInt(contentLengthInHeaders, 10);\n        }\n    }\n    get body() {\n        const _body = this.generateBody();\n        if (_body != null) {\n            const ponyfillReadableStream = _body;\n            const readable = _body.readable;\n            return new Proxy(_body.readable, {\n                get(_, prop) {\n                    if (prop in ponyfillReadableStream) {\n                        const ponyfillReadableStreamProp = ponyfillReadableStream[prop];\n                        if (typeof ponyfillReadableStreamProp === 'function') {\n                            return ponyfillReadableStreamProp.bind(ponyfillReadableStream);\n                        }\n                        return ponyfillReadableStreamProp;\n                    }\n                    if (prop in readable) {\n                        const readableProp = readable[prop];\n                        if (typeof readableProp === 'function') {\n                            return readableProp.bind(readable);\n                        }\n                        return readableProp;\n                    }\n                },\n            });\n        }\n        return null;\n    }\n    _chunks = null;\n    _collectChunksFromReadable() {\n        if (this._chunks) {\n            return (0, utils_js_1.fakePromise)(this._chunks);\n        }\n        if (this.bodyType === BodyInitType.AsyncIterable) {\n            const iterator = this.bodyInit[Symbol.asyncIterator]();\n            const collectValue = () => {\n                return iterator.next().then(({ value, done }) => {\n                    this._chunks ||= [];\n                    if (value) {\n                        this._chunks.push(value);\n                    }\n                    if (!done) {\n                        return collectValue();\n                    }\n                    return this._chunks;\n                });\n            };\n            return collectValue();\n        }\n        const _body = this.generateBody();\n        if (!_body) {\n            return (0, utils_js_1.fakePromise)([]);\n        }\n        this._chunks = [];\n        _body.readable.on('data', chunk => {\n            this._chunks.push(chunk);\n        });\n        return new Promise((resolve, reject) => {\n            _body.readable.once('end', () => {\n                resolve(this._chunks);\n            });\n            _body.readable.once('error', e => {\n                reject(e);\n            });\n        });\n    }\n    _blob = null;\n    blob() {\n        if (this._blob) {\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        if (this.bodyType === BodyInitType.Blob) {\n            this._blob = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        if (this._buffer) {\n            this._blob = new Blob_js_1.PonyfillBlob([this._buffer], {\n                type: this.contentType || '',\n                size: this.contentLength,\n            });\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        return this._collectChunksFromReadable().then(chunks => {\n            this._blob = new Blob_js_1.PonyfillBlob(chunks, {\n                type: this.contentType || '',\n                size: this.contentLength,\n            });\n            return this._blob;\n        });\n    }\n    _formData = null;\n    formData(opts) {\n        if (this._formData) {\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        if (this.bodyType === BodyInitType.FormData) {\n            this._formData = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        this._formData = new FormData_js_1.PonyfillFormData();\n        const _body = this.generateBody();\n        if (_body == null) {\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        const formDataLimits = {\n            ...this.options.formDataLimits,\n            ...opts?.formDataLimits,\n        };\n        return new Promise((resolve, reject) => {\n            const bb = (0, busboy_1.default)({\n                headers: {\n                    'content-type': this.contentType || '',\n                },\n                limits: formDataLimits,\n                defParamCharset: 'utf-8',\n            });\n            bb.on('field', (name, value, { nameTruncated, valueTruncated }) => {\n                if (nameTruncated) {\n                    reject(new Error(`Field name size exceeded: ${formDataLimits?.fieldNameSize} bytes`));\n                }\n                if (valueTruncated) {\n                    reject(new Error(`Field value size exceeded: ${formDataLimits?.fieldSize} bytes`));\n                }\n                this._formData.set(name, value);\n            });\n            bb.on('fieldsLimit', () => {\n                reject(new Error(`Fields limit exceeded: ${formDataLimits?.fields}`));\n            });\n            bb.on('file', (name, fileStream, { filename, mimeType }) => {\n                const chunks = [];\n                fileStream.on('limit', () => {\n                    reject(new Error(`File size limit exceeded: ${formDataLimits?.fileSize} bytes`));\n                });\n                fileStream.on('data', chunk => {\n                    chunks.push(chunk);\n                });\n                fileStream.on('close', () => {\n                    if (fileStream.truncated) {\n                        reject(new Error(`File size limit exceeded: ${formDataLimits?.fileSize} bytes`));\n                    }\n                    const file = new File_js_1.PonyfillFile(chunks, filename, { type: mimeType });\n                    this._formData.set(name, file);\n                });\n            });\n            bb.on('filesLimit', () => {\n                reject(new Error(`Files limit exceeded: ${formDataLimits?.files}`));\n            });\n            bb.on('partsLimit', () => {\n                reject(new Error(`Parts limit exceeded: ${formDataLimits?.parts}`));\n            });\n            bb.on('close', () => {\n                resolve(this._formData);\n            });\n            bb.on('error', (err = 'An error occurred while parsing the form data') => {\n                const errMessage = err.message || err.toString();\n                reject(new TypeError(errMessage, err.cause));\n            });\n            _body?.readable.pipe(bb);\n        });\n    }\n    buffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.bodyType === BodyInitType.Blob) {\n            if ((0, Blob_js_1.hasBufferMethod)(this.bodyInit)) {\n                return this.bodyInit.buffer().then(buf => {\n                    this._buffer = buf;\n                    return this._buffer;\n                });\n            }\n            if ((0, Blob_js_1.hasBytesMethod)(this.bodyInit)) {\n                return this.bodyInit.bytes().then(bytes => {\n                    this._buffer = Buffer.from(bytes);\n                    return this._buffer;\n                });\n            }\n            if ((0, Blob_js_1.hasArrayBufferMethod)(this.bodyInit)) {\n                return this.bodyInit.arrayBuffer().then(buf => {\n                    this._buffer = Buffer.from(buf, undefined, buf.byteLength);\n                    return this._buffer;\n                });\n            }\n        }\n        return this._collectChunksFromReadable().then(chunks => {\n            if (chunks.length === 1) {\n                this._buffer = chunks[0];\n                return this._buffer;\n            }\n            this._buffer = Buffer.concat(chunks);\n            return this._buffer;\n        });\n    }\n    bytes() {\n        return this.buffer();\n    }\n    arrayBuffer() {\n        return this.buffer();\n    }\n    _json = null;\n    json() {\n        if (this._json) {\n            return (0, utils_js_1.fakePromise)(this._json);\n        }\n        return this.text().then(text => {\n            try {\n                this._json = JSON.parse(text);\n            }\n            catch (e) {\n                if (e instanceof SyntaxError) {\n                    e.message += `, \"${text}\" is not valid JSON`;\n                }\n                throw e;\n            }\n            return this._json;\n        });\n    }\n    _text = null;\n    text() {\n        if (this._text) {\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        if (this.bodyType === BodyInitType.String) {\n            this._text = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        return this.buffer().then(buffer => {\n            this._text = buffer.toString('utf-8');\n            return this._text;\n        });\n    }\n}\nexports.PonyfillBody = PonyfillBody;\nfunction processBodyInit(bodyInit) {\n    if (bodyInit == null) {\n        return {\n            bodyFactory: () => null,\n            contentType: null,\n            contentLength: null,\n        };\n    }\n    if (typeof bodyInit === 'string') {\n        const buffer = Buffer.from(bodyInit);\n        const contentLength = buffer.byteLength;\n        return {\n            bodyType: BodyInitType.String,\n            contentType: 'text/plain;charset=UTF-8',\n            contentLength,\n            buffer,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(buffer);\n                return new ReadableStream_js_1.PonyfillReadableStream(readable);\n            },\n        };\n    }\n    if (Buffer.isBuffer(bodyInit)) {\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentType: null,\n            contentLength: bodyInit.length,\n            buffer: bodyInit,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(bodyInit);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if ((0, utils_js_1.isArrayBufferView)(bodyInit)) {\n        const buffer = Buffer.from(bodyInit.buffer, bodyInit.byteOffset, bodyInit.byteLength);\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentLength: bodyInit.byteLength,\n            contentType: null,\n            buffer,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(buffer);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if (bodyInit instanceof ReadableStream_js_1.PonyfillReadableStream && bodyInit.readable != null) {\n        return {\n            bodyType: BodyInitType.ReadableStream,\n            bodyFactory: () => bodyInit,\n            contentType: null,\n            contentLength: null,\n        };\n    }\n    if (isBlob(bodyInit)) {\n        return {\n            bodyType: BodyInitType.Blob,\n            contentType: bodyInit.type,\n            contentLength: bodyInit.size,\n            bodyFactory() {\n                return bodyInit.stream();\n            },\n        };\n    }\n    if (bodyInit instanceof ArrayBuffer) {\n        const contentLength = bodyInit.byteLength;\n        const buffer = Buffer.from(bodyInit, undefined, bodyInit.byteLength);\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentType: null,\n            contentLength,\n            buffer,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(buffer);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if (bodyInit instanceof stream_1.Readable) {\n        return {\n            bodyType: BodyInitType.Readable,\n            contentType: null,\n            contentLength: null,\n            bodyFactory() {\n                const body = new ReadableStream_js_1.PonyfillReadableStream(bodyInit);\n                return body;\n            },\n        };\n    }\n    if (isURLSearchParams(bodyInit)) {\n        const contentType = 'application/x-www-form-urlencoded;charset=UTF-8';\n        return {\n            bodyType: BodyInitType.String,\n            contentType,\n            contentLength: null,\n            bodyFactory() {\n                const body = new ReadableStream_js_1.PonyfillReadableStream(stream_1.Readable.from(bodyInit.toString()));\n                return body;\n            },\n        };\n    }\n    if (isFormData(bodyInit)) {\n        const boundary = Math.random().toString(36).substr(2);\n        const contentType = `multipart/form-data; boundary=${boundary}`;\n        return {\n            bodyType: BodyInitType.FormData,\n            contentType,\n            contentLength: null,\n            bodyFactory() {\n                return (0, FormData_js_1.getStreamFromFormData)(bodyInit, boundary);\n            },\n        };\n    }\n    if (isReadableStream(bodyInit)) {\n        return {\n            contentType: null,\n            contentLength: null,\n            bodyFactory() {\n                return new ReadableStream_js_1.PonyfillReadableStream(bodyInit);\n            },\n        };\n    }\n    if (bodyInit[Symbol.iterator] || bodyInit[Symbol.asyncIterator]) {\n        return {\n            contentType: null,\n            contentLength: null,\n            bodyType: BodyInitType.AsyncIterable,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(bodyInit);\n                return new ReadableStream_js_1.PonyfillReadableStream(readable);\n            },\n        };\n    }\n    throw new Error('Unknown body type');\n}\nfunction isFormData(value) {\n    return value?.forEach != null;\n}\nfunction isBlob(value) {\n    return value?.stream != null;\n}\nfunction isURLSearchParams(value) {\n    return value?.sort != null;\n}\nfunction isReadableStream(value) {\n    return value?.getReader != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Body.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillCompressionStream = void 0;\nconst node_zlib_1 = __webpack_require__(/*! node:zlib */ \"node:zlib\");\nconst TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nclass PonyfillCompressionStream extends TransformStream_js_1.PonyfillTransformStream {\n    static supportedFormats = globalThis.process?.version?.startsWith('v2')\n        ? ['gzip', 'deflate', 'br']\n        : ['gzip', 'deflate', 'deflate-raw', 'br'];\n    constructor(compressionFormat) {\n        switch (compressionFormat) {\n            case 'x-gzip':\n            case 'gzip':\n                super((0, node_zlib_1.createGzip)());\n                break;\n            case 'x-deflate':\n            case 'deflate':\n                super((0, node_zlib_1.createDeflate)());\n                break;\n            case 'deflate-raw':\n                super((0, node_zlib_1.createDeflateRaw)());\n                break;\n            case 'br':\n                super((0, node_zlib_1.createBrotliCompress)());\n                break;\n            default:\n                throw new Error(`Unsupported compression format: ${compressionFormat}`);\n        }\n    }\n}\nexports.PonyfillCompressionStream = PonyfillCompressionStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0NvbXByZXNzaW9uU3RyZWFtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlDQUFpQztBQUNqQyxvQkFBb0IsbUJBQU8sQ0FBQyw0QkFBVztBQUN2Qyw2QkFBNkIsbUJBQU8sQ0FBQyxrSUFBc0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLGtCQUFrQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0NvbXByZXNzaW9uU3RyZWFtLmpzPzJkYjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsQ29tcHJlc3Npb25TdHJlYW0gPSB2b2lkIDA7XG5jb25zdCBub2RlX3psaWJfMSA9IHJlcXVpcmUoXCJub2RlOnpsaWJcIik7XG5jb25zdCBUcmFuc2Zvcm1TdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL1RyYW5zZm9ybVN0cmVhbS5qc1wiKTtcbmNsYXNzIFBvbnlmaWxsQ29tcHJlc3Npb25TdHJlYW0gZXh0ZW5kcyBUcmFuc2Zvcm1TdHJlYW1fanNfMS5Qb255ZmlsbFRyYW5zZm9ybVN0cmVhbSB7XG4gICAgc3RhdGljIHN1cHBvcnRlZEZvcm1hdHMgPSBnbG9iYWxUaGlzLnByb2Nlc3M/LnZlcnNpb24/LnN0YXJ0c1dpdGgoJ3YyJylcbiAgICAgICAgPyBbJ2d6aXAnLCAnZGVmbGF0ZScsICdiciddXG4gICAgICAgIDogWydnemlwJywgJ2RlZmxhdGUnLCAnZGVmbGF0ZS1yYXcnLCAnYnInXTtcbiAgICBjb25zdHJ1Y3Rvcihjb21wcmVzc2lvbkZvcm1hdCkge1xuICAgICAgICBzd2l0Y2ggKGNvbXByZXNzaW9uRm9ybWF0KSB7XG4gICAgICAgICAgICBjYXNlICd4LWd6aXAnOlxuICAgICAgICAgICAgY2FzZSAnZ3ppcCc6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZUd6aXApKCkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAneC1kZWZsYXRlJzpcbiAgICAgICAgICAgIGNhc2UgJ2RlZmxhdGUnOlxuICAgICAgICAgICAgICAgIHN1cGVyKCgwLCBub2RlX3psaWJfMS5jcmVhdGVEZWZsYXRlKSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2RlZmxhdGUtcmF3JzpcbiAgICAgICAgICAgICAgICBzdXBlcigoMCwgbm9kZV96bGliXzEuY3JlYXRlRGVmbGF0ZVJhdykoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdicic6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZUJyb3RsaUNvbXByZXNzKSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBjb21wcmVzc2lvbiBmb3JtYXQ6ICR7Y29tcHJlc3Npb25Gb3JtYXR9YCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsQ29tcHJlc3Npb25TdHJlYW0gPSBQb255ZmlsbENvbXByZXNzaW9uU3RyZWFtO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillDecompressionStream = void 0;\nconst node_zlib_1 = __webpack_require__(/*! node:zlib */ \"node:zlib\");\nconst TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nclass PonyfillDecompressionStream extends TransformStream_js_1.PonyfillTransformStream {\n    static supportedFormats = globalThis.process?.version?.startsWith('v2')\n        ? ['gzip', 'deflate', 'br']\n        : ['gzip', 'deflate', 'deflate-raw', 'br'];\n    constructor(compressionFormat) {\n        switch (compressionFormat) {\n            case 'x-gzip':\n            case 'gzip':\n                super((0, node_zlib_1.createGunzip)());\n                break;\n            case 'x-deflate':\n            case 'deflate':\n                super((0, node_zlib_1.createInflate)());\n                break;\n            case 'deflate-raw':\n                super((0, node_zlib_1.createInflateRaw)());\n                break;\n            case 'br':\n                super((0, node_zlib_1.createBrotliDecompress)());\n                break;\n            default:\n                throw new TypeError(`Unsupported compression format: '${compressionFormat}'`);\n        }\n    }\n}\nexports.PonyfillDecompressionStream = PonyfillDecompressionStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0RlY29tcHJlc3Npb25TdHJlYW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUNBQW1DO0FBQ25DLG9CQUFvQixtQkFBTyxDQUFDLDRCQUFXO0FBQ3ZDLDZCQUE2QixtQkFBTyxDQUFDLGtJQUFzQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0Usa0JBQWtCO0FBQzFGO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvc2VydmVyL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvRGVjb21wcmVzc2lvblN0cmVhbS5qcz9lNDViIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbERlY29tcHJlc3Npb25TdHJlYW0gPSB2b2lkIDA7XG5jb25zdCBub2RlX3psaWJfMSA9IHJlcXVpcmUoXCJub2RlOnpsaWJcIik7XG5jb25zdCBUcmFuc2Zvcm1TdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL1RyYW5zZm9ybVN0cmVhbS5qc1wiKTtcbmNsYXNzIFBvbnlmaWxsRGVjb21wcmVzc2lvblN0cmVhbSBleHRlbmRzIFRyYW5zZm9ybVN0cmVhbV9qc18xLlBvbnlmaWxsVHJhbnNmb3JtU3RyZWFtIHtcbiAgICBzdGF0aWMgc3VwcG9ydGVkRm9ybWF0cyA9IGdsb2JhbFRoaXMucHJvY2Vzcz8udmVyc2lvbj8uc3RhcnRzV2l0aCgndjInKVxuICAgICAgICA/IFsnZ3ppcCcsICdkZWZsYXRlJywgJ2JyJ11cbiAgICAgICAgOiBbJ2d6aXAnLCAnZGVmbGF0ZScsICdkZWZsYXRlLXJhdycsICdiciddO1xuICAgIGNvbnN0cnVjdG9yKGNvbXByZXNzaW9uRm9ybWF0KSB7XG4gICAgICAgIHN3aXRjaCAoY29tcHJlc3Npb25Gb3JtYXQpIHtcbiAgICAgICAgICAgIGNhc2UgJ3gtZ3ppcCc6XG4gICAgICAgICAgICBjYXNlICdnemlwJzpcbiAgICAgICAgICAgICAgICBzdXBlcigoMCwgbm9kZV96bGliXzEuY3JlYXRlR3VuemlwKSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3gtZGVmbGF0ZSc6XG4gICAgICAgICAgICBjYXNlICdkZWZsYXRlJzpcbiAgICAgICAgICAgICAgICBzdXBlcigoMCwgbm9kZV96bGliXzEuY3JlYXRlSW5mbGF0ZSkoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdkZWZsYXRlLXJhdyc6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZUluZmxhdGVSYXcpKCkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnYnInOlxuICAgICAgICAgICAgICAgIHN1cGVyKCgwLCBub2RlX3psaWJfMS5jcmVhdGVCcm90bGlEZWNvbXByZXNzKSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgVW5zdXBwb3J0ZWQgY29tcHJlc3Npb24gZm9ybWF0OiAnJHtjb21wcmVzc2lvbkZvcm1hdH0nYCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsRGVjb21wcmVzc2lvblN0cmVhbSA9IFBvbnlmaWxsRGVjb21wcmVzc2lvblN0cmVhbTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/File.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/File.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillFile = void 0;\nconst Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nclass PonyfillFile extends Blob_js_1.PonyfillBlob {\n    name;\n    lastModified;\n    constructor(fileBits, name, options) {\n        super(fileBits, options);\n        this.name = name;\n        this.lastModified = options?.lastModified || Date.now();\n    }\n    webkitRelativePath = '';\n}\nexports.PonyfillFile = PonyfillFile;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0ZpbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLGtCQUFrQixtQkFBTyxDQUFDLDRHQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9zZXJ2ZXIvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9GaWxlLmpzPzE4YWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsRmlsZSA9IHZvaWQgMDtcbmNvbnN0IEJsb2JfanNfMSA9IHJlcXVpcmUoXCIuL0Jsb2IuanNcIik7XG5jbGFzcyBQb255ZmlsbEZpbGUgZXh0ZW5kcyBCbG9iX2pzXzEuUG9ueWZpbGxCbG9iIHtcbiAgICBuYW1lO1xuICAgIGxhc3RNb2RpZmllZDtcbiAgICBjb25zdHJ1Y3RvcihmaWxlQml0cywgbmFtZSwgb3B0aW9ucykge1xuICAgICAgICBzdXBlcihmaWxlQml0cywgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMubGFzdE1vZGlmaWVkID0gb3B0aW9ucz8ubGFzdE1vZGlmaWVkIHx8IERhdGUubm93KCk7XG4gICAgfVxuICAgIHdlYmtpdFJlbGF0aXZlUGF0aCA9ICcnO1xufVxuZXhwb3J0cy5Qb255ZmlsbEZpbGUgPSBQb255ZmlsbEZpbGU7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/File.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/FormData.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/FormData.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillFormData = void 0;\nexports.getStreamFromFormData = getStreamFromFormData;\nconst IteratorObject_js_1 = __webpack_require__(/*! ./IteratorObject.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/IteratorObject.js\");\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nclass PonyfillFormData {\n    map = new Map();\n    append(name, value, fileName) {\n        let values = this.map.get(name);\n        if (!values) {\n            values = [];\n            this.map.set(name, values);\n        }\n        const entry = isBlob(value)\n            ? getNormalizedFile(name, value, fileName)\n            : value;\n        values.push(entry);\n    }\n    delete(name) {\n        this.map.delete(name);\n    }\n    get(name) {\n        const values = this.map.get(name);\n        return values ? values[0] : null;\n    }\n    getAll(name) {\n        return this.map.get(name) || [];\n    }\n    has(name) {\n        return this.map.has(name);\n    }\n    set(name, value, fileName) {\n        const entry = isBlob(value)\n            ? getNormalizedFile(name, value, fileName)\n            : value;\n        this.map.set(name, [entry]);\n    }\n    [Symbol.iterator]() {\n        return this._entries();\n    }\n    *_entries() {\n        for (const [key, values] of this.map) {\n            for (const value of values) {\n                yield [key, value];\n            }\n        }\n    }\n    entries() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._entries(), 'FormDataIterator');\n    }\n    _keys() {\n        return this.map.keys();\n    }\n    keys() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._keys(), 'FormDataIterator');\n    }\n    *_values() {\n        for (const values of this.map.values()) {\n            for (const value of values) {\n                yield value;\n            }\n        }\n    }\n    values() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._values(), 'FormDataIterator');\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key, this);\n        }\n    }\n}\nexports.PonyfillFormData = PonyfillFormData;\nfunction getStreamFromFormData(formData, boundary = '---') {\n    const entries = [];\n    let sentInitialHeader = false;\n    return new ReadableStream_js_1.PonyfillReadableStream({\n        start: controller => {\n            formData.forEach((value, key) => {\n                if (!sentInitialHeader) {\n                    controller.enqueue(Buffer.from(`--${boundary}\\r\\n`));\n                    sentInitialHeader = true;\n                }\n                entries.push([key, value]);\n            });\n            if (!sentInitialHeader) {\n                controller.enqueue(Buffer.from(`--${boundary}--\\r\\n`));\n                controller.close();\n            }\n        },\n        pull: async (controller) => {\n            const entry = entries.shift();\n            if (entry) {\n                const [key, value] = entry;\n                if (typeof value === 'string') {\n                    controller.enqueue(Buffer.from(`Content-Disposition: form-data; name=\"${key}\"\\r\\n\\r\\n`));\n                    controller.enqueue(Buffer.from(value));\n                }\n                else {\n                    let filenamePart = '';\n                    if (value.name) {\n                        filenamePart = `; filename=\"${value.name}\"`;\n                    }\n                    controller.enqueue(Buffer.from(`Content-Disposition: form-data; name=\"${key}\"${filenamePart}\\r\\n`));\n                    controller.enqueue(Buffer.from(`Content-Type: ${value.type || 'application/octet-stream'}\\r\\n\\r\\n`));\n                    const entryStream = value.stream();\n                    for await (const chunk of entryStream) {\n                        controller.enqueue(chunk);\n                    }\n                }\n                if (entries.length === 0) {\n                    controller.enqueue(Buffer.from(`\\r\\n--${boundary}--\\r\\n`));\n                    controller.close();\n                }\n                else {\n                    controller.enqueue(Buffer.from(`\\r\\n--${boundary}\\r\\n`));\n                }\n            }\n            else {\n                controller.enqueue(Buffer.from(`\\r\\n--${boundary}--\\r\\n`));\n                controller.close();\n            }\n        },\n    });\n}\nfunction getNormalizedFile(name, blob, fileName) {\n    Object.defineProperty(blob, 'name', {\n        configurable: true,\n        enumerable: true,\n        value: fileName || blob.name || name,\n    });\n    return blob;\n}\nfunction isBlob(value) {\n    return value?.arrayBuffer != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/FormData.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Headers.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Headers.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillHeaders = void 0;\nexports.isHeadersLike = isHeadersLike;\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst IteratorObject_js_1 = __webpack_require__(/*! ./IteratorObject.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/IteratorObject.js\");\nfunction isHeadersLike(headers) {\n    return headers?.get && headers?.forEach;\n}\nclass PonyfillHeaders {\n    headersInit;\n    _map;\n    objectNormalizedKeysOfHeadersInit = [];\n    objectOriginalKeysOfHeadersInit = [];\n    _setCookies = [];\n    constructor(headersInit) {\n        this.headersInit = headersInit;\n    }\n    // perf: we don't need to build `this.map` for Requests, as we can access the headers directly\n    _get(key) {\n        const normalized = key.toLowerCase();\n        if (normalized === 'set-cookie') {\n            return this._setCookies.join(', ');\n        }\n        // If the map is built, reuse it\n        if (this._map) {\n            return this._map.get(normalized) || null;\n        }\n        // If the map is not built, try to get the value from the this.headersInit\n        if (this.headersInit == null) {\n            return null;\n        }\n        if (Array.isArray(this.headersInit)) {\n            return this.headersInit.find(header => header[0].toLowerCase() === normalized)?.[1] || null;\n        }\n        else if (isHeadersLike(this.headersInit)) {\n            return this.headersInit.get(normalized);\n        }\n        else {\n            const initValue = this.headersInit[key] || this.headersInit[normalized];\n            if (initValue != null) {\n                return initValue;\n            }\n            if (!this.objectNormalizedKeysOfHeadersInit.length) {\n                Object.keys(this.headersInit).forEach(k => {\n                    this.objectOriginalKeysOfHeadersInit.push(k);\n                    this.objectNormalizedKeysOfHeadersInit.push(k.toLowerCase());\n                });\n            }\n            const index = this.objectNormalizedKeysOfHeadersInit.indexOf(normalized);\n            if (index === -1) {\n                return null;\n            }\n            const originalKey = this.objectOriginalKeysOfHeadersInit[index];\n            return this.headersInit[originalKey];\n        }\n    }\n    // perf: Build the map of headers lazily, only when we need to access all headers or write to it.\n    // I could do a getter here, but I'm too lazy to type `getter`.\n    getMap() {\n        if (!this._map) {\n            if (this.headersInit != null) {\n                if (Array.isArray(this.headersInit)) {\n                    this._map = new Map();\n                    this.headersInit.forEach(([key, value]) => {\n                        const normalizedKey = key.toLowerCase();\n                        if (normalizedKey === 'set-cookie') {\n                            this._setCookies.push(value);\n                            return;\n                        }\n                        this._map.set(normalizedKey, value);\n                    });\n                }\n                else if (isHeadersLike(this.headersInit)) {\n                    this._map = new Map();\n                    this.headersInit.forEach((value, key) => {\n                        if (key === 'set-cookie') {\n                            this._setCookies.push(value);\n                            return;\n                        }\n                        this._map.set(key, value);\n                    });\n                }\n                else {\n                    this._map = new Map();\n                    for (const initKey in this.headersInit) {\n                        const initValue = this.headersInit[initKey];\n                        if (initValue != null) {\n                            const normalizedKey = initKey.toLowerCase();\n                            if (normalizedKey === 'set-cookie') {\n                                this._setCookies.push(initValue);\n                                continue;\n                            }\n                            this._map.set(normalizedKey, initValue);\n                        }\n                    }\n                }\n            }\n            else {\n                this._map = new Map();\n            }\n        }\n        return this._map;\n    }\n    append(name, value) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies.push(value);\n            return;\n        }\n        const existingValue = this.getMap().get(key);\n        const finalValue = existingValue ? `${existingValue}, ${value}` : value;\n        this.getMap().set(key, finalValue);\n    }\n    get(name) {\n        const value = this._get(name);\n        if (value == null) {\n            return null;\n        }\n        return value;\n    }\n    has(name) {\n        if (name === 'set-cookie') {\n            return this._setCookies.length > 0;\n        }\n        return !!this._get(name); // we might need to check if header exists and not just check if it's not nullable\n    }\n    set(name, value) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies = [value];\n            return;\n        }\n        this.getMap().set(key, value);\n    }\n    delete(name) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies = [];\n            return;\n        }\n        this.getMap().delete(key);\n    }\n    forEach(callback) {\n        this._setCookies.forEach(setCookie => {\n            callback(setCookie, 'set-cookie', this);\n        });\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    this.headersInit.forEach(([key, value]) => {\n                        callback(value, key, this);\n                    });\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    this.headersInit.forEach(callback);\n                    return;\n                }\n                Object.entries(this.headersInit).forEach(([key, value]) => {\n                    if (value != null) {\n                        callback(value, key, this);\n                    }\n                });\n            }\n            return;\n        }\n        this.getMap().forEach((value, key) => {\n            callback(value, key, this);\n        });\n    }\n    *_keys() {\n        if (this._setCookies.length) {\n            yield 'set-cookie';\n        }\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit.map(([key]) => key)[Symbol.iterator]();\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.keys();\n                    return;\n                }\n                yield* Object.keys(this.headersInit)[Symbol.iterator]();\n                return;\n            }\n        }\n        yield* this.getMap().keys();\n    }\n    keys() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._keys(), 'HeadersIterator');\n    }\n    *_values() {\n        yield* this._setCookies;\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit.map(([, value]) => value)[Symbol.iterator]();\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.values();\n                    return;\n                }\n                yield* Object.values(this.headersInit)[Symbol.iterator]();\n                return;\n            }\n        }\n        yield* this.getMap().values();\n    }\n    values() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._values(), 'HeadersIterator');\n    }\n    *_entries() {\n        yield* this._setCookies.map(cookie => ['set-cookie', cookie]);\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit;\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.entries();\n                    return;\n                }\n                yield* Object.entries(this.headersInit);\n                return;\n            }\n        }\n        yield* this.getMap().entries();\n    }\n    entries() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._entries(), 'HeadersIterator');\n    }\n    getSetCookie() {\n        return this._setCookies;\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        const record = {};\n        this.forEach((value, key) => {\n            if (key === 'set-cookie') {\n                record['set-cookie'] = this._setCookies;\n            }\n            else {\n                record[key] = value.includes(',') ? value.split(',').map(el => el.trim()) : value;\n            }\n        });\n        return `Headers ${(0, util_1.inspect)(record)}`;\n    }\n}\nexports.PonyfillHeaders = PonyfillHeaders;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Headers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/IteratorObject.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/IteratorObject.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillIteratorObject = void 0;\nconst node_util_1 = __webpack_require__(/*! node:util */ \"node:util\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nclass PonyfillIteratorObject {\n    iterableIterator;\n    [Symbol.toStringTag] = 'IteratorObject';\n    constructor(iterableIterator, className) {\n        this.iterableIterator = iterableIterator;\n        this[Symbol.toStringTag] = className;\n    }\n    *map(callbackfn) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            yield callbackfn(value, index++);\n        }\n        return undefined;\n    }\n    *filter(callbackfn) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            if (callbackfn(value, index++)) {\n                yield value;\n            }\n        }\n        return undefined;\n    }\n    reduce(callbackfn, initialValue) {\n        let index = 0;\n        let accumulator = initialValue;\n        for (const value of this.iterableIterator) {\n            accumulator = callbackfn(accumulator, value, index++);\n        }\n        return accumulator;\n    }\n    forEach(callbackfn) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            callbackfn(value, index++);\n        }\n    }\n    *take(limit) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            if (index >= limit) {\n                break;\n            }\n            yield value;\n            index++;\n        }\n        return undefined;\n    }\n    *drop(count) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            if (index >= count) {\n                yield value;\n            }\n            index++;\n        }\n        return undefined;\n    }\n    *flatMap(callback) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            const iteratorOrIterable = callback(value, index++);\n            if ((0, utils_js_1.isIterable)(iteratorOrIterable)) {\n                for (const innerValue of iteratorOrIterable) {\n                    yield innerValue;\n                }\n            }\n            else {\n                for (const innerValue of {\n                    [Symbol.iterator]: () => iteratorOrIterable,\n                }) {\n                    yield innerValue;\n                }\n            }\n        }\n        return undefined;\n    }\n    some(predicate) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            if (predicate(value, index++)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    every(predicate) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            if (!predicate(value, index++)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    find(predicate) {\n        let index = 0;\n        for (const value of this.iterableIterator) {\n            if (predicate(value, index++)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    toArray() {\n        return Array.from(this.iterableIterator);\n    }\n    [Symbol.dispose]() {\n        if (typeof this.iterableIterator.return === 'function') {\n            this.iterableIterator.return();\n        }\n    }\n    next(...[value]) {\n        return this.iterableIterator.next(value);\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        const record = {};\n        this.forEach((value, key) => {\n            const inspectedValue = (0, node_util_1.inspect)(value);\n            record[key] = inspectedValue.includes(',')\n                ? inspectedValue.split(',').map(el => el.trim())\n                : inspectedValue;\n        });\n        return `${this[Symbol.toStringTag]} ${(0, node_util_1.inspect)(record)}`;\n    }\n}\nexports.PonyfillIteratorObject = PonyfillIteratorObject;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0l0ZXJhdG9yT2JqZWN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDhCQUE4QjtBQUM5QixvQkFBb0IsbUJBQU8sQ0FBQyw0QkFBVztBQUN2QyxtQkFBbUIsbUJBQU8sQ0FBQyw4R0FBWTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Qsa0JBQWtCLDBCQUEwQixFQUFFLGlDQUFpQztBQUMvRTtBQUNBO0FBQ0EsOEJBQThCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9zZXJ2ZXIvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9JdGVyYXRvck9iamVjdC5qcz85ZjhhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbEl0ZXJhdG9yT2JqZWN0ID0gdm9pZCAwO1xuY29uc3Qgbm9kZV91dGlsXzEgPSByZXF1aXJlKFwibm9kZTp1dGlsXCIpO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xuY2xhc3MgUG9ueWZpbGxJdGVyYXRvck9iamVjdCB7XG4gICAgaXRlcmFibGVJdGVyYXRvcjtcbiAgICBbU3ltYm9sLnRvU3RyaW5nVGFnXSA9ICdJdGVyYXRvck9iamVjdCc7XG4gICAgY29uc3RydWN0b3IoaXRlcmFibGVJdGVyYXRvciwgY2xhc3NOYW1lKSB7XG4gICAgICAgIHRoaXMuaXRlcmFibGVJdGVyYXRvciA9IGl0ZXJhYmxlSXRlcmF0b3I7XG4gICAgICAgIHRoaXNbU3ltYm9sLnRvU3RyaW5nVGFnXSA9IGNsYXNzTmFtZTtcbiAgICB9XG4gICAgKm1hcChjYWxsYmFja2ZuKSB7XG4gICAgICAgIGxldCBpbmRleCA9IDA7XG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdGhpcy5pdGVyYWJsZUl0ZXJhdG9yKSB7XG4gICAgICAgICAgICB5aWVsZCBjYWxsYmFja2ZuKHZhbHVlLCBpbmRleCsrKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICAqZmlsdGVyKGNhbGxiYWNrZm4pIHtcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB0aGlzLml0ZXJhYmxlSXRlcmF0b3IpIHtcbiAgICAgICAgICAgIGlmIChjYWxsYmFja2ZuKHZhbHVlLCBpbmRleCsrKSkge1xuICAgICAgICAgICAgICAgIHlpZWxkIHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJlZHVjZShjYWxsYmFja2ZuLCBpbml0aWFsVmFsdWUpIHtcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgbGV0IGFjY3VtdWxhdG9yID0gaW5pdGlhbFZhbHVlO1xuICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIHRoaXMuaXRlcmFibGVJdGVyYXRvcikge1xuICAgICAgICAgICAgYWNjdW11bGF0b3IgPSBjYWxsYmFja2ZuKGFjY3VtdWxhdG9yLCB2YWx1ZSwgaW5kZXgrKyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFjY3VtdWxhdG9yO1xuICAgIH1cbiAgICBmb3JFYWNoKGNhbGxiYWNrZm4pIHtcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB0aGlzLml0ZXJhYmxlSXRlcmF0b3IpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrZm4odmFsdWUsIGluZGV4KyspO1xuICAgICAgICB9XG4gICAgfVxuICAgICp0YWtlKGxpbWl0KSB7XG4gICAgICAgIGxldCBpbmRleCA9IDA7XG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdGhpcy5pdGVyYWJsZUl0ZXJhdG9yKSB7XG4gICAgICAgICAgICBpZiAoaW5kZXggPj0gbGltaXQpIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHlpZWxkIHZhbHVlO1xuICAgICAgICAgICAgaW5kZXgrKztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICAqZHJvcChjb3VudCkge1xuICAgICAgICBsZXQgaW5kZXggPSAwO1xuICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIHRoaXMuaXRlcmFibGVJdGVyYXRvcikge1xuICAgICAgICAgICAgaWYgKGluZGV4ID49IGNvdW50KSB7XG4gICAgICAgICAgICAgICAgeWllbGQgdmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpbmRleCsrO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgICpmbGF0TWFwKGNhbGxiYWNrKSB7XG4gICAgICAgIGxldCBpbmRleCA9IDA7XG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdGhpcy5pdGVyYWJsZUl0ZXJhdG9yKSB7XG4gICAgICAgICAgICBjb25zdCBpdGVyYXRvck9ySXRlcmFibGUgPSBjYWxsYmFjayh2YWx1ZSwgaW5kZXgrKyk7XG4gICAgICAgICAgICBpZiAoKDAsIHV0aWxzX2pzXzEuaXNJdGVyYWJsZSkoaXRlcmF0b3JPckl0ZXJhYmxlKSkge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgaW5uZXJWYWx1ZSBvZiBpdGVyYXRvck9ySXRlcmFibGUpIHtcbiAgICAgICAgICAgICAgICAgICAgeWllbGQgaW5uZXJWYWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGlubmVyVmFsdWUgb2Yge1xuICAgICAgICAgICAgICAgICAgICBbU3ltYm9sLml0ZXJhdG9yXTogKCkgPT4gaXRlcmF0b3JPckl0ZXJhYmxlLFxuICAgICAgICAgICAgICAgIH0pIHtcbiAgICAgICAgICAgICAgICAgICAgeWllbGQgaW5uZXJWYWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgc29tZShwcmVkaWNhdGUpIHtcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB0aGlzLml0ZXJhYmxlSXRlcmF0b3IpIHtcbiAgICAgICAgICAgIGlmIChwcmVkaWNhdGUodmFsdWUsIGluZGV4KyspKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBldmVyeShwcmVkaWNhdGUpIHtcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB0aGlzLml0ZXJhYmxlSXRlcmF0b3IpIHtcbiAgICAgICAgICAgIGlmICghcHJlZGljYXRlKHZhbHVlLCBpbmRleCsrKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgZmluZChwcmVkaWNhdGUpIHtcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB0aGlzLml0ZXJhYmxlSXRlcmF0b3IpIHtcbiAgICAgICAgICAgIGlmIChwcmVkaWNhdGUodmFsdWUsIGluZGV4KyspKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHRvQXJyYXkoKSB7XG4gICAgICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMuaXRlcmFibGVJdGVyYXRvcik7XG4gICAgfVxuICAgIFtTeW1ib2wuZGlzcG9zZV0oKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5pdGVyYWJsZUl0ZXJhdG9yLnJldHVybiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdGhpcy5pdGVyYWJsZUl0ZXJhdG9yLnJldHVybigpO1xuICAgICAgICB9XG4gICAgfVxuICAgIG5leHQoLi4uW3ZhbHVlXSkge1xuICAgICAgICByZXR1cm4gdGhpcy5pdGVyYWJsZUl0ZXJhdG9yLm5leHQodmFsdWUpO1xuICAgIH1cbiAgICBbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIFtTeW1ib2wuZm9yKCdub2RlanMudXRpbC5pbnNwZWN0LmN1c3RvbScpXSgpIHtcbiAgICAgICAgY29uc3QgcmVjb3JkID0ge307XG4gICAgICAgIHRoaXMuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaW5zcGVjdGVkVmFsdWUgPSAoMCwgbm9kZV91dGlsXzEuaW5zcGVjdCkodmFsdWUpO1xuICAgICAgICAgICAgcmVjb3JkW2tleV0gPSBpbnNwZWN0ZWRWYWx1ZS5pbmNsdWRlcygnLCcpXG4gICAgICAgICAgICAgICAgPyBpbnNwZWN0ZWRWYWx1ZS5zcGxpdCgnLCcpLm1hcChlbCA9PiBlbC50cmltKCkpXG4gICAgICAgICAgICAgICAgOiBpbnNwZWN0ZWRWYWx1ZTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBgJHt0aGlzW1N5bWJvbC50b1N0cmluZ1RhZ119ICR7KDAsIG5vZGVfdXRpbF8xLmluc3BlY3QpKHJlY29yZCl9YDtcbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsSXRlcmF0b3JPYmplY3QgPSBQb255ZmlsbEl0ZXJhdG9yT2JqZWN0O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/IteratorObject.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillReadableStream = void 0;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction createController(desiredSize, readable) {\n    let chunks = [];\n    let _closed = false;\n    let flushed = false;\n    return {\n        desiredSize,\n        enqueue(chunk) {\n            const buf = typeof chunk === 'string' ? Buffer.from(chunk) : chunk;\n            if (!flushed) {\n                chunks.push(buf);\n            }\n            else {\n                readable.push(buf);\n            }\n        },\n        close() {\n            if (chunks.length > 0) {\n                this._flush();\n            }\n            readable.push(null);\n            _closed = true;\n        },\n        error(error) {\n            if (chunks.length > 0) {\n                this._flush();\n            }\n            readable.destroy(error);\n        },\n        get _closed() {\n            return _closed;\n        },\n        _flush() {\n            flushed = true;\n            if (chunks.length > 0) {\n                const concatenated = chunks.length > 1 ? Buffer.concat(chunks) : chunks[0];\n                readable.push(concatenated);\n                chunks = [];\n            }\n        },\n    };\n}\nfunction isNodeReadable(obj) {\n    return obj?.read != null;\n}\nfunction isReadableStream(obj) {\n    return obj?.getReader != null;\n}\nclass PonyfillReadableStream {\n    readable;\n    constructor(underlyingSource) {\n        if (underlyingSource instanceof PonyfillReadableStream && underlyingSource.readable != null) {\n            this.readable = underlyingSource.readable;\n        }\n        else if (isNodeReadable(underlyingSource)) {\n            this.readable = underlyingSource;\n        }\n        else if (isReadableStream(underlyingSource)) {\n            this.readable = stream_1.Readable.fromWeb(underlyingSource);\n        }\n        else {\n            let started = false;\n            let ongoing = false;\n            this.readable = new stream_1.Readable({\n                read(desiredSize) {\n                    if (ongoing) {\n                        return;\n                    }\n                    ongoing = true;\n                    return Promise.resolve().then(async () => {\n                        if (!started) {\n                            const controller = createController(desiredSize, this);\n                            started = true;\n                            await underlyingSource?.start?.(controller);\n                            controller._flush();\n                            if (controller._closed) {\n                                return;\n                            }\n                        }\n                        const controller = createController(desiredSize, this);\n                        await underlyingSource?.pull?.(controller);\n                        controller._flush();\n                        ongoing = false;\n                    });\n                },\n                destroy(err, callback) {\n                    if (underlyingSource?.cancel) {\n                        try {\n                            const res$ = underlyingSource.cancel(err);\n                            if (res$?.then) {\n                                return res$.then(() => {\n                                    callback(null);\n                                }, err => {\n                                    callback(err);\n                                });\n                            }\n                        }\n                        catch (err) {\n                            callback(err);\n                            return;\n                        }\n                    }\n                    callback(null);\n                },\n            });\n        }\n    }\n    cancel(reason) {\n        this.readable.destroy(reason);\n        return new Promise(resolve => this.readable.once('end', resolve));\n    }\n    locked = false;\n    getReader(_options) {\n        const iterator = this.readable[Symbol.asyncIterator]();\n        this.locked = true;\n        return {\n            read() {\n                return iterator.next();\n            },\n            releaseLock: () => {\n                if (iterator.return) {\n                    const retResult$ = iterator.return();\n                    if (retResult$.then) {\n                        retResult$.then(() => {\n                            this.locked = false;\n                        });\n                        return;\n                    }\n                }\n                this.locked = false;\n            },\n            cancel: reason => {\n                if (iterator.return) {\n                    const retResult$ = iterator.return(reason);\n                    if (retResult$.then) {\n                        return retResult$.then(() => {\n                            this.locked = false;\n                        });\n                    }\n                }\n                this.locked = false;\n                return (0, utils_js_1.fakePromise)(undefined);\n            },\n            closed: new Promise((resolve, reject) => {\n                this.readable.once('end', resolve);\n                this.readable.once('error', reject);\n            }),\n        };\n    }\n    [Symbol.asyncIterator]() {\n        return this.readable[Symbol.asyncIterator]();\n    }\n    tee() {\n        throw new Error('Not implemented');\n    }\n    pipeTo(destination) {\n        if (isPonyfillWritableStream(destination)) {\n            return new Promise((resolve, reject) => {\n                this.readable.pipe(destination.writable);\n                destination.writable.once('finish', resolve);\n                destination.writable.once('error', reject);\n            });\n        }\n        else {\n            const writer = destination.getWriter();\n            return Promise.resolve().then(async () => {\n                try {\n                    for await (const chunk of this) {\n                        await writer.write(chunk);\n                    }\n                    await writer.close();\n                }\n                catch (err) {\n                    await writer.abort(err);\n                }\n            });\n        }\n    }\n    pipeThrough({ writable, readable, }) {\n        this.pipeTo(writable);\n        return readable;\n    }\n    static [Symbol.hasInstance](instance) {\n        return isReadableStream(instance);\n    }\n}\nexports.PonyfillReadableStream = PonyfillReadableStream;\nfunction isPonyfillWritableStream(obj) {\n    return obj?.writable != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Request.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Request.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillRequest = void 0;\nconst http_1 = __webpack_require__(/*! http */ \"http\");\nconst https_1 = __webpack_require__(/*! https */ \"https\");\nconst Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nconst Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nfunction isRequest(input) {\n    return input[Symbol.toStringTag] === 'Request';\n}\nfunction isURL(obj) {\n    return obj?.href != null;\n}\nclass PonyfillRequest extends Body_js_1.PonyfillBody {\n    constructor(input, options) {\n        let url;\n        let bodyInit = null;\n        let requestInit;\n        if (typeof input === 'string') {\n            url = input;\n        }\n        else if (isURL(input)) {\n            url = input.toString();\n        }\n        else if (isRequest(input)) {\n            url = input.url;\n            bodyInit = input.body;\n            requestInit = input;\n        }\n        if (options != null) {\n            bodyInit = options.body || null;\n            requestInit = options;\n        }\n        super(bodyInit, options);\n        this.cache = requestInit?.cache || 'default';\n        this.credentials = requestInit?.credentials || 'same-origin';\n        this.headers =\n            requestInit?.headers && (0, Headers_js_1.isHeadersLike)(requestInit.headers)\n                ? requestInit.headers\n                : new Headers_js_1.PonyfillHeaders(requestInit?.headers);\n        this.integrity = requestInit?.integrity || '';\n        this.keepalive = requestInit?.keepalive != null ? requestInit?.keepalive : false;\n        this.method = requestInit?.method?.toUpperCase() || 'GET';\n        this.mode = requestInit?.mode || 'cors';\n        this.redirect = requestInit?.redirect || 'follow';\n        this.referrer = requestInit?.referrer || 'about:client';\n        this.referrerPolicy = requestInit?.referrerPolicy || 'no-referrer';\n        this._signal = requestInit?.signal;\n        this.headersSerializer = requestInit?.headersSerializer;\n        this.duplex = requestInit?.duplex || 'half';\n        this.url = url || '';\n        this.destination = 'document';\n        this.priority = 'auto';\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.handleContentLengthHeader(true);\n        }\n        if (requestInit?.agent != null) {\n            if (requestInit.agent === false) {\n                this.agent = false;\n            }\n            else if (this.url.startsWith('http:/') && requestInit.agent instanceof http_1.Agent) {\n                this.agent = requestInit.agent;\n            }\n            else if (this.url.startsWith('https:/') && requestInit.agent instanceof https_1.Agent) {\n                this.agent = requestInit.agent;\n            }\n        }\n    }\n    headersSerializer;\n    cache;\n    credentials;\n    destination;\n    headers;\n    integrity;\n    keepalive;\n    method;\n    mode;\n    priority;\n    redirect;\n    referrer;\n    referrerPolicy;\n    url;\n    duplex;\n    agent;\n    _signal;\n    get signal() {\n        // Create a new signal only if needed\n        // Because the creation of signal is expensive\n        if (!this._signal) {\n            this._signal = new AbortController().signal;\n        }\n        return this._signal;\n    }\n    clone() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'Request';\n}\nexports.PonyfillRequest = PonyfillRequest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1JlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLGVBQWUsbUJBQU8sQ0FBQyxrQkFBTTtBQUM3QixnQkFBZ0IsbUJBQU8sQ0FBQyxvQkFBTztBQUMvQixrQkFBa0IsbUJBQU8sQ0FBQyw0R0FBVztBQUNyQyxxQkFBcUIsbUJBQU8sQ0FBQyxrSEFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvc2VydmVyL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvUmVxdWVzdC5qcz8xZDdlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFJlcXVlc3QgPSB2b2lkIDA7XG5jb25zdCBodHRwXzEgPSByZXF1aXJlKFwiaHR0cFwiKTtcbmNvbnN0IGh0dHBzXzEgPSByZXF1aXJlKFwiaHR0cHNcIik7XG5jb25zdCBCb2R5X2pzXzEgPSByZXF1aXJlKFwiLi9Cb2R5LmpzXCIpO1xuY29uc3QgSGVhZGVyc19qc18xID0gcmVxdWlyZShcIi4vSGVhZGVycy5qc1wiKTtcbmZ1bmN0aW9uIGlzUmVxdWVzdChpbnB1dCkge1xuICAgIHJldHVybiBpbnB1dFtTeW1ib2wudG9TdHJpbmdUYWddID09PSAnUmVxdWVzdCc7XG59XG5mdW5jdGlvbiBpc1VSTChvYmopIHtcbiAgICByZXR1cm4gb2JqPy5ocmVmICE9IG51bGw7XG59XG5jbGFzcyBQb255ZmlsbFJlcXVlc3QgZXh0ZW5kcyBCb2R5X2pzXzEuUG9ueWZpbGxCb2R5IHtcbiAgICBjb25zdHJ1Y3RvcihpbnB1dCwgb3B0aW9ucykge1xuICAgICAgICBsZXQgdXJsO1xuICAgICAgICBsZXQgYm9keUluaXQgPSBudWxsO1xuICAgICAgICBsZXQgcmVxdWVzdEluaXQ7XG4gICAgICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB1cmwgPSBpbnB1dDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc1VSTChpbnB1dCkpIHtcbiAgICAgICAgICAgIHVybCA9IGlucHV0LnRvU3RyaW5nKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNSZXF1ZXN0KGlucHV0KSkge1xuICAgICAgICAgICAgdXJsID0gaW5wdXQudXJsO1xuICAgICAgICAgICAgYm9keUluaXQgPSBpbnB1dC5ib2R5O1xuICAgICAgICAgICAgcmVxdWVzdEluaXQgPSBpbnB1dDtcbiAgICAgICAgfVxuICAgICAgICBpZiAob3B0aW9ucyAhPSBudWxsKSB7XG4gICAgICAgICAgICBib2R5SW5pdCA9IG9wdGlvbnMuYm9keSB8fCBudWxsO1xuICAgICAgICAgICAgcmVxdWVzdEluaXQgPSBvcHRpb25zO1xuICAgICAgICB9XG4gICAgICAgIHN1cGVyKGJvZHlJbml0LCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5jYWNoZSA9IHJlcXVlc3RJbml0Py5jYWNoZSB8fCAnZGVmYXVsdCc7XG4gICAgICAgIHRoaXMuY3JlZGVudGlhbHMgPSByZXF1ZXN0SW5pdD8uY3JlZGVudGlhbHMgfHwgJ3NhbWUtb3JpZ2luJztcbiAgICAgICAgdGhpcy5oZWFkZXJzID1cbiAgICAgICAgICAgIHJlcXVlc3RJbml0Py5oZWFkZXJzICYmICgwLCBIZWFkZXJzX2pzXzEuaXNIZWFkZXJzTGlrZSkocmVxdWVzdEluaXQuaGVhZGVycylcbiAgICAgICAgICAgICAgICA/IHJlcXVlc3RJbml0LmhlYWRlcnNcbiAgICAgICAgICAgICAgICA6IG5ldyBIZWFkZXJzX2pzXzEuUG9ueWZpbGxIZWFkZXJzKHJlcXVlc3RJbml0Py5oZWFkZXJzKTtcbiAgICAgICAgdGhpcy5pbnRlZ3JpdHkgPSByZXF1ZXN0SW5pdD8uaW50ZWdyaXR5IHx8ICcnO1xuICAgICAgICB0aGlzLmtlZXBhbGl2ZSA9IHJlcXVlc3RJbml0Py5rZWVwYWxpdmUgIT0gbnVsbCA/IHJlcXVlc3RJbml0Py5rZWVwYWxpdmUgOiBmYWxzZTtcbiAgICAgICAgdGhpcy5tZXRob2QgPSByZXF1ZXN0SW5pdD8ubWV0aG9kPy50b1VwcGVyQ2FzZSgpIHx8ICdHRVQnO1xuICAgICAgICB0aGlzLm1vZGUgPSByZXF1ZXN0SW5pdD8ubW9kZSB8fCAnY29ycyc7XG4gICAgICAgIHRoaXMucmVkaXJlY3QgPSByZXF1ZXN0SW5pdD8ucmVkaXJlY3QgfHwgJ2ZvbGxvdyc7XG4gICAgICAgIHRoaXMucmVmZXJyZXIgPSByZXF1ZXN0SW5pdD8ucmVmZXJyZXIgfHwgJ2Fib3V0OmNsaWVudCc7XG4gICAgICAgIHRoaXMucmVmZXJyZXJQb2xpY3kgPSByZXF1ZXN0SW5pdD8ucmVmZXJyZXJQb2xpY3kgfHwgJ25vLXJlZmVycmVyJztcbiAgICAgICAgdGhpcy5fc2lnbmFsID0gcmVxdWVzdEluaXQ/LnNpZ25hbDtcbiAgICAgICAgdGhpcy5oZWFkZXJzU2VyaWFsaXplciA9IHJlcXVlc3RJbml0Py5oZWFkZXJzU2VyaWFsaXplcjtcbiAgICAgICAgdGhpcy5kdXBsZXggPSByZXF1ZXN0SW5pdD8uZHVwbGV4IHx8ICdoYWxmJztcbiAgICAgICAgdGhpcy51cmwgPSB1cmwgfHwgJyc7XG4gICAgICAgIHRoaXMuZGVzdGluYXRpb24gPSAnZG9jdW1lbnQnO1xuICAgICAgICB0aGlzLnByaW9yaXR5ID0gJ2F1dG8nO1xuICAgICAgICBpZiAodGhpcy5tZXRob2QgIT09ICdHRVQnICYmIHRoaXMubWV0aG9kICE9PSAnSEVBRCcpIHtcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlQ29udGVudExlbmd0aEhlYWRlcih0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocmVxdWVzdEluaXQ/LmFnZW50ICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChyZXF1ZXN0SW5pdC5hZ2VudCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFnZW50ID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0aGlzLnVybC5zdGFydHNXaXRoKCdodHRwOi8nKSAmJiByZXF1ZXN0SW5pdC5hZ2VudCBpbnN0YW5jZW9mIGh0dHBfMS5BZ2VudCkge1xuICAgICAgICAgICAgICAgIHRoaXMuYWdlbnQgPSByZXF1ZXN0SW5pdC5hZ2VudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMudXJsLnN0YXJ0c1dpdGgoJ2h0dHBzOi8nKSAmJiByZXF1ZXN0SW5pdC5hZ2VudCBpbnN0YW5jZW9mIGh0dHBzXzEuQWdlbnQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFnZW50ID0gcmVxdWVzdEluaXQuYWdlbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgaGVhZGVyc1NlcmlhbGl6ZXI7XG4gICAgY2FjaGU7XG4gICAgY3JlZGVudGlhbHM7XG4gICAgZGVzdGluYXRpb247XG4gICAgaGVhZGVycztcbiAgICBpbnRlZ3JpdHk7XG4gICAga2VlcGFsaXZlO1xuICAgIG1ldGhvZDtcbiAgICBtb2RlO1xuICAgIHByaW9yaXR5O1xuICAgIHJlZGlyZWN0O1xuICAgIHJlZmVycmVyO1xuICAgIHJlZmVycmVyUG9saWN5O1xuICAgIHVybDtcbiAgICBkdXBsZXg7XG4gICAgYWdlbnQ7XG4gICAgX3NpZ25hbDtcbiAgICBnZXQgc2lnbmFsKCkge1xuICAgICAgICAvLyBDcmVhdGUgYSBuZXcgc2lnbmFsIG9ubHkgaWYgbmVlZGVkXG4gICAgICAgIC8vIEJlY2F1c2UgdGhlIGNyZWF0aW9uIG9mIHNpZ25hbCBpcyBleHBlbnNpdmVcbiAgICAgICAgaWYgKCF0aGlzLl9zaWduYWwpIHtcbiAgICAgICAgICAgIHRoaXMuX3NpZ25hbCA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKS5zaWduYWw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX3NpZ25hbDtcbiAgICB9XG4gICAgY2xvbmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBbU3ltYm9sLnRvU3RyaW5nVGFnXSA9ICdSZXF1ZXN0Jztcbn1cbmV4cG9ydHMuUG9ueWZpbGxSZXF1ZXN0ID0gUG9ueWZpbGxSZXF1ZXN0O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Request.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Response.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Response.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillResponse = void 0;\nconst http_1 = __webpack_require__(/*! http */ \"http\");\nconst Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nconst Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nconst JSON_CONTENT_TYPE = 'application/json; charset=utf-8';\nclass PonyfillResponse extends Body_js_1.PonyfillBody {\n    headers;\n    constructor(body, init) {\n        super(body || null, init);\n        this.headers =\n            init?.headers && (0, Headers_js_1.isHeadersLike)(init.headers)\n                ? init.headers\n                : new Headers_js_1.PonyfillHeaders(init?.headers);\n        this.status = init?.status || 200;\n        this.statusText = init?.statusText || http_1.STATUS_CODES[this.status] || 'OK';\n        this.url = init?.url || '';\n        this.redirected = init?.redirected || false;\n        this.type = init?.type || 'default';\n        this.handleContentLengthHeader();\n    }\n    get ok() {\n        return this.status >= 200 && this.status < 300;\n    }\n    status;\n    statusText;\n    url;\n    redirected;\n    type;\n    clone() {\n        return this;\n    }\n    static error() {\n        return new PonyfillResponse(null, {\n            status: 500,\n            statusText: 'Internal Server Error',\n        });\n    }\n    static redirect(url, status = 302) {\n        if (status < 300 || status > 399) {\n            throw new RangeError('Invalid status code');\n        }\n        return new PonyfillResponse(null, {\n            headers: {\n                location: url,\n            },\n            status,\n        });\n    }\n    static json(data, init = {}) {\n        init.headers =\n            init?.headers && (0, Headers_js_1.isHeadersLike)(init.headers)\n                ? init.headers\n                : new Headers_js_1.PonyfillHeaders(init?.headers);\n        if (!init.headers.has('content-type')) {\n            init.headers.set('content-type', JSON_CONTENT_TYPE);\n        }\n        return new PonyfillResponse(JSON.stringify(data), init);\n    }\n}\nexports.PonyfillResponse = PonyfillResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QixlQUFlLG1CQUFPLENBQUMsa0JBQU07QUFDN0Isa0JBQWtCLG1CQUFPLENBQUMsNEdBQVc7QUFDckMscUJBQXFCLG1CQUFPLENBQUMsa0hBQWM7QUFDM0MsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9zZXJ2ZXIvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9SZXNwb25zZS5qcz84NzdjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFJlc3BvbnNlID0gdm9pZCAwO1xuY29uc3QgaHR0cF8xID0gcmVxdWlyZShcImh0dHBcIik7XG5jb25zdCBCb2R5X2pzXzEgPSByZXF1aXJlKFwiLi9Cb2R5LmpzXCIpO1xuY29uc3QgSGVhZGVyc19qc18xID0gcmVxdWlyZShcIi4vSGVhZGVycy5qc1wiKTtcbmNvbnN0IEpTT05fQ09OVEVOVF9UWVBFID0gJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLTgnO1xuY2xhc3MgUG9ueWZpbGxSZXNwb25zZSBleHRlbmRzIEJvZHlfanNfMS5Qb255ZmlsbEJvZHkge1xuICAgIGhlYWRlcnM7XG4gICAgY29uc3RydWN0b3IoYm9keSwgaW5pdCkge1xuICAgICAgICBzdXBlcihib2R5IHx8IG51bGwsIGluaXQpO1xuICAgICAgICB0aGlzLmhlYWRlcnMgPVxuICAgICAgICAgICAgaW5pdD8uaGVhZGVycyAmJiAoMCwgSGVhZGVyc19qc18xLmlzSGVhZGVyc0xpa2UpKGluaXQuaGVhZGVycylcbiAgICAgICAgICAgICAgICA/IGluaXQuaGVhZGVyc1xuICAgICAgICAgICAgICAgIDogbmV3IEhlYWRlcnNfanNfMS5Qb255ZmlsbEhlYWRlcnMoaW5pdD8uaGVhZGVycyk7XG4gICAgICAgIHRoaXMuc3RhdHVzID0gaW5pdD8uc3RhdHVzIHx8IDIwMDtcbiAgICAgICAgdGhpcy5zdGF0dXNUZXh0ID0gaW5pdD8uc3RhdHVzVGV4dCB8fCBodHRwXzEuU1RBVFVTX0NPREVTW3RoaXMuc3RhdHVzXSB8fCAnT0snO1xuICAgICAgICB0aGlzLnVybCA9IGluaXQ/LnVybCB8fCAnJztcbiAgICAgICAgdGhpcy5yZWRpcmVjdGVkID0gaW5pdD8ucmVkaXJlY3RlZCB8fCBmYWxzZTtcbiAgICAgICAgdGhpcy50eXBlID0gaW5pdD8udHlwZSB8fCAnZGVmYXVsdCc7XG4gICAgICAgIHRoaXMuaGFuZGxlQ29udGVudExlbmd0aEhlYWRlcigpO1xuICAgIH1cbiAgICBnZXQgb2soKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXR1cyA+PSAyMDAgJiYgdGhpcy5zdGF0dXMgPCAzMDA7XG4gICAgfVxuICAgIHN0YXR1cztcbiAgICBzdGF0dXNUZXh0O1xuICAgIHVybDtcbiAgICByZWRpcmVjdGVkO1xuICAgIHR5cGU7XG4gICAgY2xvbmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBzdGF0aWMgZXJyb3IoKSB7XG4gICAgICAgIHJldHVybiBuZXcgUG9ueWZpbGxSZXNwb25zZShudWxsLCB7XG4gICAgICAgICAgICBzdGF0dXM6IDUwMCxcbiAgICAgICAgICAgIHN0YXR1c1RleHQ6ICdJbnRlcm5hbCBTZXJ2ZXIgRXJyb3InLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RhdGljIHJlZGlyZWN0KHVybCwgc3RhdHVzID0gMzAyKSB7XG4gICAgICAgIGlmIChzdGF0dXMgPCAzMDAgfHwgc3RhdHVzID4gMzk5KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignSW52YWxpZCBzdGF0dXMgY29kZScpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUG9ueWZpbGxSZXNwb25zZShudWxsLCB7XG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgbG9jYXRpb246IHVybCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdGF0dXMsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzdGF0aWMganNvbihkYXRhLCBpbml0ID0ge30pIHtcbiAgICAgICAgaW5pdC5oZWFkZXJzID1cbiAgICAgICAgICAgIGluaXQ/LmhlYWRlcnMgJiYgKDAsIEhlYWRlcnNfanNfMS5pc0hlYWRlcnNMaWtlKShpbml0LmhlYWRlcnMpXG4gICAgICAgICAgICAgICAgPyBpbml0LmhlYWRlcnNcbiAgICAgICAgICAgICAgICA6IG5ldyBIZWFkZXJzX2pzXzEuUG9ueWZpbGxIZWFkZXJzKGluaXQ/LmhlYWRlcnMpO1xuICAgICAgICBpZiAoIWluaXQuaGVhZGVycy5oYXMoJ2NvbnRlbnQtdHlwZScpKSB7XG4gICAgICAgICAgICBpbml0LmhlYWRlcnMuc2V0KCdjb250ZW50LXR5cGUnLCBKU09OX0NPTlRFTlRfVFlQRSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBQb255ZmlsbFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KGRhdGEpLCBpbml0KTtcbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsUmVzcG9uc2UgPSBQb255ZmlsbFJlc3BvbnNlO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Response.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillTextDecoder = exports.PonyfillTextEncoder = void 0;\nexports.PonyfillBtoa = PonyfillBtoa;\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nclass PonyfillTextEncoder {\n    encoding;\n    constructor(encoding = 'utf-8') {\n        this.encoding = encoding;\n    }\n    encode(input) {\n        return Buffer.from(input, this.encoding);\n    }\n    encodeInto(source, destination) {\n        const buffer = this.encode(source);\n        const copied = buffer.copy(destination);\n        return {\n            read: copied,\n            written: copied,\n        };\n    }\n}\nexports.PonyfillTextEncoder = PonyfillTextEncoder;\nclass PonyfillTextDecoder {\n    encoding;\n    fatal = false;\n    ignoreBOM = false;\n    constructor(encoding = 'utf-8', options) {\n        this.encoding = encoding;\n        if (options) {\n            this.fatal = options.fatal || false;\n            this.ignoreBOM = options.ignoreBOM || false;\n        }\n    }\n    decode(input) {\n        if (Buffer.isBuffer(input)) {\n            return input.toString(this.encoding);\n        }\n        if ((0, utils_js_1.isArrayBufferView)(input)) {\n            return Buffer.from(input.buffer, input.byteOffset, input.byteLength).toString(this.encoding);\n        }\n        return Buffer.from(input).toString(this.encoding);\n    }\n}\nexports.PonyfillTextDecoder = PonyfillTextDecoder;\nfunction PonyfillBtoa(input) {\n    return Buffer.from(input, 'binary').toString('base64');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RleHRFbmNvZGVyRGVjb2Rlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkIsR0FBRywyQkFBMkI7QUFDekQsb0JBQW9CO0FBQ3BCLG1CQUFtQixtQkFBTyxDQUFDLDhHQUFZO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvc2VydmVyL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvVGV4dEVuY29kZXJEZWNvZGVyLmpzPzdmZjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsVGV4dERlY29kZXIgPSBleHBvcnRzLlBvbnlmaWxsVGV4dEVuY29kZXIgPSB2b2lkIDA7XG5leHBvcnRzLlBvbnlmaWxsQnRvYSA9IFBvbnlmaWxsQnRvYTtcbmNvbnN0IHV0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi91dGlscy5qc1wiKTtcbmNsYXNzIFBvbnlmaWxsVGV4dEVuY29kZXIge1xuICAgIGVuY29kaW5nO1xuICAgIGNvbnN0cnVjdG9yKGVuY29kaW5nID0gJ3V0Zi04Jykge1xuICAgICAgICB0aGlzLmVuY29kaW5nID0gZW5jb2Rpbmc7XG4gICAgfVxuICAgIGVuY29kZShpbnB1dCkge1xuICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20oaW5wdXQsIHRoaXMuZW5jb2RpbmcpO1xuICAgIH1cbiAgICBlbmNvZGVJbnRvKHNvdXJjZSwgZGVzdGluYXRpb24pIHtcbiAgICAgICAgY29uc3QgYnVmZmVyID0gdGhpcy5lbmNvZGUoc291cmNlKTtcbiAgICAgICAgY29uc3QgY29waWVkID0gYnVmZmVyLmNvcHkoZGVzdGluYXRpb24pO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcmVhZDogY29waWVkLFxuICAgICAgICAgICAgd3JpdHRlbjogY29waWVkLFxuICAgICAgICB9O1xuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxUZXh0RW5jb2RlciA9IFBvbnlmaWxsVGV4dEVuY29kZXI7XG5jbGFzcyBQb255ZmlsbFRleHREZWNvZGVyIHtcbiAgICBlbmNvZGluZztcbiAgICBmYXRhbCA9IGZhbHNlO1xuICAgIGlnbm9yZUJPTSA9IGZhbHNlO1xuICAgIGNvbnN0cnVjdG9yKGVuY29kaW5nID0gJ3V0Zi04Jywgb3B0aW9ucykge1xuICAgICAgICB0aGlzLmVuY29kaW5nID0gZW5jb2Rpbmc7XG4gICAgICAgIGlmIChvcHRpb25zKSB7XG4gICAgICAgICAgICB0aGlzLmZhdGFsID0gb3B0aW9ucy5mYXRhbCB8fCBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuaWdub3JlQk9NID0gb3B0aW9ucy5pZ25vcmVCT00gfHwgZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZGVjb2RlKGlucHV0KSB7XG4gICAgICAgIGlmIChCdWZmZXIuaXNCdWZmZXIoaW5wdXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gaW5wdXQudG9TdHJpbmcodGhpcy5lbmNvZGluZyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCgwLCB1dGlsc19qc18xLmlzQXJyYXlCdWZmZXJWaWV3KShpbnB1dCkpIHtcbiAgICAgICAgICAgIHJldHVybiBCdWZmZXIuZnJvbShpbnB1dC5idWZmZXIsIGlucHV0LmJ5dGVPZmZzZXQsIGlucHV0LmJ5dGVMZW5ndGgpLnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBCdWZmZXIuZnJvbShpbnB1dCkudG9TdHJpbmcodGhpcy5lbmNvZGluZyk7XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbFRleHREZWNvZGVyID0gUG9ueWZpbGxUZXh0RGVjb2RlcjtcbmZ1bmN0aW9uIFBvbnlmaWxsQnRvYShpbnB1dCkge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbShpbnB1dCwgJ2JpbmFyeScpLnRvU3RyaW5nKCdiYXNlNjQnKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoderStream.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoderStream.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillTextEncoderStream = exports.PonyfillTextDecoderStream = void 0;\nconst TextEncoderDecoder_js_1 = __webpack_require__(/*! ./TextEncoderDecoder.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js\");\nconst TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nclass PonyfillTextDecoderStream extends TransformStream_js_1.PonyfillTransformStream {\n    textDecoder;\n    constructor(encoding, options) {\n        super({\n            transform: (chunk, controller) => {\n                controller.enqueue(this.textDecoder.decode(chunk, { stream: true }));\n            },\n        });\n        this.textDecoder = new TextEncoderDecoder_js_1.PonyfillTextDecoder(encoding, options);\n    }\n    get encoding() {\n        return this.textDecoder.encoding;\n    }\n    get fatal() {\n        return this.textDecoder.fatal;\n    }\n    get ignoreBOM() {\n        return this.textDecoder.ignoreBOM;\n    }\n}\nexports.PonyfillTextDecoderStream = PonyfillTextDecoderStream;\nclass PonyfillTextEncoderStream extends TransformStream_js_1.PonyfillTransformStream {\n    textEncoder;\n    constructor(encoding) {\n        super({\n            transform: (chunk, controller) => {\n                controller.enqueue(this.textEncoder.encode(chunk));\n            },\n        });\n        this.textEncoder = new TextEncoderDecoder_js_1.PonyfillTextEncoder(encoding);\n    }\n    get encoding() {\n        return this.textEncoder.encoding;\n    }\n    encode(input) {\n        return this.textEncoder.encode(input);\n    }\n}\nexports.PonyfillTextEncoderStream = PonyfillTextEncoderStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RleHRFbmNvZGVyRGVjb2RlclN0cmVhbS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRyxpQ0FBaUM7QUFDckUsZ0NBQWdDLG1CQUFPLENBQUMsd0lBQXlCO0FBQ2pFLDZCQUE2QixtQkFBTyxDQUFDLGtJQUFzQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0VBQW9FLGNBQWM7QUFDbEYsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RleHRFbmNvZGVyRGVjb2RlclN0cmVhbS5qcz8wODlhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFRleHRFbmNvZGVyU3RyZWFtID0gZXhwb3J0cy5Qb255ZmlsbFRleHREZWNvZGVyU3RyZWFtID0gdm9pZCAwO1xuY29uc3QgVGV4dEVuY29kZXJEZWNvZGVyX2pzXzEgPSByZXF1aXJlKFwiLi9UZXh0RW5jb2RlckRlY29kZXIuanNcIik7XG5jb25zdCBUcmFuc2Zvcm1TdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL1RyYW5zZm9ybVN0cmVhbS5qc1wiKTtcbmNsYXNzIFBvbnlmaWxsVGV4dERlY29kZXJTdHJlYW0gZXh0ZW5kcyBUcmFuc2Zvcm1TdHJlYW1fanNfMS5Qb255ZmlsbFRyYW5zZm9ybVN0cmVhbSB7XG4gICAgdGV4dERlY29kZXI7XG4gICAgY29uc3RydWN0b3IoZW5jb2RpbmcsIG9wdGlvbnMpIHtcbiAgICAgICAgc3VwZXIoe1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAoY2h1bmssIGNvbnRyb2xsZXIpID0+IHtcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUodGhpcy50ZXh0RGVjb2Rlci5kZWNvZGUoY2h1bmssIHsgc3RyZWFtOiB0cnVlIH0pKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnRleHREZWNvZGVyID0gbmV3IFRleHRFbmNvZGVyRGVjb2Rlcl9qc18xLlBvbnlmaWxsVGV4dERlY29kZXIoZW5jb2RpbmcsIG9wdGlvbnMpO1xuICAgIH1cbiAgICBnZXQgZW5jb2RpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRleHREZWNvZGVyLmVuY29kaW5nO1xuICAgIH1cbiAgICBnZXQgZmF0YWwoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRleHREZWNvZGVyLmZhdGFsO1xuICAgIH1cbiAgICBnZXQgaWdub3JlQk9NKCkge1xuICAgICAgICByZXR1cm4gdGhpcy50ZXh0RGVjb2Rlci5pZ25vcmVCT007XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbFRleHREZWNvZGVyU3RyZWFtID0gUG9ueWZpbGxUZXh0RGVjb2RlclN0cmVhbTtcbmNsYXNzIFBvbnlmaWxsVGV4dEVuY29kZXJTdHJlYW0gZXh0ZW5kcyBUcmFuc2Zvcm1TdHJlYW1fanNfMS5Qb255ZmlsbFRyYW5zZm9ybVN0cmVhbSB7XG4gICAgdGV4dEVuY29kZXI7XG4gICAgY29uc3RydWN0b3IoZW5jb2RpbmcpIHtcbiAgICAgICAgc3VwZXIoe1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAoY2h1bmssIGNvbnRyb2xsZXIpID0+IHtcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUodGhpcy50ZXh0RW5jb2Rlci5lbmNvZGUoY2h1bmspKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnRleHRFbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyRGVjb2Rlcl9qc18xLlBvbnlmaWxsVGV4dEVuY29kZXIoZW5jb2RpbmcpO1xuICAgIH1cbiAgICBnZXQgZW5jb2RpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRleHRFbmNvZGVyLmVuY29kaW5nO1xuICAgIH1cbiAgICBlbmNvZGUoaW5wdXQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudGV4dEVuY29kZXIuZW5jb2RlKGlucHV0KTtcbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsVGV4dEVuY29kZXJTdHJlYW0gPSBQb255ZmlsbFRleHRFbmNvZGVyU3RyZWFtO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoderStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillTransformStream = void 0;\nconst node_stream_1 = __webpack_require__(/*! node:stream */ \"node:stream\");\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst WritableStream_js_1 = __webpack_require__(/*! ./WritableStream.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\");\nclass PonyfillTransformStream {\n    transform;\n    writable;\n    readable;\n    constructor(transformer) {\n        if (transformer instanceof node_stream_1.Transform) {\n            this.transform = transformer;\n        }\n        else if (transformer) {\n            const controller = {\n                enqueue(chunk) {\n                    transform.push(chunk);\n                },\n                error(reason) {\n                    transform.destroy(reason);\n                },\n                terminate() {\n                    transform.end();\n                },\n                get desiredSize() {\n                    return transform.writableLength;\n                },\n            };\n            const transform = new node_stream_1.Transform({\n                read() { },\n                write(chunk, _encoding, callback) {\n                    try {\n                        const result = transformer.transform?.(chunk, controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n                final(callback) {\n                    try {\n                        const result = transformer.flush?.(controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n            });\n            this.transform = transform;\n        }\n        else {\n            this.transform = new node_stream_1.Transform();\n        }\n        this.writable = new WritableStream_js_1.PonyfillWritableStream(this.transform);\n        this.readable = new ReadableStream_js_1.PonyfillReadableStream(this.transform);\n    }\n}\nexports.PonyfillTransformStream = PonyfillTransformStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RyYW5zZm9ybVN0cmVhbS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0I7QUFDL0Isc0JBQXNCLG1CQUFPLENBQUMsZ0NBQWE7QUFDM0MsNEJBQTRCLG1CQUFPLENBQUMsZ0lBQXFCO0FBQ3pELDRCQUE0QixtQkFBTyxDQUFDLGdJQUFxQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9zZXJ2ZXIvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9UcmFuc2Zvcm1TdHJlYW0uanM/YzBkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxUcmFuc2Zvcm1TdHJlYW0gPSB2b2lkIDA7XG5jb25zdCBub2RlX3N0cmVhbV8xID0gcmVxdWlyZShcIm5vZGU6c3RyZWFtXCIpO1xuY29uc3QgUmVhZGFibGVTdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL1JlYWRhYmxlU3RyZWFtLmpzXCIpO1xuY29uc3QgV3JpdGFibGVTdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL1dyaXRhYmxlU3RyZWFtLmpzXCIpO1xuY2xhc3MgUG9ueWZpbGxUcmFuc2Zvcm1TdHJlYW0ge1xuICAgIHRyYW5zZm9ybTtcbiAgICB3cml0YWJsZTtcbiAgICByZWFkYWJsZTtcbiAgICBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm1lcikge1xuICAgICAgICBpZiAodHJhbnNmb3JtZXIgaW5zdGFuY2VvZiBub2RlX3N0cmVhbV8xLlRyYW5zZm9ybSkge1xuICAgICAgICAgICAgdGhpcy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1lcjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0cmFuc2Zvcm1lcikge1xuICAgICAgICAgICAgY29uc3QgY29udHJvbGxlciA9IHtcbiAgICAgICAgICAgICAgICBlbnF1ZXVlKGNodW5rKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybS5wdXNoKGNodW5rKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGVycm9yKHJlYXNvbikge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm0uZGVzdHJveShyZWFzb24pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgdGVybWluYXRlKCkge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm0uZW5kKCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgZGVzaXJlZFNpemUoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cmFuc2Zvcm0ud3JpdGFibGVMZW5ndGg7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjb25zdCB0cmFuc2Zvcm0gPSBuZXcgbm9kZV9zdHJlYW1fMS5UcmFuc2Zvcm0oe1xuICAgICAgICAgICAgICAgIHJlYWQoKSB7IH0sXG4gICAgICAgICAgICAgICAgd3JpdGUoY2h1bmssIF9lbmNvZGluZywgY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHRyYW5zZm9ybWVyLnRyYW5zZm9ybT8uKGNodW5rLCBjb250cm9sbGVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIGVyciA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGZpbmFsKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSB0cmFuc2Zvcm1lci5mbHVzaD8uKGNvbnRyb2xsZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgZXJyID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMudHJhbnNmb3JtID0gdHJhbnNmb3JtO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy50cmFuc2Zvcm0gPSBuZXcgbm9kZV9zdHJlYW1fMS5UcmFuc2Zvcm0oKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLndyaXRhYmxlID0gbmV3IFdyaXRhYmxlU3RyZWFtX2pzXzEuUG9ueWZpbGxXcml0YWJsZVN0cmVhbSh0aGlzLnRyYW5zZm9ybSk7XG4gICAgICAgIHRoaXMucmVhZGFibGUgPSBuZXcgUmVhZGFibGVTdHJlYW1fanNfMS5Qb255ZmlsbFJlYWRhYmxlU3RyZWFtKHRoaXMudHJhbnNmb3JtKTtcbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsVHJhbnNmb3JtU3RyZWFtID0gUG9ueWZpbGxUcmFuc2Zvcm1TdHJlYW07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/URL.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/URL.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillURL = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst fast_querystring_1 = tslib_1.__importDefault(__webpack_require__(/*! fast-querystring */ \"(rsc)/./node_modules/fast-querystring/lib/index.js\"));\nconst fast_url_parser_1 = tslib_1.__importDefault(__webpack_require__(/*! @kamilkisiela/fast-url-parser */ \"(rsc)/./node_modules/@kamilkisiela/fast-url-parser/src/urlparser.js\"));\nconst URLSearchParams_js_1 = __webpack_require__(/*! ./URLSearchParams.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\");\nfast_url_parser_1.default.queryString = fast_querystring_1.default;\nclass PonyfillURL extends fast_url_parser_1.default {\n    constructor(url, base) {\n        super();\n        if (url.startsWith('data:')) {\n            this.protocol = 'data:';\n            this.pathname = url.slice('data:'.length);\n            return;\n        }\n        this.parse(url, false);\n        if (base) {\n            const baseParsed = typeof base === 'string' ? new PonyfillURL(base) : base;\n            this.protocol = this.protocol || baseParsed.protocol;\n            this.host = this.host || baseParsed.host;\n            this.pathname = this.pathname || baseParsed.pathname;\n        }\n    }\n    get origin() {\n        return `${this.protocol}//${this.host}`;\n    }\n    _searchParams;\n    get searchParams() {\n        if (!this._searchParams) {\n            this._searchParams = new URLSearchParams_js_1.PonyfillURLSearchParams(this.query);\n        }\n        return this._searchParams;\n    }\n    get username() {\n        return this.auth?.split(':')[0] || '';\n    }\n    set username(value) {\n        this.auth = `${value}:${this.password}`;\n    }\n    get password() {\n        return this.auth?.split(':')[1] || '';\n    }\n    set password(value) {\n        this.auth = `${this.username}:${value}`;\n    }\n    toString() {\n        return this.format();\n    }\n    toJSON() {\n        return this.toString();\n    }\n    static blobRegistry = new Map();\n    static createObjectURL(blob) {\n        const blobUrl = `blob:whatwgnode:${(0, crypto_1.randomUUID)()}`;\n        this.blobRegistry.set(blobUrl, blob);\n        return blobUrl;\n    }\n    static resolveObjectURL(url) {\n        if (!this.blobRegistry.has(url)) {\n            URL.revokeObjectURL(url);\n        }\n        else {\n            this.blobRegistry.delete(url);\n        }\n    }\n    static getBlobFromURL(url) {\n        return (this.blobRegistry.get(url) || (0, buffer_1.resolveObjectURL)(url));\n    }\n}\nexports.PonyfillURL = PonyfillURL;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1VSTC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkIsZ0JBQWdCLG1CQUFPLENBQUMsdURBQU87QUFDL0IsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakMsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakMsbURBQW1ELG1CQUFPLENBQUMsNEVBQWtCO0FBQzdFLGtEQUFrRCxtQkFBTyxDQUFDLDBHQUErQjtBQUN6Riw2QkFBNkIsbUJBQU8sQ0FBQyxrSUFBc0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGNBQWMsSUFBSSxVQUFVO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixNQUFNLEdBQUcsY0FBYztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGNBQWMsR0FBRyxNQUFNO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQywyQkFBMkI7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9zZXJ2ZXIvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9VUkwuanM/MDRiOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxVUkwgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgYnVmZmVyXzEgPSByZXF1aXJlKFwiYnVmZmVyXCIpO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuY29uc3QgZmFzdF9xdWVyeXN0cmluZ18xID0gdHNsaWJfMS5fX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImZhc3QtcXVlcnlzdHJpbmdcIikpO1xuY29uc3QgZmFzdF91cmxfcGFyc2VyXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiQGthbWlsa2lzaWVsYS9mYXN0LXVybC1wYXJzZXJcIikpO1xuY29uc3QgVVJMU2VhcmNoUGFyYW1zX2pzXzEgPSByZXF1aXJlKFwiLi9VUkxTZWFyY2hQYXJhbXMuanNcIik7XG5mYXN0X3VybF9wYXJzZXJfMS5kZWZhdWx0LnF1ZXJ5U3RyaW5nID0gZmFzdF9xdWVyeXN0cmluZ18xLmRlZmF1bHQ7XG5jbGFzcyBQb255ZmlsbFVSTCBleHRlbmRzIGZhc3RfdXJsX3BhcnNlcl8xLmRlZmF1bHQge1xuICAgIGNvbnN0cnVjdG9yKHVybCwgYmFzZSkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICBpZiAodXJsLnN0YXJ0c1dpdGgoJ2RhdGE6JykpIHtcbiAgICAgICAgICAgIHRoaXMucHJvdG9jb2wgPSAnZGF0YTonO1xuICAgICAgICAgICAgdGhpcy5wYXRobmFtZSA9IHVybC5zbGljZSgnZGF0YTonLmxlbmd0aCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wYXJzZSh1cmwsIGZhbHNlKTtcbiAgICAgICAgaWYgKGJhc2UpIHtcbiAgICAgICAgICAgIGNvbnN0IGJhc2VQYXJzZWQgPSB0eXBlb2YgYmFzZSA9PT0gJ3N0cmluZycgPyBuZXcgUG9ueWZpbGxVUkwoYmFzZSkgOiBiYXNlO1xuICAgICAgICAgICAgdGhpcy5wcm90b2NvbCA9IHRoaXMucHJvdG9jb2wgfHwgYmFzZVBhcnNlZC5wcm90b2NvbDtcbiAgICAgICAgICAgIHRoaXMuaG9zdCA9IHRoaXMuaG9zdCB8fCBiYXNlUGFyc2VkLmhvc3Q7XG4gICAgICAgICAgICB0aGlzLnBhdGhuYW1lID0gdGhpcy5wYXRobmFtZSB8fCBiYXNlUGFyc2VkLnBhdGhuYW1lO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldCBvcmlnaW4oKSB7XG4gICAgICAgIHJldHVybiBgJHt0aGlzLnByb3RvY29sfS8vJHt0aGlzLmhvc3R9YDtcbiAgICB9XG4gICAgX3NlYXJjaFBhcmFtcztcbiAgICBnZXQgc2VhcmNoUGFyYW1zKCkge1xuICAgICAgICBpZiAoIXRoaXMuX3NlYXJjaFBhcmFtcykge1xuICAgICAgICAgICAgdGhpcy5fc2VhcmNoUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtc19qc18xLlBvbnlmaWxsVVJMU2VhcmNoUGFyYW1zKHRoaXMucXVlcnkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9zZWFyY2hQYXJhbXM7XG4gICAgfVxuICAgIGdldCB1c2VybmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXV0aD8uc3BsaXQoJzonKVswXSB8fCAnJztcbiAgICB9XG4gICAgc2V0IHVzZXJuYW1lKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuYXV0aCA9IGAke3ZhbHVlfToke3RoaXMucGFzc3dvcmR9YDtcbiAgICB9XG4gICAgZ2V0IHBhc3N3b3JkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5hdXRoPy5zcGxpdCgnOicpWzFdIHx8ICcnO1xuICAgIH1cbiAgICBzZXQgcGFzc3dvcmQodmFsdWUpIHtcbiAgICAgICAgdGhpcy5hdXRoID0gYCR7dGhpcy51c2VybmFtZX06JHt2YWx1ZX1gO1xuICAgIH1cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZm9ybWF0KCk7XG4gICAgfVxuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgc3RhdGljIGJsb2JSZWdpc3RyeSA9IG5ldyBNYXAoKTtcbiAgICBzdGF0aWMgY3JlYXRlT2JqZWN0VVJMKGJsb2IpIHtcbiAgICAgICAgY29uc3QgYmxvYlVybCA9IGBibG9iOndoYXR3Z25vZGU6JHsoMCwgY3J5cHRvXzEucmFuZG9tVVVJRCkoKX1gO1xuICAgICAgICB0aGlzLmJsb2JSZWdpc3RyeS5zZXQoYmxvYlVybCwgYmxvYik7XG4gICAgICAgIHJldHVybiBibG9iVXJsO1xuICAgIH1cbiAgICBzdGF0aWMgcmVzb2x2ZU9iamVjdFVSTCh1cmwpIHtcbiAgICAgICAgaWYgKCF0aGlzLmJsb2JSZWdpc3RyeS5oYXModXJsKSkge1xuICAgICAgICAgICAgVVJMLnJldm9rZU9iamVjdFVSTCh1cmwpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5ibG9iUmVnaXN0cnkuZGVsZXRlKHVybCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGljIGdldEJsb2JGcm9tVVJMKHVybCkge1xuICAgICAgICByZXR1cm4gKHRoaXMuYmxvYlJlZ2lzdHJ5LmdldCh1cmwpIHx8ICgwLCBidWZmZXJfMS5yZXNvbHZlT2JqZWN0VVJMKSh1cmwpKTtcbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsVVJMID0gUG9ueWZpbGxVUkw7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/URL.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillURLSearchParams = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\nconst fast_querystring_1 = tslib_1.__importDefault(__webpack_require__(/*! fast-querystring */ \"(rsc)/./node_modules/fast-querystring/lib/index.js\"));\nconst IteratorObject_js_1 = __webpack_require__(/*! ./IteratorObject.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/IteratorObject.js\");\nfunction isURLSearchParams(value) {\n    return value?.entries != null;\n}\nclass PonyfillURLSearchParams {\n    params;\n    constructor(init) {\n        if (init) {\n            if (typeof init === 'string') {\n                this.params = fast_querystring_1.default.parse(init);\n            }\n            else if (Array.isArray(init)) {\n                this.params = {};\n                for (const [key, value] of init) {\n                    this.params[key] = value;\n                }\n            }\n            else if (isURLSearchParams(init)) {\n                this.params = {};\n                for (const [key, value] of init.entries()) {\n                    this.params[key] = value;\n                }\n            }\n            else {\n                this.params = init;\n            }\n        }\n        else {\n            this.params = {};\n        }\n    }\n    append(name, value) {\n        const existingValue = this.params[name];\n        const finalValue = existingValue ? `${existingValue},${value}` : value;\n        this.params[name] = finalValue;\n    }\n    delete(name) {\n        delete this.params[name];\n    }\n    get(name) {\n        const value = this.params[name];\n        if (Array.isArray(value)) {\n            return value[0] || null;\n        }\n        return value || null;\n    }\n    getAll(name) {\n        const value = this.params[name];\n        if (!Array.isArray(value)) {\n            return value ? [value] : [];\n        }\n        return value;\n    }\n    has(name) {\n        return name in this.params;\n    }\n    set(name, value) {\n        this.params[name] = value;\n    }\n    sort() {\n        const sortedKeys = Object.keys(this.params).sort();\n        const sortedParams = {};\n        for (const key of sortedKeys) {\n            sortedParams[key] = this.params[key];\n        }\n        this.params = sortedParams;\n    }\n    toString() {\n        return fast_querystring_1.default.stringify(this.params);\n    }\n    *_keys() {\n        for (const key in this.params) {\n            yield key;\n        }\n    }\n    keys() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._keys(), 'URLSearchParamsIterator');\n    }\n    *_entries() {\n        for (const key of this.keys()) {\n            const value = this.params[key];\n            if (Array.isArray(value)) {\n                for (const item of value) {\n                    yield [key, item];\n                }\n            }\n            else {\n                yield [key, value];\n            }\n        }\n    }\n    entries() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._entries(), 'URLSearchParamsIterator');\n    }\n    *_values() {\n        for (const [, value] of this) {\n            yield value;\n        }\n    }\n    values() {\n        return new IteratorObject_js_1.PonyfillIteratorObject(this._values(), 'URLSearchParamsIterator');\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key, this);\n        }\n    }\n    get size() {\n        return Object.keys(this.params).length;\n    }\n}\nexports.PonyfillURLSearchParams = PonyfillURLSearchParams;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1VSTFNlYXJjaFBhcmFtcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0I7QUFDL0IsZ0JBQWdCLG1CQUFPLENBQUMsdURBQU87QUFDL0IsbURBQW1ELG1CQUFPLENBQUMsNEVBQWtCO0FBQzdFLDRCQUE0QixtQkFBTyxDQUFDLGdJQUFxQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWMsR0FBRyxNQUFNO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1VSTFNlYXJjaFBhcmFtcy5qcz81MDZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFVSTFNlYXJjaFBhcmFtcyA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBmYXN0X3F1ZXJ5c3RyaW5nXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZmFzdC1xdWVyeXN0cmluZ1wiKSk7XG5jb25zdCBJdGVyYXRvck9iamVjdF9qc18xID0gcmVxdWlyZShcIi4vSXRlcmF0b3JPYmplY3QuanNcIik7XG5mdW5jdGlvbiBpc1VSTFNlYXJjaFBhcmFtcyh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZT8uZW50cmllcyAhPSBudWxsO1xufVxuY2xhc3MgUG9ueWZpbGxVUkxTZWFyY2hQYXJhbXMge1xuICAgIHBhcmFtcztcbiAgICBjb25zdHJ1Y3Rvcihpbml0KSB7XG4gICAgICAgIGlmIChpbml0KSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGluaXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSBmYXN0X3F1ZXJ5c3RyaW5nXzEuZGVmYXVsdC5wYXJzZShpbml0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoaW5pdCkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBhcmFtcyA9IHt9O1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIGluaXQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXJhbXNba2V5XSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGlzVVJMU2VhcmNoUGFyYW1zKGluaXQpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSB7fTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBpbml0LmVudHJpZXMoKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBhcmFtc1trZXldID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSBpbml0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSB7fTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhcHBlbmQobmFtZSwgdmFsdWUpIHtcbiAgICAgICAgY29uc3QgZXhpc3RpbmdWYWx1ZSA9IHRoaXMucGFyYW1zW25hbWVdO1xuICAgICAgICBjb25zdCBmaW5hbFZhbHVlID0gZXhpc3RpbmdWYWx1ZSA/IGAke2V4aXN0aW5nVmFsdWV9LCR7dmFsdWV9YCA6IHZhbHVlO1xuICAgICAgICB0aGlzLnBhcmFtc1tuYW1lXSA9IGZpbmFsVmFsdWU7XG4gICAgfVxuICAgIGRlbGV0ZShuYW1lKSB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLnBhcmFtc1tuYW1lXTtcbiAgICB9XG4gICAgZ2V0KG5hbWUpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnBhcmFtc1tuYW1lXTtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWVbMF0gfHwgbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWUgfHwgbnVsbDtcbiAgICB9XG4gICAgZ2V0QWxsKG5hbWUpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnBhcmFtc1tuYW1lXTtcbiAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlID8gW3ZhbHVlXSA6IFtdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgaGFzKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIG5hbWUgaW4gdGhpcy5wYXJhbXM7XG4gICAgfVxuICAgIHNldChuYW1lLCB2YWx1ZSkge1xuICAgICAgICB0aGlzLnBhcmFtc1tuYW1lXSA9IHZhbHVlO1xuICAgIH1cbiAgICBzb3J0KCkge1xuICAgICAgICBjb25zdCBzb3J0ZWRLZXlzID0gT2JqZWN0LmtleXModGhpcy5wYXJhbXMpLnNvcnQoKTtcbiAgICAgICAgY29uc3Qgc29ydGVkUGFyYW1zID0ge307XG4gICAgICAgIGZvciAoY29uc3Qga2V5IG9mIHNvcnRlZEtleXMpIHtcbiAgICAgICAgICAgIHNvcnRlZFBhcmFtc1trZXldID0gdGhpcy5wYXJhbXNba2V5XTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBhcmFtcyA9IHNvcnRlZFBhcmFtcztcbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiBmYXN0X3F1ZXJ5c3RyaW5nXzEuZGVmYXVsdC5zdHJpbmdpZnkodGhpcy5wYXJhbXMpO1xuICAgIH1cbiAgICAqX2tleXMoKSB7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IGluIHRoaXMucGFyYW1zKSB7XG4gICAgICAgICAgICB5aWVsZCBrZXk7XG4gICAgICAgIH1cbiAgICB9XG4gICAga2V5cygpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBJdGVyYXRvck9iamVjdF9qc18xLlBvbnlmaWxsSXRlcmF0b3JPYmplY3QodGhpcy5fa2V5cygpLCAnVVJMU2VhcmNoUGFyYW1zSXRlcmF0b3InKTtcbiAgICB9XG4gICAgKl9lbnRyaWVzKCkge1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiB0aGlzLmtleXMoKSkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnBhcmFtc1trZXldO1xuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIHlpZWxkIFtrZXksIGl0ZW1dO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHlpZWxkIFtrZXksIHZhbHVlXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBlbnRyaWVzKCkge1xuICAgICAgICByZXR1cm4gbmV3IEl0ZXJhdG9yT2JqZWN0X2pzXzEuUG9ueWZpbGxJdGVyYXRvck9iamVjdCh0aGlzLl9lbnRyaWVzKCksICdVUkxTZWFyY2hQYXJhbXNJdGVyYXRvcicpO1xuICAgIH1cbiAgICAqX3ZhbHVlcygpIHtcbiAgICAgICAgZm9yIChjb25zdCBbLCB2YWx1ZV0gb2YgdGhpcykge1xuICAgICAgICAgICAgeWllbGQgdmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdmFsdWVzKCkge1xuICAgICAgICByZXR1cm4gbmV3IEl0ZXJhdG9yT2JqZWN0X2pzXzEuUG9ueWZpbGxJdGVyYXRvck9iamVjdCh0aGlzLl92YWx1ZXMoKSwgJ1VSTFNlYXJjaFBhcmFtc0l0ZXJhdG9yJyk7XG4gICAgfVxuICAgIFtTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbnRyaWVzKCk7XG4gICAgfVxuICAgIGZvckVhY2goY2FsbGJhY2spIHtcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgdGhpcykge1xuICAgICAgICAgICAgY2FsbGJhY2sodmFsdWUsIGtleSwgdGhpcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IHNpemUoKSB7XG4gICAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLnBhcmFtcykubGVuZ3RoO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxVUkxTZWFyY2hQYXJhbXMgPSBQb255ZmlsbFVSTFNlYXJjaFBhcmFtcztcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillWritableStream = void 0;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nclass PonyfillWritableStream {\n    writable;\n    constructor(underlyingSink) {\n        if (underlyingSink instanceof stream_1.Writable) {\n            this.writable = underlyingSink;\n        }\n        else if (underlyingSink) {\n            const writable = new stream_1.Writable({\n                write(chunk, _encoding, callback) {\n                    try {\n                        const result = underlyingSink.write?.(chunk, controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n                final(callback) {\n                    const result = underlyingSink.close?.();\n                    if (result instanceof Promise) {\n                        result.then(() => {\n                            callback();\n                        }, err => {\n                            callback(err);\n                        });\n                    }\n                    else {\n                        callback();\n                    }\n                },\n            });\n            this.writable = writable;\n            let onabort;\n            let reason;\n            const controller = {\n                signal: {\n                    any(signals) {\n                        return AbortSignal.any([...signals]);\n                    },\n                    get reason() {\n                        return reason;\n                    },\n                    get aborted() {\n                        return writable.destroyed;\n                    },\n                    addEventListener: (_event, eventListener) => {\n                        writable.once('error', eventListener);\n                        writable.once('close', eventListener);\n                    },\n                    removeEventListener: (_event, eventListener) => {\n                        writable.off('error', eventListener);\n                        writable.off('close', eventListener);\n                    },\n                    dispatchEvent: (_event) => {\n                        return false;\n                    },\n                    get onabort() {\n                        return onabort;\n                    },\n                    set onabort(value) {\n                        if (onabort) {\n                            this.removeEventListener('abort', onabort);\n                        }\n                        onabort = value;\n                        if (onabort) {\n                            this.addEventListener('abort', onabort);\n                        }\n                    },\n                    throwIfAborted() {\n                        if (writable.destroyed) {\n                            throw reason;\n                        }\n                    },\n                },\n                error: e => {\n                    this.writable.destroy(e);\n                },\n            };\n            this.writable.once('error', err => {\n                reason = err;\n            });\n        }\n        else {\n            this.writable = new stream_1.Writable();\n        }\n    }\n    getWriter() {\n        const writable = this.writable;\n        return {\n            closed: new Promise(resolve => {\n                writable.once('close', () => {\n                    resolve(undefined);\n                });\n            }),\n            get desiredSize() {\n                return writable.writableLength;\n            },\n            ready: new Promise(resolve => {\n                writable.once('drain', () => {\n                    resolve(undefined);\n                });\n            }),\n            releaseLock() {\n                // no-op\n            },\n            write(chunk) {\n                if (chunk == null) {\n                    return (0, utils_js_1.fakePromise)(undefined);\n                }\n                return new Promise((resolve, reject) => {\n                    writable.write(chunk, (err) => {\n                        if (err) {\n                            reject(err);\n                        }\n                        else {\n                            resolve();\n                        }\n                    });\n                });\n            },\n            close() {\n                if (!writable.errored && writable.closed) {\n                    return (0, utils_js_1.fakePromise)(undefined);\n                }\n                return new Promise((resolve, reject) => {\n                    if (writable.errored) {\n                        reject(writable.errored);\n                    }\n                    else {\n                        writable.end((err) => {\n                            if (err) {\n                                reject(err);\n                            }\n                            else {\n                                resolve();\n                            }\n                        });\n                    }\n                });\n            },\n            abort(reason) {\n                return new Promise(resolve => {\n                    writable.destroy(reason);\n                    writable.once('close', resolve);\n                });\n            },\n        };\n    }\n    close() {\n        if (!this.writable.errored && this.writable.closed) {\n            return (0, utils_js_1.fakePromise)(undefined);\n        }\n        return new Promise((resolve, reject) => {\n            if (this.writable.errored) {\n                reject(this.writable.errored);\n            }\n            else {\n                this.writable.end((err) => {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve();\n                    }\n                });\n            }\n        });\n    }\n    abort(reason) {\n        return new Promise(resolve => {\n            this.writable.destroy(reason);\n            this.writable.once('close', resolve);\n        });\n    }\n    locked = false;\n}\nexports.PonyfillWritableStream = PonyfillWritableStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/fetch.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/fetch.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchPonyfill = fetchPonyfill;\nconst fs_1 = __webpack_require__(/*! fs */ \"fs\");\nconst url_1 = __webpack_require__(/*! url */ \"url\");\nconst fetchCurl_js_1 = __webpack_require__(/*! ./fetchCurl.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js\");\nconst fetchNodeHttp_js_1 = __webpack_require__(/*! ./fetchNodeHttp.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js\");\nconst Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nconst BASE64_SUFFIX = ';base64';\nfunction getResponseForFile(url) {\n    const path = (0, url_1.fileURLToPath)(url);\n    const readable = (0, fs_1.createReadStream)(path);\n    return new Response_js_1.PonyfillResponse(readable);\n}\nfunction getResponseForDataUri(url) {\n    const [mimeType = 'text/plain', ...datas] = url.substring(5).split(',');\n    const data = decodeURIComponent(datas.join(','));\n    if (mimeType.endsWith(BASE64_SUFFIX)) {\n        const buffer = Buffer.from(data, 'base64url');\n        const realMimeType = mimeType.slice(0, -BASE64_SUFFIX.length);\n        return new Response_js_1.PonyfillResponse(buffer, {\n            status: 200,\n            statusText: 'OK',\n            headers: {\n                'content-type': realMimeType,\n            },\n        });\n    }\n    return new Response_js_1.PonyfillResponse(data, {\n        status: 200,\n        statusText: 'OK',\n        headers: {\n            'content-type': mimeType,\n        },\n    });\n}\nfunction getResponseForBlob(url) {\n    const blob = URL_js_1.PonyfillURL.getBlobFromURL(url);\n    if (!blob) {\n        throw new TypeError('Invalid Blob URL');\n    }\n    return new Response_js_1.PonyfillResponse(blob, {\n        status: 200,\n        headers: {\n            'content-type': blob.type,\n            'content-length': blob.size.toString(),\n        },\n    });\n}\nfunction isURL(obj) {\n    return obj != null && obj.href != null;\n}\nfunction fetchPonyfill(info, init) {\n    if (typeof info === 'string' || isURL(info)) {\n        const ponyfillRequest = new Request_js_1.PonyfillRequest(info, init);\n        return fetchPonyfill(ponyfillRequest);\n    }\n    const fetchRequest = info;\n    if (fetchRequest.url.startsWith('data:')) {\n        const response = getResponseForDataUri(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (fetchRequest.url.startsWith('file:')) {\n        const response = getResponseForFile(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (fetchRequest.url.startsWith('blob:')) {\n        const response = getResponseForBlob(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (globalThis.libcurl && !fetchRequest.agent) {\n        return (0, fetchCurl_js_1.fetchCurl)(fetchRequest);\n    }\n    return (0, fetchNodeHttp_js_1.fetchNodeHttp)(fetchRequest);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL2ZldGNoLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQixhQUFhLG1CQUFPLENBQUMsY0FBSTtBQUN6QixjQUFjLG1CQUFPLENBQUMsZ0JBQUs7QUFDM0IsdUJBQXVCLG1CQUFPLENBQUMsc0hBQWdCO0FBQy9DLDJCQUEyQixtQkFBTyxDQUFDLDhIQUFvQjtBQUN2RCxxQkFBcUIsbUJBQU8sQ0FBQyxrSEFBYztBQUMzQyxzQkFBc0IsbUJBQU8sQ0FBQyxvSEFBZTtBQUM3QyxpQkFBaUIsbUJBQU8sQ0FBQywwR0FBVTtBQUNuQyxtQkFBbUIsbUJBQU8sQ0FBQyw4R0FBWTtBQUN2Qyx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9zZXJ2ZXIvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9mZXRjaC5qcz84ODc3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5mZXRjaFBvbnlmaWxsID0gZmV0Y2hQb255ZmlsbDtcbmNvbnN0IGZzXzEgPSByZXF1aXJlKFwiZnNcIik7XG5jb25zdCB1cmxfMSA9IHJlcXVpcmUoXCJ1cmxcIik7XG5jb25zdCBmZXRjaEN1cmxfanNfMSA9IHJlcXVpcmUoXCIuL2ZldGNoQ3VybC5qc1wiKTtcbmNvbnN0IGZldGNoTm9kZUh0dHBfanNfMSA9IHJlcXVpcmUoXCIuL2ZldGNoTm9kZUh0dHAuanNcIik7XG5jb25zdCBSZXF1ZXN0X2pzXzEgPSByZXF1aXJlKFwiLi9SZXF1ZXN0LmpzXCIpO1xuY29uc3QgUmVzcG9uc2VfanNfMSA9IHJlcXVpcmUoXCIuL1Jlc3BvbnNlLmpzXCIpO1xuY29uc3QgVVJMX2pzXzEgPSByZXF1aXJlKFwiLi9VUkwuanNcIik7XG5jb25zdCB1dGlsc19qc18xID0gcmVxdWlyZShcIi4vdXRpbHMuanNcIik7XG5jb25zdCBCQVNFNjRfU1VGRklYID0gJztiYXNlNjQnO1xuZnVuY3Rpb24gZ2V0UmVzcG9uc2VGb3JGaWxlKHVybCkge1xuICAgIGNvbnN0IHBhdGggPSAoMCwgdXJsXzEuZmlsZVVSTFRvUGF0aCkodXJsKTtcbiAgICBjb25zdCByZWFkYWJsZSA9ICgwLCBmc18xLmNyZWF0ZVJlYWRTdHJlYW0pKHBhdGgpO1xuICAgIHJldHVybiBuZXcgUmVzcG9uc2VfanNfMS5Qb255ZmlsbFJlc3BvbnNlKHJlYWRhYmxlKTtcbn1cbmZ1bmN0aW9uIGdldFJlc3BvbnNlRm9yRGF0YVVyaSh1cmwpIHtcbiAgICBjb25zdCBbbWltZVR5cGUgPSAndGV4dC9wbGFpbicsIC4uLmRhdGFzXSA9IHVybC5zdWJzdHJpbmcoNSkuc3BsaXQoJywnKTtcbiAgICBjb25zdCBkYXRhID0gZGVjb2RlVVJJQ29tcG9uZW50KGRhdGFzLmpvaW4oJywnKSk7XG4gICAgaWYgKG1pbWVUeXBlLmVuZHNXaXRoKEJBU0U2NF9TVUZGSVgpKSB7XG4gICAgICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5mcm9tKGRhdGEsICdiYXNlNjR1cmwnKTtcbiAgICAgICAgY29uc3QgcmVhbE1pbWVUeXBlID0gbWltZVR5cGUuc2xpY2UoMCwgLUJBU0U2NF9TVUZGSVgubGVuZ3RoKTtcbiAgICAgICAgcmV0dXJuIG5ldyBSZXNwb25zZV9qc18xLlBvbnlmaWxsUmVzcG9uc2UoYnVmZmVyLCB7XG4gICAgICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgICAgIHN0YXR1c1RleHQ6ICdPSycsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6IHJlYWxNaW1lVHlwZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlX2pzXzEuUG9ueWZpbGxSZXNwb25zZShkYXRhLCB7XG4gICAgICAgIHN0YXR1czogMjAwLFxuICAgICAgICBzdGF0dXNUZXh0OiAnT0snLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnY29udGVudC10eXBlJzogbWltZVR5cGUsXG4gICAgICAgIH0sXG4gICAgfSk7XG59XG5mdW5jdGlvbiBnZXRSZXNwb25zZUZvckJsb2IodXJsKSB7XG4gICAgY29uc3QgYmxvYiA9IFVSTF9qc18xLlBvbnlmaWxsVVJMLmdldEJsb2JGcm9tVVJMKHVybCk7XG4gICAgaWYgKCFibG9iKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgQmxvYiBVUkwnKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZV9qc18xLlBvbnlmaWxsUmVzcG9uc2UoYmxvYiwge1xuICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6IGJsb2IudHlwZSxcbiAgICAgICAgICAgICdjb250ZW50LWxlbmd0aCc6IGJsb2Iuc2l6ZS50b1N0cmluZygpLFxuICAgICAgICB9LFxuICAgIH0pO1xufVxuZnVuY3Rpb24gaXNVUkwob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAhPSBudWxsICYmIG9iai5ocmVmICE9IG51bGw7XG59XG5mdW5jdGlvbiBmZXRjaFBvbnlmaWxsKGluZm8sIGluaXQpIHtcbiAgICBpZiAodHlwZW9mIGluZm8gPT09ICdzdHJpbmcnIHx8IGlzVVJMKGluZm8pKSB7XG4gICAgICAgIGNvbnN0IHBvbnlmaWxsUmVxdWVzdCA9IG5ldyBSZXF1ZXN0X2pzXzEuUG9ueWZpbGxSZXF1ZXN0KGluZm8sIGluaXQpO1xuICAgICAgICByZXR1cm4gZmV0Y2hQb255ZmlsbChwb255ZmlsbFJlcXVlc3QpO1xuICAgIH1cbiAgICBjb25zdCBmZXRjaFJlcXVlc3QgPSBpbmZvO1xuICAgIGlmIChmZXRjaFJlcXVlc3QudXJsLnN0YXJ0c1dpdGgoJ2RhdGE6JykpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBnZXRSZXNwb25zZUZvckRhdGFVcmkoZmV0Y2hSZXF1ZXN0LnVybCk7XG4gICAgICAgIHJldHVybiAoMCwgdXRpbHNfanNfMS5mYWtlUHJvbWlzZSkocmVzcG9uc2UpO1xuICAgIH1cbiAgICBpZiAoZmV0Y2hSZXF1ZXN0LnVybC5zdGFydHNXaXRoKCdmaWxlOicpKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gZ2V0UmVzcG9uc2VGb3JGaWxlKGZldGNoUmVxdWVzdC51cmwpO1xuICAgICAgICByZXR1cm4gKDAsIHV0aWxzX2pzXzEuZmFrZVByb21pc2UpKHJlc3BvbnNlKTtcbiAgICB9XG4gICAgaWYgKGZldGNoUmVxdWVzdC51cmwuc3RhcnRzV2l0aCgnYmxvYjonKSkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGdldFJlc3BvbnNlRm9yQmxvYihmZXRjaFJlcXVlc3QudXJsKTtcbiAgICAgICAgcmV0dXJuICgwLCB1dGlsc19qc18xLmZha2VQcm9taXNlKShyZXNwb25zZSk7XG4gICAgfVxuICAgIGlmIChnbG9iYWxUaGlzLmxpYmN1cmwgJiYgIWZldGNoUmVxdWVzdC5hZ2VudCkge1xuICAgICAgICByZXR1cm4gKDAsIGZldGNoQ3VybF9qc18xLmZldGNoQ3VybCkoZmV0Y2hSZXF1ZXN0KTtcbiAgICB9XG4gICAgcmV0dXJuICgwLCBmZXRjaE5vZGVIdHRwX2pzXzEuZmV0Y2hOb2RlSHR0cCkoZmV0Y2hSZXF1ZXN0KTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/fetch.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchCurl = fetchCurl;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst tls_1 = __webpack_require__(/*! tls */ \"tls\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction fetchCurl(fetchRequest) {\n    const { Curl, CurlFeature, CurlPause, CurlProgressFunc } = globalThis['libcurl'];\n    const curlHandle = new Curl();\n    curlHandle.enable(CurlFeature.NoDataParsing);\n    curlHandle.setOpt('URL', fetchRequest.url);\n    if (process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0') {\n        curlHandle.setOpt('SSL_VERIFYPEER', false);\n    }\n    if (process.env.NODE_EXTRA_CA_CERTS) {\n        curlHandle.setOpt('CAINFO', process.env.NODE_EXTRA_CA_CERTS);\n    }\n    else {\n        curlHandle.setOpt('CAINFO_BLOB', tls_1.rootCertificates.join('\\n'));\n    }\n    curlHandle.enable(CurlFeature.StreamResponse);\n    curlHandle.setStreamProgressCallback(function () {\n        return fetchRequest['_signal']?.aborted\n            ? process.env.DEBUG\n                ? CurlProgressFunc.Continue\n                : 1\n            : 0;\n    });\n    if (fetchRequest['bodyType'] === 'String') {\n        curlHandle.setOpt('POSTFIELDS', fetchRequest['bodyInit']);\n    }\n    else {\n        const nodeReadable = (fetchRequest.body != null\n            ? (0, utils_js_1.isNodeReadable)(fetchRequest.body)\n                ? fetchRequest.body\n                : stream_1.Readable.from(fetchRequest.body)\n            : null);\n        if (nodeReadable) {\n            curlHandle.setOpt('UPLOAD', true);\n            curlHandle.setUploadStream(nodeReadable);\n        }\n    }\n    if (process.env.DEBUG) {\n        curlHandle.setOpt('VERBOSE', true);\n    }\n    curlHandle.setOpt('TRANSFER_ENCODING', false);\n    curlHandle.setOpt('HTTP_TRANSFER_DECODING', true);\n    curlHandle.setOpt('FOLLOWLOCATION', fetchRequest.redirect === 'follow');\n    curlHandle.setOpt('MAXREDIRS', 20);\n    curlHandle.setOpt('ACCEPT_ENCODING', '');\n    curlHandle.setOpt('CUSTOMREQUEST', fetchRequest.method);\n    const headersSerializer = fetchRequest.headersSerializer || utils_js_1.defaultHeadersSerializer;\n    let size;\n    const curlHeaders = headersSerializer(fetchRequest.headers, value => {\n        size = Number(value);\n    });\n    if (size != null) {\n        curlHandle.setOpt('INFILESIZE', size);\n    }\n    curlHandle.setOpt('HTTPHEADER', curlHeaders);\n    curlHandle.enable(CurlFeature.NoHeaderParsing);\n    const deferredPromise = (0, utils_js_1.createDeferredPromise)();\n    let streamResolved;\n    if (fetchRequest['_signal']) {\n        fetchRequest['_signal'].onabort = () => {\n            if (curlHandle.isOpen) {\n                try {\n                    curlHandle.pause(CurlPause.Recv);\n                }\n                catch (e) {\n                    deferredPromise.reject(e);\n                }\n            }\n        };\n    }\n    curlHandle.once('end', function endListener() {\n        try {\n            curlHandle.close();\n        }\n        catch (e) {\n            deferredPromise.reject(e);\n        }\n    });\n    curlHandle.once('error', function errorListener(error) {\n        if (streamResolved && !streamResolved.closed && !streamResolved.destroyed) {\n            streamResolved.destroy(error);\n        }\n        else {\n            if (error.message === 'Operation was aborted by an application callback') {\n                error.message = 'The operation was aborted.';\n            }\n            deferredPromise.reject(error);\n        }\n        try {\n            curlHandle.close();\n        }\n        catch (e) {\n            deferredPromise.reject(e);\n        }\n    });\n    curlHandle.once('stream', function streamListener(stream, status, headersBuf) {\n        const outputStream = new stream_1.PassThrough();\n        stream_1.promises\n            .pipeline(stream, outputStream, {\n            end: true,\n            signal: fetchRequest['_signal'] ?? undefined,\n        })\n            .then(() => {\n            if (!stream.destroyed) {\n                stream.resume();\n            }\n        })\n            .catch(deferredPromise.reject);\n        const headersFlat = headersBuf\n            .toString('utf8')\n            .split(/\\r?\\n|\\r/g)\n            .filter(headerFilter => {\n            if (headerFilter && !headerFilter.startsWith('HTTP/')) {\n                if (fetchRequest.redirect === 'error' &&\n                    (headerFilter.includes('location') || headerFilter.includes('Location'))) {\n                    if (!stream.destroyed) {\n                        stream.resume();\n                    }\n                    outputStream.destroy();\n                    deferredPromise.reject(new Error('redirect is not allowed'));\n                }\n                return true;\n            }\n            return false;\n        });\n        const headersInit = headersFlat.map(headerFlat => headerFlat.split(/:\\s(.+)/).slice(0, 2));\n        const ponyfillResponse = new Response_js_1.PonyfillResponse(outputStream, {\n            status,\n            headers: headersInit,\n            url: curlHandle.getInfo(Curl.info.REDIRECT_URL)?.toString() || fetchRequest.url,\n            redirected: Number(curlHandle.getInfo(Curl.info.REDIRECT_COUNT)) > 0,\n        });\n        deferredPromise.resolve(ponyfillResponse);\n        streamResolved = outputStream;\n    });\n    let count = 0;\n    try {\n        count = Curl.getCount();\n    }\n    catch { }\n    if (count > 0) {\n        setImmediate(() => {\n            curlHandle.perform();\n        });\n    }\n    else {\n        curlHandle.perform();\n    }\n    return deferredPromise.promise;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchNodeHttp = fetchNodeHttp;\nconst http_1 = __webpack_require__(/*! http */ \"http\");\nconst https_1 = __webpack_require__(/*! https */ \"https\");\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst zlib_1 = __webpack_require__(/*! zlib */ \"zlib\");\nconst Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction getRequestFnForProtocol(url) {\n    if (url.startsWith('http:')) {\n        return http_1.request;\n    }\n    else if (url.startsWith('https:')) {\n        return https_1.request;\n    }\n    throw new Error(`Unsupported protocol: ${url.split(':')[0] || url}`);\n}\nfunction fetchNodeHttp(fetchRequest) {\n    return new Promise((resolve, reject) => {\n        try {\n            const requestFn = getRequestFnForProtocol(fetchRequest.url);\n            const nodeReadable = (fetchRequest.body != null\n                ? (0, utils_js_1.isNodeReadable)(fetchRequest.body)\n                    ? fetchRequest.body\n                    : stream_1.Readable.from(fetchRequest.body)\n                : null);\n            const headersSerializer = fetchRequest.headersSerializer || utils_js_1.getHeadersObj;\n            const nodeHeaders = headersSerializer(fetchRequest.headers);\n            if (nodeHeaders['accept-encoding'] == null) {\n                nodeHeaders['accept-encoding'] = 'gzip, deflate, br';\n            }\n            const nodeRequest = requestFn(fetchRequest.url, {\n                method: fetchRequest.method,\n                headers: nodeHeaders,\n                signal: fetchRequest['_signal'] ?? undefined,\n                agent: fetchRequest.agent,\n            });\n            nodeRequest.once('response', nodeResponse => {\n                let outputStream;\n                const contentEncoding = nodeResponse.headers['content-encoding'];\n                switch (contentEncoding) {\n                    case 'x-gzip':\n                    case 'gzip':\n                        outputStream = (0, zlib_1.createGunzip)();\n                        break;\n                    case 'x-deflate':\n                    case 'deflate':\n                        outputStream = (0, zlib_1.createInflate)();\n                        break;\n                    case 'x-deflate-raw':\n                    case 'deflate-raw':\n                        outputStream = (0, zlib_1.createInflateRaw)();\n                        break;\n                    case 'br':\n                        outputStream = (0, zlib_1.createBrotliDecompress)();\n                        break;\n                    default:\n                        outputStream = new stream_1.PassThrough();\n                }\n                if (nodeResponse.headers.location) {\n                    if (fetchRequest.redirect === 'error') {\n                        const redirectError = new Error('Redirects are not allowed');\n                        reject(redirectError);\n                        nodeResponse.resume();\n                        return;\n                    }\n                    if (fetchRequest.redirect === 'follow') {\n                        const redirectedUrl = new URL_js_1.PonyfillURL(nodeResponse.headers.location, fetchRequest.url);\n                        const redirectResponse$ = fetchNodeHttp(new Request_js_1.PonyfillRequest(redirectedUrl, fetchRequest));\n                        resolve(redirectResponse$.then(redirectResponse => {\n                            redirectResponse.redirected = true;\n                            return redirectResponse;\n                        }));\n                        nodeResponse.resume();\n                        return;\n                    }\n                }\n                stream_1.promises\n                    .pipeline(nodeResponse, outputStream, {\n                    signal: fetchRequest['_signal'] ?? undefined,\n                    end: true,\n                })\n                    .then(() => {\n                    if (!nodeResponse.destroyed) {\n                        nodeResponse.resume();\n                    }\n                })\n                    .catch(reject);\n                const ponyfillResponse = new Response_js_1.PonyfillResponse(outputStream, {\n                    status: nodeResponse.statusCode,\n                    statusText: nodeResponse.statusMessage,\n                    headers: nodeResponse.headers,\n                    url: fetchRequest.url,\n                });\n                resolve(ponyfillResponse);\n            });\n            nodeRequest.once('error', reject);\n            if (nodeReadable) {\n                nodeReadable.pipe(nodeRequest);\n            }\n            else {\n                nodeRequest.end();\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/index.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TextEncoderStream = exports.TextDecoderStream = exports.IteratorObject = exports.DecompressionStream = exports.CompressionStream = exports.TransformStream = exports.WritableStream = exports.URLSearchParams = exports.URL = exports.btoa = exports.TextDecoder = exports.TextEncoder = exports.Blob = exports.FormData = exports.File = exports.ReadableStream = exports.Response = exports.Request = exports.Body = exports.Headers = exports.fetch = void 0;\nvar fetch_js_1 = __webpack_require__(/*! ./fetch.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/fetch.js\");\nObject.defineProperty(exports, \"fetch\", ({ enumerable: true, get: function () { return fetch_js_1.fetchPonyfill; } }));\nvar Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nObject.defineProperty(exports, \"Headers\", ({ enumerable: true, get: function () { return Headers_js_1.PonyfillHeaders; } }));\nvar Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nObject.defineProperty(exports, \"Body\", ({ enumerable: true, get: function () { return Body_js_1.PonyfillBody; } }));\nvar Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nObject.defineProperty(exports, \"Request\", ({ enumerable: true, get: function () { return Request_js_1.PonyfillRequest; } }));\nvar Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nObject.defineProperty(exports, \"Response\", ({ enumerable: true, get: function () { return Response_js_1.PonyfillResponse; } }));\nvar ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nObject.defineProperty(exports, \"ReadableStream\", ({ enumerable: true, get: function () { return ReadableStream_js_1.PonyfillReadableStream; } }));\nvar File_js_1 = __webpack_require__(/*! ./File.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/File.js\");\nObject.defineProperty(exports, \"File\", ({ enumerable: true, get: function () { return File_js_1.PonyfillFile; } }));\nvar FormData_js_1 = __webpack_require__(/*! ./FormData.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/FormData.js\");\nObject.defineProperty(exports, \"FormData\", ({ enumerable: true, get: function () { return FormData_js_1.PonyfillFormData; } }));\nvar Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nObject.defineProperty(exports, \"Blob\", ({ enumerable: true, get: function () { return Blob_js_1.PonyfillBlob; } }));\nvar TextEncoderDecoder_js_1 = __webpack_require__(/*! ./TextEncoderDecoder.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js\");\nObject.defineProperty(exports, \"TextEncoder\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillTextEncoder; } }));\nObject.defineProperty(exports, \"TextDecoder\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillTextDecoder; } }));\nObject.defineProperty(exports, \"btoa\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillBtoa; } }));\nvar URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nObject.defineProperty(exports, \"URL\", ({ enumerable: true, get: function () { return URL_js_1.PonyfillURL; } }));\nvar URLSearchParams_js_1 = __webpack_require__(/*! ./URLSearchParams.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\");\nObject.defineProperty(exports, \"URLSearchParams\", ({ enumerable: true, get: function () { return URLSearchParams_js_1.PonyfillURLSearchParams; } }));\nvar WritableStream_js_1 = __webpack_require__(/*! ./WritableStream.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\");\nObject.defineProperty(exports, \"WritableStream\", ({ enumerable: true, get: function () { return WritableStream_js_1.PonyfillWritableStream; } }));\nvar TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nObject.defineProperty(exports, \"TransformStream\", ({ enumerable: true, get: function () { return TransformStream_js_1.PonyfillTransformStream; } }));\nvar CompressionStream_js_1 = __webpack_require__(/*! ./CompressionStream.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js\");\nObject.defineProperty(exports, \"CompressionStream\", ({ enumerable: true, get: function () { return CompressionStream_js_1.PonyfillCompressionStream; } }));\nvar DecompressionStream_js_1 = __webpack_require__(/*! ./DecompressionStream.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js\");\nObject.defineProperty(exports, \"DecompressionStream\", ({ enumerable: true, get: function () { return DecompressionStream_js_1.PonyfillDecompressionStream; } }));\nvar IteratorObject_js_1 = __webpack_require__(/*! ./IteratorObject.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/IteratorObject.js\");\nObject.defineProperty(exports, \"IteratorObject\", ({ enumerable: true, get: function () { return IteratorObject_js_1.PonyfillIteratorObject; } }));\nvar TextEncoderDecoderStream_js_1 = __webpack_require__(/*! ./TextEncoderDecoderStream.js */ \"(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoderStream.js\");\nObject.defineProperty(exports, \"TextDecoderStream\", ({ enumerable: true, get: function () { return TextEncoderDecoderStream_js_1.PonyfillTextDecoderStream; } }));\nObject.defineProperty(exports, \"TextEncoderStream\", ({ enumerable: true, get: function () { return TextEncoderDecoderStream_js_1.PonyfillTextEncoderStream; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QixHQUFHLHlCQUF5QixHQUFHLHNCQUFzQixHQUFHLDJCQUEyQixHQUFHLHlCQUF5QixHQUFHLHVCQUF1QixHQUFHLHNCQUFzQixHQUFHLHVCQUF1QixHQUFHLFdBQVcsR0FBRyxZQUFZLEdBQUcsbUJBQW1CLEdBQUcsbUJBQW1CLEdBQUcsWUFBWSxHQUFHLGdCQUFnQixHQUFHLFlBQVksR0FBRyxzQkFBc0IsR0FBRyxnQkFBZ0IsR0FBRyxlQUFlLEdBQUcsWUFBWSxHQUFHLGVBQWUsR0FBRyxhQUFhO0FBQzliLGlCQUFpQixtQkFBTyxDQUFDLDhHQUFZO0FBQ3JDLHlDQUF3QyxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUNwSCxtQkFBbUIsbUJBQU8sQ0FBQyxrSEFBYztBQUN6QywyQ0FBMEMsRUFBRSxxQ0FBcUMsd0NBQXdDLEVBQUM7QUFDMUgsZ0JBQWdCLG1CQUFPLENBQUMsNEdBQVc7QUFDbkMsd0NBQXVDLEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDO0FBQ2pILG1CQUFtQixtQkFBTyxDQUFDLGtIQUFjO0FBQ3pDLDJDQUEwQyxFQUFFLHFDQUFxQyx3Q0FBd0MsRUFBQztBQUMxSCxvQkFBb0IsbUJBQU8sQ0FBQyxvSEFBZTtBQUMzQyw0Q0FBMkMsRUFBRSxxQ0FBcUMsMENBQTBDLEVBQUM7QUFDN0gsMEJBQTBCLG1CQUFPLENBQUMsZ0lBQXFCO0FBQ3ZELGtEQUFpRCxFQUFFLHFDQUFxQyxzREFBc0QsRUFBQztBQUMvSSxnQkFBZ0IsbUJBQU8sQ0FBQyw0R0FBVztBQUNuQyx3Q0FBdUMsRUFBRSxxQ0FBcUMsa0NBQWtDLEVBQUM7QUFDakgsb0JBQW9CLG1CQUFPLENBQUMsb0hBQWU7QUFDM0MsNENBQTJDLEVBQUUscUNBQXFDLDBDQUEwQyxFQUFDO0FBQzdILGdCQUFnQixtQkFBTyxDQUFDLDRHQUFXO0FBQ25DLHdDQUF1QyxFQUFFLHFDQUFxQyxrQ0FBa0MsRUFBQztBQUNqSCw4QkFBOEIsbUJBQU8sQ0FBQyx3SUFBeUI7QUFDL0QsK0NBQThDLEVBQUUscUNBQXFDLHVEQUF1RCxFQUFDO0FBQzdJLCtDQUE4QyxFQUFFLHFDQUFxQyx1REFBdUQsRUFBQztBQUM3SSx3Q0FBdUMsRUFBRSxxQ0FBcUMsZ0RBQWdELEVBQUM7QUFDL0gsZUFBZSxtQkFBTyxDQUFDLDBHQUFVO0FBQ2pDLHVDQUFzQyxFQUFFLHFDQUFxQyxnQ0FBZ0MsRUFBQztBQUM5RywyQkFBMkIsbUJBQU8sQ0FBQyxrSUFBc0I7QUFDekQsbURBQWtELEVBQUUscUNBQXFDLHdEQUF3RCxFQUFDO0FBQ2xKLDBCQUEwQixtQkFBTyxDQUFDLGdJQUFxQjtBQUN2RCxrREFBaUQsRUFBRSxxQ0FBcUMsc0RBQXNELEVBQUM7QUFDL0ksMkJBQTJCLG1CQUFPLENBQUMsa0lBQXNCO0FBQ3pELG1EQUFrRCxFQUFFLHFDQUFxQyx3REFBd0QsRUFBQztBQUNsSiw2QkFBNkIsbUJBQU8sQ0FBQyxzSUFBd0I7QUFDN0QscURBQW9ELEVBQUUscUNBQXFDLDREQUE0RCxFQUFDO0FBQ3hKLCtCQUErQixtQkFBTyxDQUFDLDBJQUEwQjtBQUNqRSx1REFBc0QsRUFBRSxxQ0FBcUMsZ0VBQWdFLEVBQUM7QUFDOUosMEJBQTBCLG1CQUFPLENBQUMsZ0lBQXFCO0FBQ3ZELGtEQUFpRCxFQUFFLHFDQUFxQyxzREFBc0QsRUFBQztBQUMvSSxvQ0FBb0MsbUJBQU8sQ0FBQyxvSkFBK0I7QUFDM0UscURBQW9ELEVBQUUscUNBQXFDLG1FQUFtRSxFQUFDO0FBQy9KLHFEQUFvRCxFQUFFLHFDQUFxQyxtRUFBbUUsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvc2VydmVyL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvaW5kZXguanM/OWY0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVGV4dEVuY29kZXJTdHJlYW0gPSBleHBvcnRzLlRleHREZWNvZGVyU3RyZWFtID0gZXhwb3J0cy5JdGVyYXRvck9iamVjdCA9IGV4cG9ydHMuRGVjb21wcmVzc2lvblN0cmVhbSA9IGV4cG9ydHMuQ29tcHJlc3Npb25TdHJlYW0gPSBleHBvcnRzLlRyYW5zZm9ybVN0cmVhbSA9IGV4cG9ydHMuV3JpdGFibGVTdHJlYW0gPSBleHBvcnRzLlVSTFNlYXJjaFBhcmFtcyA9IGV4cG9ydHMuVVJMID0gZXhwb3J0cy5idG9hID0gZXhwb3J0cy5UZXh0RGVjb2RlciA9IGV4cG9ydHMuVGV4dEVuY29kZXIgPSBleHBvcnRzLkJsb2IgPSBleHBvcnRzLkZvcm1EYXRhID0gZXhwb3J0cy5GaWxlID0gZXhwb3J0cy5SZWFkYWJsZVN0cmVhbSA9IGV4cG9ydHMuUmVzcG9uc2UgPSBleHBvcnRzLlJlcXVlc3QgPSBleHBvcnRzLkJvZHkgPSBleHBvcnRzLkhlYWRlcnMgPSBleHBvcnRzLmZldGNoID0gdm9pZCAwO1xudmFyIGZldGNoX2pzXzEgPSByZXF1aXJlKFwiLi9mZXRjaC5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZldGNoXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBmZXRjaF9qc18xLmZldGNoUG9ueWZpbGw7IH0gfSk7XG52YXIgSGVhZGVyc19qc18xID0gcmVxdWlyZShcIi4vSGVhZGVycy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkhlYWRlcnNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEhlYWRlcnNfanNfMS5Qb255ZmlsbEhlYWRlcnM7IH0gfSk7XG52YXIgQm9keV9qc18xID0gcmVxdWlyZShcIi4vQm9keS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkJvZHlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEJvZHlfanNfMS5Qb255ZmlsbEJvZHk7IH0gfSk7XG52YXIgUmVxdWVzdF9qc18xID0gcmVxdWlyZShcIi4vUmVxdWVzdC5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJlcXVlc3RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFJlcXVlc3RfanNfMS5Qb255ZmlsbFJlcXVlc3Q7IH0gfSk7XG52YXIgUmVzcG9uc2VfanNfMSA9IHJlcXVpcmUoXCIuL1Jlc3BvbnNlLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUmVzcG9uc2VcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFJlc3BvbnNlX2pzXzEuUG9ueWZpbGxSZXNwb25zZTsgfSB9KTtcbnZhciBSZWFkYWJsZVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vUmVhZGFibGVTdHJlYW0uanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJSZWFkYWJsZVN0cmVhbVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gUmVhZGFibGVTdHJlYW1fanNfMS5Qb255ZmlsbFJlYWRhYmxlU3RyZWFtOyB9IH0pO1xudmFyIEZpbGVfanNfMSA9IHJlcXVpcmUoXCIuL0ZpbGUuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJGaWxlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBGaWxlX2pzXzEuUG9ueWZpbGxGaWxlOyB9IH0pO1xudmFyIEZvcm1EYXRhX2pzXzEgPSByZXF1aXJlKFwiLi9Gb3JtRGF0YS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkZvcm1EYXRhXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBGb3JtRGF0YV9qc18xLlBvbnlmaWxsRm9ybURhdGE7IH0gfSk7XG52YXIgQmxvYl9qc18xID0gcmVxdWlyZShcIi4vQmxvYi5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkJsb2JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEJsb2JfanNfMS5Qb255ZmlsbEJsb2I7IH0gfSk7XG52YXIgVGV4dEVuY29kZXJEZWNvZGVyX2pzXzEgPSByZXF1aXJlKFwiLi9UZXh0RW5jb2RlckRlY29kZXIuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJUZXh0RW5jb2RlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gVGV4dEVuY29kZXJEZWNvZGVyX2pzXzEuUG9ueWZpbGxUZXh0RW5jb2RlcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRleHREZWNvZGVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBUZXh0RW5jb2RlckRlY29kZXJfanNfMS5Qb255ZmlsbFRleHREZWNvZGVyOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYnRvYVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gVGV4dEVuY29kZXJEZWNvZGVyX2pzXzEuUG9ueWZpbGxCdG9hOyB9IH0pO1xudmFyIFVSTF9qc18xID0gcmVxdWlyZShcIi4vVVJMLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVVJMXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBVUkxfanNfMS5Qb255ZmlsbFVSTDsgfSB9KTtcbnZhciBVUkxTZWFyY2hQYXJhbXNfanNfMSA9IHJlcXVpcmUoXCIuL1VSTFNlYXJjaFBhcmFtcy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlVSTFNlYXJjaFBhcmFtc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gVVJMU2VhcmNoUGFyYW1zX2pzXzEuUG9ueWZpbGxVUkxTZWFyY2hQYXJhbXM7IH0gfSk7XG52YXIgV3JpdGFibGVTdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL1dyaXRhYmxlU3RyZWFtLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiV3JpdGFibGVTdHJlYW1cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFdyaXRhYmxlU3RyZWFtX2pzXzEuUG9ueWZpbGxXcml0YWJsZVN0cmVhbTsgfSB9KTtcbnZhciBUcmFuc2Zvcm1TdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL1RyYW5zZm9ybVN0cmVhbS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRyYW5zZm9ybVN0cmVhbVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gVHJhbnNmb3JtU3RyZWFtX2pzXzEuUG9ueWZpbGxUcmFuc2Zvcm1TdHJlYW07IH0gfSk7XG52YXIgQ29tcHJlc3Npb25TdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL0NvbXByZXNzaW9uU3RyZWFtLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ29tcHJlc3Npb25TdHJlYW1cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIENvbXByZXNzaW9uU3RyZWFtX2pzXzEuUG9ueWZpbGxDb21wcmVzc2lvblN0cmVhbTsgfSB9KTtcbnZhciBEZWNvbXByZXNzaW9uU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9EZWNvbXByZXNzaW9uU3RyZWFtLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRGVjb21wcmVzc2lvblN0cmVhbVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gRGVjb21wcmVzc2lvblN0cmVhbV9qc18xLlBvbnlmaWxsRGVjb21wcmVzc2lvblN0cmVhbTsgfSB9KTtcbnZhciBJdGVyYXRvck9iamVjdF9qc18xID0gcmVxdWlyZShcIi4vSXRlcmF0b3JPYmplY3QuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJJdGVyYXRvck9iamVjdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gSXRlcmF0b3JPYmplY3RfanNfMS5Qb255ZmlsbEl0ZXJhdG9yT2JqZWN0OyB9IH0pO1xudmFyIFRleHRFbmNvZGVyRGVjb2RlclN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vVGV4dEVuY29kZXJEZWNvZGVyU3RyZWFtLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVGV4dERlY29kZXJTdHJlYW1cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFRleHRFbmNvZGVyRGVjb2RlclN0cmVhbV9qc18xLlBvbnlmaWxsVGV4dERlY29kZXJTdHJlYW07IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJUZXh0RW5jb2RlclN0cmVhbVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gVGV4dEVuY29kZXJEZWNvZGVyU3RyZWFtX2pzXzEuUG9ueWZpbGxUZXh0RW5jb2RlclN0cmVhbTsgfSB9KTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/utils.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/utils.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getHeadersObj = getHeadersObj;\nexports.defaultHeadersSerializer = defaultHeadersSerializer;\nexports.fakePromise = fakePromise;\nexports.isArrayBufferView = isArrayBufferView;\nexports.isNodeReadable = isNodeReadable;\nexports.createDeferredPromise = createDeferredPromise;\nexports.isIterable = isIterable;\nfunction isHeadersInstance(obj) {\n    return obj?.forEach != null;\n}\nfunction getHeadersObj(headers) {\n    if (headers == null || !isHeadersInstance(headers)) {\n        return headers;\n    }\n    const obj = {};\n    headers.forEach((value, key) => {\n        obj[key] = value;\n    });\n    return obj;\n}\nfunction defaultHeadersSerializer(headers, onContentLength) {\n    const headerArray = [];\n    headers.forEach((value, key) => {\n        if (onContentLength && key === 'content-length') {\n            onContentLength(value);\n        }\n        headerArray.push(`${key}: ${value}`);\n    });\n    return headerArray;\n}\nfunction isPromise(val) {\n    return val?.then != null;\n}\nfunction fakePromise(value) {\n    if (isPromise(value)) {\n        return value;\n    }\n    // Write a fake promise to avoid the promise constructor\n    // being called with `new Promise` in the browser.\n    return {\n        then(resolve) {\n            if (resolve) {\n                const callbackResult = resolve(value);\n                if (isPromise(callbackResult)) {\n                    return callbackResult;\n                }\n                return fakePromise(callbackResult);\n            }\n            return this;\n        },\n        catch() {\n            return this;\n        },\n        finally(cb) {\n            if (cb) {\n                const callbackResult = cb();\n                if (isPromise(callbackResult)) {\n                    return callbackResult.then(() => value);\n                }\n                return fakePromise(value);\n            }\n            return this;\n        },\n        [Symbol.toStringTag]: 'Promise',\n    };\n}\nfunction isArrayBufferView(obj) {\n    return obj != null && obj.buffer != null && obj.byteLength != null && obj.byteOffset != null;\n}\nfunction isNodeReadable(obj) {\n    return obj != null && obj.pipe != null;\n}\nfunction createDeferredPromise() {\n    let resolveFn;\n    let rejectFn;\n    const promise = new Promise(function deferredPromiseExecutor(resolve, reject) {\n        resolveFn = resolve;\n        rejectFn = reject;\n    });\n    return {\n        promise,\n        get resolve() {\n            return resolveFn;\n        },\n        get reject() {\n            return rejectFn;\n        },\n    };\n}\nfunction isIterable(value) {\n    return value?.[Symbol.iterator] != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQixnQ0FBZ0M7QUFDaEMsbUJBQW1CO0FBQ25CLHlCQUF5QjtBQUN6QixzQkFBc0I7QUFDdEIsNkJBQTZCO0FBQzdCLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLElBQUksSUFBSSxNQUFNO0FBQzFDLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvc2VydmVyL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvdXRpbHMuanM/ZGFiMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0SGVhZGVyc09iaiA9IGdldEhlYWRlcnNPYmo7XG5leHBvcnRzLmRlZmF1bHRIZWFkZXJzU2VyaWFsaXplciA9IGRlZmF1bHRIZWFkZXJzU2VyaWFsaXplcjtcbmV4cG9ydHMuZmFrZVByb21pc2UgPSBmYWtlUHJvbWlzZTtcbmV4cG9ydHMuaXNBcnJheUJ1ZmZlclZpZXcgPSBpc0FycmF5QnVmZmVyVmlldztcbmV4cG9ydHMuaXNOb2RlUmVhZGFibGUgPSBpc05vZGVSZWFkYWJsZTtcbmV4cG9ydHMuY3JlYXRlRGVmZXJyZWRQcm9taXNlID0gY3JlYXRlRGVmZXJyZWRQcm9taXNlO1xuZXhwb3J0cy5pc0l0ZXJhYmxlID0gaXNJdGVyYWJsZTtcbmZ1bmN0aW9uIGlzSGVhZGVyc0luc3RhbmNlKG9iaikge1xuICAgIHJldHVybiBvYmo/LmZvckVhY2ggIT0gbnVsbDtcbn1cbmZ1bmN0aW9uIGdldEhlYWRlcnNPYmooaGVhZGVycykge1xuICAgIGlmIChoZWFkZXJzID09IG51bGwgfHwgIWlzSGVhZGVyc0luc3RhbmNlKGhlYWRlcnMpKSB7XG4gICAgICAgIHJldHVybiBoZWFkZXJzO1xuICAgIH1cbiAgICBjb25zdCBvYmogPSB7fTtcbiAgICBoZWFkZXJzLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gb2JqO1xufVxuZnVuY3Rpb24gZGVmYXVsdEhlYWRlcnNTZXJpYWxpemVyKGhlYWRlcnMsIG9uQ29udGVudExlbmd0aCkge1xuICAgIGNvbnN0IGhlYWRlckFycmF5ID0gW107XG4gICAgaGVhZGVycy5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgIGlmIChvbkNvbnRlbnRMZW5ndGggJiYga2V5ID09PSAnY29udGVudC1sZW5ndGgnKSB7XG4gICAgICAgICAgICBvbkNvbnRlbnRMZW5ndGgodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGhlYWRlckFycmF5LnB1c2goYCR7a2V5fTogJHt2YWx1ZX1gKTtcbiAgICB9KTtcbiAgICByZXR1cm4gaGVhZGVyQXJyYXk7XG59XG5mdW5jdGlvbiBpc1Byb21pc2UodmFsKSB7XG4gICAgcmV0dXJuIHZhbD8udGhlbiAhPSBudWxsO1xufVxuZnVuY3Rpb24gZmFrZVByb21pc2UodmFsdWUpIHtcbiAgICBpZiAoaXNQcm9taXNlKHZhbHVlKSkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIC8vIFdyaXRlIGEgZmFrZSBwcm9taXNlIHRvIGF2b2lkIHRoZSBwcm9taXNlIGNvbnN0cnVjdG9yXG4gICAgLy8gYmVpbmcgY2FsbGVkIHdpdGggYG5ldyBQcm9taXNlYCBpbiB0aGUgYnJvd3Nlci5cbiAgICByZXR1cm4ge1xuICAgICAgICB0aGVuKHJlc29sdmUpIHtcbiAgICAgICAgICAgIGlmIChyZXNvbHZlKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2FsbGJhY2tSZXN1bHQgPSByZXNvbHZlKHZhbHVlKTtcbiAgICAgICAgICAgICAgICBpZiAoaXNQcm9taXNlKGNhbGxiYWNrUmVzdWx0KSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2FsbGJhY2tSZXN1bHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBmYWtlUHJvbWlzZShjYWxsYmFja1Jlc3VsdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfSxcbiAgICAgICAgY2F0Y2goKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfSxcbiAgICAgICAgZmluYWxseShjYikge1xuICAgICAgICAgICAgaWYgKGNiKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2FsbGJhY2tSZXN1bHQgPSBjYigpO1xuICAgICAgICAgICAgICAgIGlmIChpc1Byb21pc2UoY2FsbGJhY2tSZXN1bHQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjYWxsYmFja1Jlc3VsdC50aGVuKCgpID0+IHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZha2VQcm9taXNlKHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgICAgICBbU3ltYm9sLnRvU3RyaW5nVGFnXTogJ1Byb21pc2UnLFxuICAgIH07XG59XG5mdW5jdGlvbiBpc0FycmF5QnVmZmVyVmlldyhvYmopIHtcbiAgICByZXR1cm4gb2JqICE9IG51bGwgJiYgb2JqLmJ1ZmZlciAhPSBudWxsICYmIG9iai5ieXRlTGVuZ3RoICE9IG51bGwgJiYgb2JqLmJ5dGVPZmZzZXQgIT0gbnVsbDtcbn1cbmZ1bmN0aW9uIGlzTm9kZVJlYWRhYmxlKG9iaikge1xuICAgIHJldHVybiBvYmogIT0gbnVsbCAmJiBvYmoucGlwZSAhPSBudWxsO1xufVxuZnVuY3Rpb24gY3JlYXRlRGVmZXJyZWRQcm9taXNlKCkge1xuICAgIGxldCByZXNvbHZlRm47XG4gICAgbGV0IHJlamVjdEZuO1xuICAgIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiBkZWZlcnJlZFByb21pc2VFeGVjdXRvcihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgcmVzb2x2ZUZuID0gcmVzb2x2ZTtcbiAgICAgICAgcmVqZWN0Rm4gPSByZWplY3Q7XG4gICAgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvbWlzZSxcbiAgICAgICAgZ2V0IHJlc29sdmUoKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzb2x2ZUZuO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgcmVqZWN0KCkge1xuICAgICAgICAgICAgcmV0dXJuIHJlamVjdEZuO1xuICAgICAgICB9LFxuICAgIH07XG59XG5mdW5jdGlvbiBpc0l0ZXJhYmxlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlPy5bU3ltYm9sLml0ZXJhdG9yXSAhPSBudWxsO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@whatwg-node/server/node_modules/@whatwg-node/node-fetch/cjs/utils.js\n");

/***/ })

};
;