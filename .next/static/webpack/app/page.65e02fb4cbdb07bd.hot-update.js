"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/helpers.ts":
/*!************************!*\
  !*** ./src/helpers.ts ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   closePopup: () => (/* binding */ closePopup),\n/* harmony export */   getIntent: () => (/* binding */ getIntent),\n/* harmony export */   predictFunction: () => (/* binding */ predictFunction),\n/* harmony export */   renderFunctionUI: () => (/* binding */ renderFunctionUI)\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"(app-pages-browser)/./src/config.ts\");\n\n/**\n * A helper function use to force close the Integry dialogs.\n */ function closePopup() {\n    const popup = document.querySelector('[id^=\"x-integry-modal\"]');\n    if (popup) {\n        popup.remove();\n    }\n}\n/**\n * Helper function that actually calls the Integry SDK's renderFunctionUI method\n * and chains it to further call the invokeFunction method.\n */ function renderFunctionUI(integry, func, handler) {\n    integry.renderFunctionUI(func.name, func.arguments).then((result)=>{\n        integry.invokeFunction(result).then((response)=>{\n            closePopup();\n            handler(response);\n        }).catch((error)=>{\n            console.error(\"Error:\", error);\n        });\n    }).catch((error)=>{\n        console.error(\"Error:\", error);\n    });\n}\nasync function predictFunction(appKey, hash, userId, predictFunction, predictArguments, prompt) {\n    // Construct the URL with the provided parameters\n    const url = \"\".concat(_config__WEBPACK_IMPORTED_MODULE_0__.integryFunctionsAPIEndpoint, \"/?app_key=\").concat(encodeURIComponent(appKey), \"&hash=\").concat(encodeURIComponent(hash), \"&user_id=\").concat(encodeURIComponent(userId), \"&predict_function=\").concat(predictFunction, \"&prompt=\").concat(encodeURIComponent(prompt), \"&include=meta&predict_arguments=\").concat(predictArguments);\n    try {\n        const response = await fetch(url, {\n            method: \"GET\"\n        });\n        if (!response.ok) {\n            throw new Error(\"Network response was not ok: \" + response.statusText);\n        }\n        const data = await response.json(); // Parse the JSON from the response\n        return data; // Return the data\n    } catch (error) {\n        console.error(\"There was a problem with the fetch operation:\", error);\n        throw error; // Rethrow the error if needed\n    }\n}\n/**\n * Returns the possible intent from user query\n *\n */ function getIntent(query) {\n    if (query.includes(\"disconnect\") && query.split(\".\")[1] && query.split(\".\").length === 2) {\n        return \"disconnect\";\n    } else if (query.includes(\"connect\") && query.split(\".\")[1] && query.split(\".\").length === 2) {\n        return \"connect\";\n    } else {\n        return \"default\";\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9oZWxwZXJzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXVEO0FBQ3ZEOztDQUVDLEdBQ00sU0FBU0M7SUFDZCxNQUFNQyxRQUFRQyxTQUFTQyxhQUFhLENBQUM7SUFDckMsSUFBSUYsT0FBTztRQUNUQSxNQUFNRyxNQUFNO0lBQ2Q7QUFDRjtBQUVBOzs7Q0FHQyxHQUNNLFNBQVNDLGlCQUFpQkMsT0FBWSxFQUFFQyxJQUFTLEVBQUVDLE9BQVk7SUFDcEVGLFFBQ0dELGdCQUFnQixDQUFDRSxLQUFLRSxJQUFJLEVBQUVGLEtBQUtHLFNBQVMsRUFDMUNDLElBQUksQ0FBQyxDQUFDQztRQUNMTixRQUNHTyxjQUFjLENBQUNELFFBQ2ZELElBQUksQ0FBQyxDQUFDRztZQUNMZDtZQUNBUSxRQUFRTTtRQUNWLEdBQ0NDLEtBQUssQ0FBQyxDQUFDQztZQUNOQyxRQUFRRCxLQUFLLENBQUMsVUFBVUE7UUFDMUI7SUFDSixHQUNDRCxLQUFLLENBQUMsQ0FBQ0M7UUFDTkMsUUFBUUQsS0FBSyxDQUFDLFVBQVVBO0lBQzFCO0FBQ0o7QUFFTyxlQUFlRSxnQkFDcEJDLE1BQWMsRUFDZEMsSUFBWSxFQUNaQyxNQUFjLEVBQ2RILGVBQXdCLEVBQ3hCSSxnQkFBeUIsRUFDekJDLE1BQWM7SUFFZCxpREFBaUQ7SUFDakQsTUFBTUMsTUFBTSxHQUEyQ0MsT0FBeEMxQixnRUFBMkJBLEVBQUMsY0FFakMwQixPQUY2Q0EsbUJBQ3JETixTQUNBLFVBQTRDTSxPQUFwQ0EsbUJBQW1CTCxPQUFNLGFBRWJGLE9BRndCTyxtQkFDNUNKLFNBQ0Esc0JBQThDSSxPQUExQlAsaUJBQWdCLFlBRUZJLE9BRllHLG1CQUM5Q0YsU0FDQSxvQ0FBbUQsT0FBakJEO0lBRXBDLElBQUk7UUFDRixNQUFNUixXQUFXLE1BQU1ZLE1BQU1GLEtBQUs7WUFDaENHLFFBQVE7UUFDVjtRQUVBLElBQUksQ0FBQ2IsU0FBU2MsRUFBRSxFQUFFO1lBQ2hCLE1BQU0sSUFBSUMsTUFBTSxrQ0FBa0NmLFNBQVNnQixVQUFVO1FBQ3ZFO1FBRUEsTUFBTUMsT0FBTyxNQUFNakIsU0FBU2tCLElBQUksSUFBSSxtQ0FBbUM7UUFDdkUsT0FBT0QsTUFBTSxrQkFBa0I7SUFDakMsRUFBRSxPQUFPZixPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxpREFBaURBO1FBQy9ELE1BQU1BLE9BQU8sOEJBQThCO0lBQzdDO0FBQ0Y7QUFFQTs7O0NBR0MsR0FDTSxTQUFTaUIsVUFBVUMsS0FBYTtJQUNyQyxJQUNFQSxNQUFNQyxRQUFRLENBQUMsaUJBQ2ZELE1BQU1FLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUNuQkYsTUFBTUUsS0FBSyxDQUFDLEtBQUtDLE1BQU0sS0FBSyxHQUM1QjtRQUNBLE9BQU87SUFDVCxPQUFPLElBQ0xILE1BQU1DLFFBQVEsQ0FBQyxjQUNmRCxNQUFNRSxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsSUFDbkJGLE1BQU1FLEtBQUssQ0FBQyxLQUFLQyxNQUFNLEtBQUssR0FDNUI7UUFDQSxPQUFPO0lBQ1QsT0FBTztRQUNMLE9BQU87SUFDVDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2hlbHBlcnMudHM/MWVkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbnRlZ3J5RnVuY3Rpb25zQVBJRW5kcG9pbnQgfSBmcm9tIFwiLi9jb25maWdcIjtcbi8qKlxuICogQSBoZWxwZXIgZnVuY3Rpb24gdXNlIHRvIGZvcmNlIGNsb3NlIHRoZSBJbnRlZ3J5IGRpYWxvZ3MuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjbG9zZVBvcHVwKCkge1xuICBjb25zdCBwb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tpZF49XCJ4LWludGVncnktbW9kYWxcIl0nKTtcbiAgaWYgKHBvcHVwKSB7XG4gICAgcG9wdXAucmVtb3ZlKCk7XG4gIH1cbn1cblxuLyoqXG4gKiBIZWxwZXIgZnVuY3Rpb24gdGhhdCBhY3R1YWxseSBjYWxscyB0aGUgSW50ZWdyeSBTREsncyByZW5kZXJGdW5jdGlvblVJIG1ldGhvZFxuICogYW5kIGNoYWlucyBpdCB0byBmdXJ0aGVyIGNhbGwgdGhlIGludm9rZUZ1bmN0aW9uIG1ldGhvZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlckZ1bmN0aW9uVUkoaW50ZWdyeTogYW55LCBmdW5jOiBhbnksIGhhbmRsZXI6IGFueSkge1xuICBpbnRlZ3J5XG4gICAgLnJlbmRlckZ1bmN0aW9uVUkoZnVuYy5uYW1lLCBmdW5jLmFyZ3VtZW50cylcbiAgICAudGhlbigocmVzdWx0OiBhbnkpID0+IHtcbiAgICAgIGludGVncnlcbiAgICAgICAgLmludm9rZUZ1bmN0aW9uKHJlc3VsdClcbiAgICAgICAgLnRoZW4oKHJlc3BvbnNlOiBhbnkpID0+IHtcbiAgICAgICAgICBjbG9zZVBvcHVwKCk7XG4gICAgICAgICAgaGFuZGxlcihyZXNwb25zZSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoZXJyb3I6IGFueSkgPT4ge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvcjpcIiwgZXJyb3IpO1xuICAgICAgICB9KTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyb3I6IGFueSkgPT4ge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yOlwiLCBlcnJvcik7XG4gICAgfSk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBwcmVkaWN0RnVuY3Rpb24oXG4gIGFwcEtleTogc3RyaW5nLFxuICBoYXNoOiBzdHJpbmcsXG4gIHVzZXJJZDogc3RyaW5nLFxuICBwcmVkaWN0RnVuY3Rpb246IGJvb2xlYW4sXG4gIHByZWRpY3RBcmd1bWVudHM6IGJvb2xlYW4sXG4gIHByb21wdDogc3RyaW5nXG4pIHtcbiAgLy8gQ29uc3RydWN0IHRoZSBVUkwgd2l0aCB0aGUgcHJvdmlkZWQgcGFyYW1ldGVyc1xuICBjb25zdCB1cmwgPSBgJHtpbnRlZ3J5RnVuY3Rpb25zQVBJRW5kcG9pbnR9Lz9hcHBfa2V5PSR7ZW5jb2RlVVJJQ29tcG9uZW50KFxuICAgIGFwcEtleVxuICApfSZoYXNoPSR7ZW5jb2RlVVJJQ29tcG9uZW50KGhhc2gpfSZ1c2VyX2lkPSR7ZW5jb2RlVVJJQ29tcG9uZW50KFxuICAgIHVzZXJJZFxuICApfSZwcmVkaWN0X2Z1bmN0aW9uPSR7cHJlZGljdEZ1bmN0aW9ufSZwcm9tcHQ9JHtlbmNvZGVVUklDb21wb25lbnQoXG4gICAgcHJvbXB0XG4gICl9JmluY2x1ZGU9bWV0YSZwcmVkaWN0X2FyZ3VtZW50cz0ke3ByZWRpY3RBcmd1bWVudHN9YDtcblxuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7XG4gICAgICBtZXRob2Q6IFwiR0VUXCIsIC8vIERlZmF1bHQgbWV0aG9kIGlzIEdFVFxuICAgIH0pO1xuXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTmV0d29yayByZXNwb25zZSB3YXMgbm90IG9rOiBcIiArIHJlc3BvbnNlLnN0YXR1c1RleHQpO1xuICAgIH1cblxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7IC8vIFBhcnNlIHRoZSBKU09OIGZyb20gdGhlIHJlc3BvbnNlXG4gICAgcmV0dXJuIGRhdGE7IC8vIFJldHVybiB0aGUgZGF0YVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJUaGVyZSB3YXMgYSBwcm9ibGVtIHdpdGggdGhlIGZldGNoIG9wZXJhdGlvbjpcIiwgZXJyb3IpO1xuICAgIHRocm93IGVycm9yOyAvLyBSZXRocm93IHRoZSBlcnJvciBpZiBuZWVkZWRcbiAgfVxufVxuXG4vKipcbiAqIFJldHVybnMgdGhlIHBvc3NpYmxlIGludGVudCBmcm9tIHVzZXIgcXVlcnlcbiAqXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRJbnRlbnQocXVlcnk6IHN0cmluZykge1xuICBpZiAoXG4gICAgcXVlcnkuaW5jbHVkZXMoXCJkaXNjb25uZWN0XCIpICYmXG4gICAgcXVlcnkuc3BsaXQoXCIuXCIpWzFdICYmXG4gICAgcXVlcnkuc3BsaXQoXCIuXCIpLmxlbmd0aCA9PT0gMlxuICApIHtcbiAgICByZXR1cm4gXCJkaXNjb25uZWN0XCI7XG4gIH0gZWxzZSBpZiAoXG4gICAgcXVlcnkuaW5jbHVkZXMoXCJjb25uZWN0XCIpICYmXG4gICAgcXVlcnkuc3BsaXQoXCIuXCIpWzFdICYmXG4gICAgcXVlcnkuc3BsaXQoXCIuXCIpLmxlbmd0aCA9PT0gMlxuICApIHtcbiAgICByZXR1cm4gXCJjb25uZWN0XCI7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIFwiZGVmYXVsdFwiO1xuICB9XG59XG4iXSwibmFtZXMiOlsiaW50ZWdyeUZ1bmN0aW9uc0FQSUVuZHBvaW50IiwiY2xvc2VQb3B1cCIsInBvcHVwIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwicmVtb3ZlIiwicmVuZGVyRnVuY3Rpb25VSSIsImludGVncnkiLCJmdW5jIiwiaGFuZGxlciIsIm5hbWUiLCJhcmd1bWVudHMiLCJ0aGVuIiwicmVzdWx0IiwiaW52b2tlRnVuY3Rpb24iLCJyZXNwb25zZSIsImNhdGNoIiwiZXJyb3IiLCJjb25zb2xlIiwicHJlZGljdEZ1bmN0aW9uIiwiYXBwS2V5IiwiaGFzaCIsInVzZXJJZCIsInByZWRpY3RBcmd1bWVudHMiLCJwcm9tcHQiLCJ1cmwiLCJlbmNvZGVVUklDb21wb25lbnQiLCJmZXRjaCIsIm1ldGhvZCIsIm9rIiwiRXJyb3IiLCJzdGF0dXNUZXh0IiwiZGF0YSIsImpzb24iLCJnZXRJbnRlbnQiLCJxdWVyeSIsImluY2x1ZGVzIiwic3BsaXQiLCJsZW5ndGgiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/helpers.ts\n"));

/***/ })

});